
const getTensorBuffer = (safetensorBuffer, tensorMetadata) => {
    return safetensorBuffer.subarray(...tensorMetadata.data_offsets);
  }

const getTensorMetadata = (safetensorBuffer) => {
    const metadataLength = Number(new DataView(safetensorBuffer.buffer).getBigUint64(0, true));
    const metadata = JSON.parse(new TextDecoder("utf8").decode(safetensorBuffer.subarray(8, 8 + metadataLength)));
    return Object.fromEntries(Object.entries(metadata).filter(([k, v]) => k !== "__metadata__").map(([k, v]) => [k, {...v, data_offsets: v.data_offsets.map(x => 8 + metadataLength + x)}]));
  };

const createEmptyBuf = (device, size) => {
    return device.createBuffer({size, usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST });
};

const createInfinityUniformBuf = (device) => {
  const size = 4;
  const buf = device.createBuffer({
    mappedAtCreation: true,
    size,
    usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST
  });
  new Float32Array(buf.getMappedRange())[0] = Infinity;
  buf.unmap();
  return buf;
};

const createWeightBuf = (device, size, data) => {
  const buf = device.createBuffer({ mappedAtCreation: true, size, usage: GPUBufferUsage.STORAGE });
  new Uint8Array(buf.getMappedRange()).set(data);
  buf.unmap();
  return buf;
};

const addComputePass = (device, commandEncoder, pipeline, layout, infinityUniformBuf, bufs, workgroup) => {
  const bindGroup = device.createBindGroup({
    layout: layout,
    entries: [
      { binding: 0, resource: { buffer: infinityUniformBuf } },
      ...bufs.map((buffer, index) => ({ binding: index + 1, resource: { buffer } }))
    ]
  });

  const passEncoder = commandEncoder.beginComputePass();
  passEncoder.setPipeline(pipeline);
  passEncoder.setBindGroup(0, bindGroup);
  passEncoder.dispatchWorkgroups(...workgroup);
  passEncoder.end();
};

const r_80_16_5 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
var<workgroup> temp0: array<i32, 16>;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 80 */
  var lidx0 = i32(lindex.x); /* 16 */
  var alu0 = (gidx0+(lidx0*5)+-74);
  var alu1 = -select(alu0,0,(alu0<0));
  temp0[lidx0] = -select(alu1,-5,(alu1<-5));
  workgroupBarrier();
  if (((bool(lidx0))!=true)) {
    var acc0 = 0;
    for (var ridx0 = 0; ridx0 < 16; ridx0++) {
      var val0 = temp0[ridx0];
      acc0 = (acc0+val0);
    }
    data0[gidx0] = ((f32((acc0+-1)))+0.5f);
  }
}`;

const r_5_8_10_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var lidx0 = i32(lindex.x); /* 8 */
  var alu0 = (gidx0<<1);
  data0[(lidx0+(gidx0<<3))] = ((f32((alu0+((lidx0+1)>>2)+alu0+((lidx0+2)>>2)+alu0+((lidx0+3)>>2)+alu0+(lidx0>>2))))+0.5f);
}`;

const r_5_4_20 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var alu0 = (lidx0+(gidx0<<2));
  data0[alu0] = ((f32((select(0,1,((alu0<18)!=true))+select(0,1,((alu0<19)!=true))+select(0,1,((alu0<17)!=true))+select(0,1,((gidx0<4)!=true))+select(0,1,((alu0<15)!=true))+select(0,1,((alu0<14)!=true))+select(0,1,((alu0<13)!=true))+select(0,1,((gidx0<3)!=true))+select(0,1,((alu0<11)!=true))+select(0,1,((alu0<10)!=true))+select(0,1,((alu0<9)!=true))+select(0,1,((gidx0<2)!=true))+select(0,1,((alu0<7)!=true))+select(0,1,((alu0<6)!=true))+select(0,1,((alu0<5)!=true))+select(0,1,((gidx0<1)!=true))+select(0,1,((alu0<3)!=true))+select(0,1,((alu0<2)!=true))+select(0,1,(((gidx0+lidx0)<1)!=true)))))+0.5f);
}`;

const r_4_40_5_8_16_3_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 40 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (((gidx0+lidx1)<1)!=true);
  var alu1 = (((gidx1+lidx0)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 3; ridx0++) {
    var alu2 = ((gidx1*10240)+(lidx0*1280)+(ridx0*409600)+(gidx0<<7)+(lidx1<<3));
    var alu3 = ((gidx2*108)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-641)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-639)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+27)];
    var val7 = data2[(alu3+30)];
    var val8 = data2[(alu3+54)];
    var val9 = data2[(alu3+57)];
    var val10 = data2[(alu3+81)];
    var val11 = data2[(alu3+84)];
    var val12 = select(0.0f, data1[(alu2+-637)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-635)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+639)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+641)];
    var val19 = data2[(alu3+33)];
    var val20 = data2[(alu3+60)];
    var val21 = data2[(alu3+87)];
    var val22 = data1[(alu2+643)];
    var val23 = data1[(alu2+645)];
    var val24 = select(0.0f, data1[(alu2+-640)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+28)];
    var val27 = data2[(alu3+55)];
    var val28 = data2[(alu3+82)];
    var val29 = select(0.0f, data1[(alu2+-638)], alu1);
    var val30 = select(0.0f, data1[(alu2+-636)], alu1);
    var val31 = select(0.0f, data1[(alu2+-634)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+31)];
    var val35 = data2[(alu3+58)];
    var val36 = data2[(alu3+85)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+640)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+34)];
    var val43 = data2[(alu3+61)];
    var val44 = data2[(alu3+88)];
    var val45 = data1[(alu2+642)];
    var val46 = data1[(alu2+644)];
    var val47 = data1[(alu2+646)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+29)];
    var val50 = data2[(alu3+56)];
    var val51 = data2[(alu3+83)];
    var val52 = select(0.0f, data1[(alu2+-633)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+32)];
    var val55 = data2[(alu3+59)];
    var val56 = data2[(alu3+86)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+35)];
    var val60 = data2[(alu3+62)];
    var val61 = data2[(alu3+89)];
    var val62 = data1[(alu2+647)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = (gidx2<<2);
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*2560)+(gidx2*409600)+(gidx0<<6)+(lidx0*320)+(lidx1<<2));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+102400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+204800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+307200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+102401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+204801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+307201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+102402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+204802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+307202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+102403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+204803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+307203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const E_175_16_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 175 */
  var lidx0 = i32(lindex.x); /* 16 */
  var alu0 = ((gidx0*48)+(lidx0*3));
  var alu1 = (lidx0+(gidx0<<4));
  var alu2 = (alu0<6400);
  var alu3 = (alu1<2133);
  var alu4 = (alu0<6398);
  var alu5 = (alu0<8000);
  var alu6 = (alu0<7999);
  var alu7 = (alu1<2666);
  data0[alu0] = (f32((select(0,8,alu2)+select(0,16,(alu5&(alu2!=true)))+select(0,32,(alu5!=true)))));
  data0[(alu0+1)] = (f32((select(0,8,alu3)+select(0,16,(alu6&(alu3!=true)))+select(0,32,(alu6!=true)))));
  data0[(alu0+2)] = (f32((select(0,8,alu4)+select(0,16,(alu7&(alu4!=true)))+select(0,32,(alu7!=true)))));
}`;

const r_8_10_5_16_8_16_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 10 */
  var gidx2 = i32(gindex.z); /* 8 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (((gidx0+lidx1)<1)!=true);
  var alu1 = (((gidx1+lidx0)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = ((gidx1*10240)+(lidx0*640)+(ridx0*102400)+(gidx0<<6)+(lidx1<<3));
    var alu3 = ((gidx2*576)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-321)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-319)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+144)];
    var val7 = data2[(alu3+147)];
    var val8 = data2[(alu3+288)];
    var val9 = data2[(alu3+291)];
    var val10 = data2[(alu3+432)];
    var val11 = data2[(alu3+435)];
    var val12 = select(0.0f, data1[(alu2+-317)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-315)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+319)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+321)];
    var val19 = data2[(alu3+150)];
    var val20 = data2[(alu3+294)];
    var val21 = data2[(alu3+438)];
    var val22 = data1[(alu2+323)];
    var val23 = data1[(alu2+325)];
    var val24 = select(0.0f, data1[(alu2+-320)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+145)];
    var val27 = data2[(alu3+289)];
    var val28 = data2[(alu3+433)];
    var val29 = select(0.0f, data1[(alu2+-318)], alu1);
    var val30 = select(0.0f, data1[(alu2+-316)], alu1);
    var val31 = select(0.0f, data1[(alu2+-314)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+148)];
    var val35 = data2[(alu3+292)];
    var val36 = data2[(alu3+436)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+320)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+151)];
    var val43 = data2[(alu3+295)];
    var val44 = data2[(alu3+439)];
    var val45 = data1[(alu2+322)];
    var val46 = data1[(alu2+324)];
    var val47 = data1[(alu2+326)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+146)];
    var val50 = data2[(alu3+290)];
    var val51 = data2[(alu3+434)];
    var val52 = select(0.0f, data1[(alu2+-313)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+149)];
    var val55 = data2[(alu3+293)];
    var val56 = data2[(alu3+437)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+152)];
    var val60 = data2[(alu3+296)];
    var val61 = data2[(alu3+440)];
    var val62 = data1[(alu2+327)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = (gidx2<<2);
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*2560)+(gidx2*102400)+(gidx0<<5)+(lidx0*160)+(lidx1<<2));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+25600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+51200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+76800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+25601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+51201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+76801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+25602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+51202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+76802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+25603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+51203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+76803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_400_8_16_4_4_32 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 400 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var alu2 = (alu0+alu1);
  var alu3 = (lidx0<<7);
  var val0 = data1[(alu2+25600)];
  var val1 = data2[(alu3+1)];
  var val2 = data1[alu2];
  var val3 = data2[alu3];
  var val4 = data2[(alu3+33)];
  var val5 = data2[(alu3+32)];
  var val6 = data2[(alu3+65)];
  var val7 = data2[(alu3+64)];
  var val8 = data2[(alu3+97)];
  var val9 = data2[(alu3+96)];
  var val10 = data1[(alu2+1)];
  var val11 = data1[(alu2+25601)];
  var val12 = data1[(alu2+2)];
  var val13 = data1[(alu2+25602)];
  var val14 = data1[(alu2+3)];
  var val15 = data1[(alu2+25603)];
  var val16 = data1[(alu2+51200)];
  var val17 = data2[(alu3+2)];
  var val18 = data2[(alu3+34)];
  var val19 = data2[(alu3+66)];
  var val20 = data2[(alu3+98)];
  var val21 = data1[(alu2+51201)];
  var val22 = data1[(alu2+51202)];
  var val23 = data1[(alu2+51203)];
  var val24 = data1[(alu2+76800)];
  var val25 = data2[(alu3+3)];
  var val26 = data2[(alu3+35)];
  var val27 = data2[(alu3+67)];
  var val28 = data2[(alu3+99)];
  var val29 = data1[(alu2+76801)];
  var val30 = data1[(alu2+76802)];
  var val31 = data1[(alu2+76803)];
  var val32 = data1[(alu2+102400)];
  var val33 = data2[(alu3+4)];
  var val34 = data2[(alu3+36)];
  var val35 = data2[(alu3+68)];
  var val36 = data2[(alu3+100)];
  var val37 = data1[(alu2+102401)];
  var val38 = data1[(alu2+102402)];
  var val39 = data1[(alu2+102403)];
  var val40 = data1[(alu2+128000)];
  var val41 = data2[(alu3+5)];
  var val42 = data2[(alu3+37)];
  var val43 = data2[(alu3+69)];
  var val44 = data2[(alu3+101)];
  var val45 = data1[(alu2+128001)];
  var val46 = data1[(alu2+128002)];
  var val47 = data1[(alu2+128003)];
  var val48 = data1[(alu2+153600)];
  var val49 = data2[(alu3+6)];
  var val50 = data2[(alu3+38)];
  var val51 = data2[(alu3+70)];
  var val52 = data2[(alu3+102)];
  var val53 = data1[(alu2+153601)];
  var val54 = data1[(alu2+153602)];
  var val55 = data1[(alu2+153603)];
  var val56 = data1[(alu2+179200)];
  var val57 = data2[(alu3+7)];
  var val58 = data2[(alu3+39)];
  var val59 = data2[(alu3+71)];
  var val60 = data2[(alu3+103)];
  var val61 = data1[(alu2+179201)];
  var val62 = data1[(alu2+179202)];
  var val63 = data1[(alu2+179203)];
  var val64 = data1[(alu2+204800)];
  var val65 = data2[(alu3+8)];
  var val66 = data2[(alu3+40)];
  var val67 = data2[(alu3+72)];
  var val68 = data2[(alu3+104)];
  var val69 = data1[(alu2+204801)];
  var val70 = data1[(alu2+204802)];
  var val71 = data1[(alu2+204803)];
  var val72 = data1[(alu2+230400)];
  var val73 = data2[(alu3+9)];
  var val74 = data2[(alu3+41)];
  var val75 = data2[(alu3+73)];
  var val76 = data2[(alu3+105)];
  var val77 = data1[(alu2+230401)];
  var val78 = data1[(alu2+230402)];
  var val79 = data1[(alu2+230403)];
  var val80 = data1[(alu2+256000)];
  var val81 = data2[(alu3+10)];
  var val82 = data2[(alu3+42)];
  var val83 = data2[(alu3+74)];
  var val84 = data2[(alu3+106)];
  var val85 = data1[(alu2+256001)];
  var val86 = data1[(alu2+256002)];
  var val87 = data1[(alu2+256003)];
  var val88 = data1[(alu2+281600)];
  var val89 = data2[(alu3+11)];
  var val90 = data2[(alu3+43)];
  var val91 = data2[(alu3+75)];
  var val92 = data2[(alu3+107)];
  var val93 = data1[(alu2+281601)];
  var val94 = data1[(alu2+281602)];
  var val95 = data1[(alu2+281603)];
  var val96 = data1[(alu2+307200)];
  var val97 = data2[(alu3+12)];
  var val98 = data2[(alu3+44)];
  var val99 = data2[(alu3+76)];
  var val100 = data2[(alu3+108)];
  var val101 = data1[(alu2+307201)];
  var val102 = data1[(alu2+307202)];
  var val103 = data1[(alu2+307203)];
  var val104 = data1[(alu2+332800)];
  var val105 = data2[(alu3+13)];
  var val106 = data2[(alu3+45)];
  var val107 = data2[(alu3+77)];
  var val108 = data2[(alu3+109)];
  var val109 = data1[(alu2+332801)];
  var val110 = data1[(alu2+332802)];
  var val111 = data1[(alu2+332803)];
  var val112 = data1[(alu2+358400)];
  var val113 = data2[(alu3+14)];
  var val114 = data2[(alu3+46)];
  var val115 = data2[(alu3+78)];
  var val116 = data2[(alu3+110)];
  var val117 = data1[(alu2+358401)];
  var val118 = data1[(alu2+358402)];
  var val119 = data1[(alu2+358403)];
  var val120 = data1[(alu2+384000)];
  var val121 = data2[(alu3+15)];
  var val122 = data2[(alu3+47)];
  var val123 = data2[(alu3+79)];
  var val124 = data2[(alu3+111)];
  var val125 = data1[(alu2+384001)];
  var val126 = data1[(alu2+384002)];
  var val127 = data1[(alu2+384003)];
  var val128 = data1[(alu2+409600)];
  var val129 = data2[(alu3+16)];
  var val130 = data2[(alu3+48)];
  var val131 = data2[(alu3+80)];
  var val132 = data2[(alu3+112)];
  var val133 = data1[(alu2+409601)];
  var val134 = data1[(alu2+409602)];
  var val135 = data1[(alu2+409603)];
  var val136 = data1[(alu2+435200)];
  var val137 = data2[(alu3+17)];
  var val138 = data2[(alu3+49)];
  var val139 = data2[(alu3+81)];
  var val140 = data2[(alu3+113)];
  var val141 = data1[(alu2+435201)];
  var val142 = data1[(alu2+435202)];
  var val143 = data1[(alu2+435203)];
  var val144 = data1[(alu2+460800)];
  var val145 = data2[(alu3+18)];
  var val146 = data2[(alu3+50)];
  var val147 = data2[(alu3+82)];
  var val148 = data2[(alu3+114)];
  var val149 = data1[(alu2+460801)];
  var val150 = data1[(alu2+460802)];
  var val151 = data1[(alu2+460803)];
  var val152 = data1[(alu2+486400)];
  var val153 = data2[(alu3+19)];
  var val154 = data2[(alu3+51)];
  var val155 = data2[(alu3+83)];
  var val156 = data2[(alu3+115)];
  var val157 = data1[(alu2+486401)];
  var val158 = data1[(alu2+486402)];
  var val159 = data1[(alu2+486403)];
  var val160 = data1[(alu2+512000)];
  var val161 = data2[(alu3+20)];
  var val162 = data2[(alu3+52)];
  var val163 = data2[(alu3+84)];
  var val164 = data2[(alu3+116)];
  var val165 = data1[(alu2+512001)];
  var val166 = data1[(alu2+512002)];
  var val167 = data1[(alu2+512003)];
  var val168 = data1[(alu2+537600)];
  var val169 = data2[(alu3+21)];
  var val170 = data2[(alu3+53)];
  var val171 = data2[(alu3+85)];
  var val172 = data2[(alu3+117)];
  var val173 = data1[(alu2+537601)];
  var val174 = data1[(alu2+537602)];
  var val175 = data1[(alu2+537603)];
  var val176 = data1[(alu2+563200)];
  var val177 = data2[(alu3+22)];
  var val178 = data2[(alu3+54)];
  var val179 = data2[(alu3+86)];
  var val180 = data2[(alu3+118)];
  var val181 = data1[(alu2+563201)];
  var val182 = data1[(alu2+563202)];
  var val183 = data1[(alu2+563203)];
  var val184 = data1[(alu2+588800)];
  var val185 = data2[(alu3+23)];
  var val186 = data2[(alu3+55)];
  var val187 = data2[(alu3+87)];
  var val188 = data2[(alu3+119)];
  var val189 = data1[(alu2+588801)];
  var val190 = data1[(alu2+588802)];
  var val191 = data1[(alu2+588803)];
  var val192 = data1[(alu2+614400)];
  var val193 = data2[(alu3+24)];
  var val194 = data2[(alu3+56)];
  var val195 = data2[(alu3+88)];
  var val196 = data2[(alu3+120)];
  var val197 = data1[(alu2+614401)];
  var val198 = data1[(alu2+614402)];
  var val199 = data1[(alu2+614403)];
  var val200 = data1[(alu2+640000)];
  var val201 = data2[(alu3+25)];
  var val202 = data2[(alu3+57)];
  var val203 = data2[(alu3+89)];
  var val204 = data2[(alu3+121)];
  var val205 = data1[(alu2+640001)];
  var val206 = data1[(alu2+640002)];
  var val207 = data1[(alu2+640003)];
  var val208 = data1[(alu2+665600)];
  var val209 = data2[(alu3+26)];
  var val210 = data2[(alu3+58)];
  var val211 = data2[(alu3+90)];
  var val212 = data2[(alu3+122)];
  var val213 = data1[(alu2+665601)];
  var val214 = data1[(alu2+665602)];
  var val215 = data1[(alu2+665603)];
  var val216 = data1[(alu2+691200)];
  var val217 = data2[(alu3+27)];
  var val218 = data2[(alu3+59)];
  var val219 = data2[(alu3+91)];
  var val220 = data2[(alu3+123)];
  var val221 = data1[(alu2+691201)];
  var val222 = data1[(alu2+691202)];
  var val223 = data1[(alu2+691203)];
  var val224 = data1[(alu2+716800)];
  var val225 = data2[(alu3+28)];
  var val226 = data2[(alu3+60)];
  var val227 = data2[(alu3+92)];
  var val228 = data2[(alu3+124)];
  var val229 = data1[(alu2+716801)];
  var val230 = data1[(alu2+716802)];
  var val231 = data1[(alu2+716803)];
  var alu4 = (lidx0<<2);
  var val232 = data1[(alu2+742400)];
  var val233 = data2[(alu3+29)];
  var val234 = data2[(alu3+61)];
  var val235 = data2[(alu3+93)];
  var val236 = data2[(alu3+125)];
  var val237 = data1[(alu2+742401)];
  var val238 = data1[(alu2+742402)];
  var val239 = data1[(alu2+742403)];
  var val240 = data1[(alu2+768000)];
  var val241 = data2[(alu3+30)];
  var alu5 = (alu4+1);
  var val242 = data2[(alu3+62)];
  var alu6 = (alu4+2);
  var val243 = data2[(alu3+94)];
  var alu7 = (alu4+3);
  var val244 = data2[(alu3+126)];
  var val245 = data1[(alu2+768001)];
  var val246 = data1[(alu2+768002)];
  var val247 = data1[(alu2+768003)];
  var val248 = data1[(alu2+793600)];
  var val249 = data2[(alu3+31)];
  var val250 = data2[(alu3+63)];
  var val251 = data2[(alu3+95)];
  var val252 = data2[(alu3+127)];
  var val253 = data1[(alu2+793601)];
  var val254 = data1[(alu2+793602)];
  var val255 = data1[(alu2+793603)];
  var val256 = data5[alu4];
  var val257 = data5[alu5];
  var val258 = data5[alu6];
  var val259 = data5[alu7];
  var val260 = data3[alu4];
  var val261 = data3[alu5];
  var val262 = data3[alu6];
  var val263 = data3[alu7];
  var val264 = data4[alu4];
  var val265 = data4[alu5];
  var val266 = data4[alu6];
  var val267 = data4[alu7];
  var alu8 = sqrt((1/(val256+0.001f)));
  var alu9 = sqrt((1/(val257+0.001f)));
  var alu10 = sqrt((1/(val258+0.001f)));
  var alu11 = sqrt((1/(val259+0.001f)));
  var val268 = data6[alu4];
  var val269 = data6[alu5];
  var val270 = data6[alu6];
  var val271 = data6[alu7];
  var alu12 = (val268+(alu8*val264*(((val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val48*val49)+(val56*val57)+(val64*val65)+(val72*val73)+(val80*val81)+(val88*val89)+(val96*val97)+(val104*val105)+(val112*val113)+(val120*val121)+(val128*val129)+(val136*val137)+(val144*val145)+(val152*val153)+(val160*val161)+(val168*val169)+(val176*val177)+(val184*val185)+(val192*val193)+(val200*val201)+(val208*val209)+(val216*val217)+(val224*val225)+(val232*val233)+(val240*val241)+(val248*val249))-val260)));
  var alu13 = (val269+(alu9*val265*(((val0*val4)+(val2*val5)+(val16*val18)+(val24*val26)+(val32*val34)+(val40*val42)+(val48*val50)+(val56*val58)+(val64*val66)+(val72*val74)+(val80*val82)+(val88*val90)+(val96*val98)+(val104*val106)+(val112*val114)+(val120*val122)+(val128*val130)+(val136*val138)+(val144*val146)+(val152*val154)+(val160*val162)+(val168*val170)+(val176*val178)+(val184*val186)+(val192*val194)+(val200*val202)+(val208*val210)+(val216*val218)+(val224*val226)+(val232*val234)+(val240*val242)+(val248*val250))-val261)));
  var alu14 = (val270+(alu10*val266*(((val0*val6)+(val2*val7)+(val16*val19)+(val24*val27)+(val32*val35)+(val40*val43)+(val48*val51)+(val56*val59)+(val64*val67)+(val72*val75)+(val80*val83)+(val88*val91)+(val96*val99)+(val104*val107)+(val112*val115)+(val120*val123)+(val128*val131)+(val136*val139)+(val144*val147)+(val152*val155)+(val160*val163)+(val168*val171)+(val176*val179)+(val184*val187)+(val192*val195)+(val200*val203)+(val208*val211)+(val216*val219)+(val224*val227)+(val232*val235)+(val240*val243)+(val248*val251))-val262)));
  var alu15 = (val271+(alu11*val267*(((val0*val8)+(val2*val9)+(val16*val20)+(val24*val28)+(val32*val36)+(val40*val44)+(val48*val52)+(val56*val60)+(val64*val68)+(val72*val76)+(val80*val84)+(val88*val92)+(val96*val100)+(val104*val108)+(val112*val116)+(val120*val124)+(val128*val132)+(val136*val140)+(val144*val148)+(val152*val156)+(val160*val164)+(val168*val172)+(val176*val180)+(val184*val188)+(val192*val196)+(val200*val204)+(val208*val212)+(val216*val220)+(val224*val228)+(val232*val236)+(val240*val244)+(val248*val252))-val263)));
  var alu16 = (val268+(alu8*val264*(((val10*val3)+(val11*val1)+(val21*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val53*val49)+(val61*val57)+(val69*val65)+(val77*val73)+(val85*val81)+(val93*val89)+(val101*val97)+(val109*val105)+(val117*val113)+(val125*val121)+(val133*val129)+(val141*val137)+(val149*val145)+(val157*val153)+(val165*val161)+(val173*val169)+(val181*val177)+(val189*val185)+(val197*val193)+(val205*val201)+(val213*val209)+(val221*val217)+(val229*val225)+(val237*val233)+(val245*val241)+(val253*val249))-val260)));
  var alu17 = (val269+(alu9*val265*(((val10*val5)+(val11*val4)+(val21*val18)+(val29*val26)+(val37*val34)+(val45*val42)+(val53*val50)+(val61*val58)+(val69*val66)+(val77*val74)+(val85*val82)+(val93*val90)+(val101*val98)+(val109*val106)+(val117*val114)+(val125*val122)+(val133*val130)+(val141*val138)+(val149*val146)+(val157*val154)+(val165*val162)+(val173*val170)+(val181*val178)+(val189*val186)+(val197*val194)+(val205*val202)+(val213*val210)+(val221*val218)+(val229*val226)+(val237*val234)+(val245*val242)+(val253*val250))-val261)));
  var alu18 = (val270+(alu10*val266*(((val10*val7)+(val11*val6)+(val21*val19)+(val29*val27)+(val37*val35)+(val45*val43)+(val53*val51)+(val61*val59)+(val69*val67)+(val77*val75)+(val85*val83)+(val93*val91)+(val101*val99)+(val109*val107)+(val117*val115)+(val125*val123)+(val133*val131)+(val141*val139)+(val149*val147)+(val157*val155)+(val165*val163)+(val173*val171)+(val181*val179)+(val189*val187)+(val197*val195)+(val205*val203)+(val213*val211)+(val221*val219)+(val229*val227)+(val237*val235)+(val245*val243)+(val253*val251))-val262)));
  var alu19 = (val271+(alu11*val267*(((val10*val9)+(val11*val8)+(val21*val20)+(val29*val28)+(val37*val36)+(val45*val44)+(val53*val52)+(val61*val60)+(val69*val68)+(val77*val76)+(val85*val84)+(val93*val92)+(val101*val100)+(val109*val108)+(val117*val116)+(val125*val124)+(val133*val132)+(val141*val140)+(val149*val148)+(val157*val156)+(val165*val164)+(val173*val172)+(val181*val180)+(val189*val188)+(val197*val196)+(val205*val204)+(val213*val212)+(val221*val220)+(val229*val228)+(val237*val236)+(val245*val244)+(val253*val252))-val263)));
  var alu20 = (val268+(alu8*val264*(((val12*val3)+(val13*val1)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val54*val49)+(val62*val57)+(val70*val65)+(val78*val73)+(val86*val81)+(val94*val89)+(val102*val97)+(val110*val105)+(val118*val113)+(val126*val121)+(val134*val129)+(val142*val137)+(val150*val145)+(val158*val153)+(val166*val161)+(val174*val169)+(val182*val177)+(val190*val185)+(val198*val193)+(val206*val201)+(val214*val209)+(val222*val217)+(val230*val225)+(val238*val233)+(val246*val241)+(val254*val249))-val260)));
  var alu21 = (val269+(alu9*val265*(((val12*val5)+(val13*val4)+(val22*val18)+(val30*val26)+(val38*val34)+(val46*val42)+(val54*val50)+(val62*val58)+(val70*val66)+(val78*val74)+(val86*val82)+(val94*val90)+(val102*val98)+(val110*val106)+(val118*val114)+(val126*val122)+(val134*val130)+(val142*val138)+(val150*val146)+(val158*val154)+(val166*val162)+(val174*val170)+(val182*val178)+(val190*val186)+(val198*val194)+(val206*val202)+(val214*val210)+(val222*val218)+(val230*val226)+(val238*val234)+(val246*val242)+(val254*val250))-val261)));
  var alu22 = (val270+(alu10*val266*(((val12*val7)+(val13*val6)+(val22*val19)+(val30*val27)+(val38*val35)+(val46*val43)+(val54*val51)+(val62*val59)+(val70*val67)+(val78*val75)+(val86*val83)+(val94*val91)+(val102*val99)+(val110*val107)+(val118*val115)+(val126*val123)+(val134*val131)+(val142*val139)+(val150*val147)+(val158*val155)+(val166*val163)+(val174*val171)+(val182*val179)+(val190*val187)+(val198*val195)+(val206*val203)+(val214*val211)+(val222*val219)+(val230*val227)+(val238*val235)+(val246*val243)+(val254*val251))-val262)));
  var alu23 = (val271+(alu11*val267*(((val12*val9)+(val13*val8)+(val22*val20)+(val30*val28)+(val38*val36)+(val46*val44)+(val54*val52)+(val62*val60)+(val70*val68)+(val78*val76)+(val86*val84)+(val94*val92)+(val102*val100)+(val110*val108)+(val118*val116)+(val126*val124)+(val134*val132)+(val142*val140)+(val150*val148)+(val158*val156)+(val166*val164)+(val174*val172)+(val182*val180)+(val190*val188)+(val198*val196)+(val206*val204)+(val214*val212)+(val222*val220)+(val230*val228)+(val238*val236)+(val246*val244)+(val254*val252))-val263)));
  var alu24 = (val268+(alu8*val264*(((val14*val3)+(val15*val1)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val55*val49)+(val63*val57)+(val71*val65)+(val79*val73)+(val87*val81)+(val95*val89)+(val103*val97)+(val111*val105)+(val119*val113)+(val127*val121)+(val135*val129)+(val143*val137)+(val151*val145)+(val159*val153)+(val167*val161)+(val175*val169)+(val183*val177)+(val191*val185)+(val199*val193)+(val207*val201)+(val215*val209)+(val223*val217)+(val231*val225)+(val239*val233)+(val247*val241)+(val255*val249))-val260)));
  var alu25 = (val269+(alu9*val265*(((val14*val5)+(val15*val4)+(val23*val18)+(val31*val26)+(val39*val34)+(val47*val42)+(val55*val50)+(val63*val58)+(val71*val66)+(val79*val74)+(val87*val82)+(val95*val90)+(val103*val98)+(val111*val106)+(val119*val114)+(val127*val122)+(val135*val130)+(val143*val138)+(val151*val146)+(val159*val154)+(val167*val162)+(val175*val170)+(val183*val178)+(val191*val186)+(val199*val194)+(val207*val202)+(val215*val210)+(val223*val218)+(val231*val226)+(val239*val234)+(val247*val242)+(val255*val250))-val261)));
  var alu26 = (val270+(alu10*val266*(((val14*val7)+(val15*val6)+(val23*val19)+(val31*val27)+(val39*val35)+(val47*val43)+(val55*val51)+(val63*val59)+(val71*val67)+(val79*val75)+(val87*val83)+(val95*val91)+(val103*val99)+(val111*val107)+(val119*val115)+(val127*val123)+(val135*val131)+(val143*val139)+(val151*val147)+(val159*val155)+(val167*val163)+(val175*val171)+(val183*val179)+(val191*val187)+(val199*val195)+(val207*val203)+(val215*val211)+(val223*val219)+(val231*val227)+(val239*val235)+(val247*val243)+(val255*val251))-val262)));
  var alu27 = (val271+(alu11*val267*(((val14*val9)+(val15*val8)+(val23*val20)+(val31*val28)+(val39*val36)+(val47*val44)+(val55*val52)+(val63*val60)+(val71*val68)+(val79*val76)+(val87*val84)+(val95*val92)+(val103*val100)+(val111*val108)+(val119*val116)+(val127*val124)+(val135*val132)+(val143*val140)+(val151*val148)+(val159*val156)+(val167*val164)+(val175*val172)+(val183*val180)+(val191*val188)+(val199*val196)+(val207*val204)+(val215*val212)+(val223*val220)+(val231*val228)+(val239*val236)+(val247*val244)+(val255*val252))-val263)));
  var alu28 = (alu0+(lidx0*102400)+alu1);
  data0[alu28] = ((1/(exp2((alu12*-1.4426950408889634f))+1.0f))*alu12);
  data0[(alu28+25600)] = ((1/(exp2((alu13*-1.4426950408889634f))+1.0f))*alu13);
  data0[(alu28+51200)] = ((1/(exp2((alu14*-1.4426950408889634f))+1.0f))*alu14);
  data0[(alu28+76800)] = ((1/(exp2((alu15*-1.4426950408889634f))+1.0f))*alu15);
  data0[(alu28+1)] = ((1/(exp2((alu16*-1.4426950408889634f))+1.0f))*alu16);
  data0[(alu28+25601)] = ((1/(exp2((alu17*-1.4426950408889634f))+1.0f))*alu17);
  data0[(alu28+51201)] = ((1/(exp2((alu18*-1.4426950408889634f))+1.0f))*alu18);
  data0[(alu28+76801)] = ((1/(exp2((alu19*-1.4426950408889634f))+1.0f))*alu19);
  data0[(alu28+2)] = ((1/(exp2((alu20*-1.4426950408889634f))+1.0f))*alu20);
  data0[(alu28+25602)] = ((1/(exp2((alu21*-1.4426950408889634f))+1.0f))*alu21);
  data0[(alu28+51202)] = ((1/(exp2((alu22*-1.4426950408889634f))+1.0f))*alu22);
  data0[(alu28+76802)] = ((1/(exp2((alu23*-1.4426950408889634f))+1.0f))*alu23);
  data0[(alu28+3)] = ((1/(exp2((alu24*-1.4426950408889634f))+1.0f))*alu24);
  data0[(alu28+25603)] = ((1/(exp2((alu25*-1.4426950408889634f))+1.0f))*alu25);
  data0[(alu28+51203)] = ((1/(exp2((alu26*-1.4426950408889634f))+1.0f))*alu26);
  data0[(alu28+76803)] = ((1/(exp2((alu27*-1.4426950408889634f))+1.0f))*alu27);
}`;

const r_4_10_5_16_8_16_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 10 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx1*2560);
  var alu1 = (gidx0<<5);
  var alu2 = (lidx0*160);
  var alu3 = (lidx1<<2);
  var alu4 = (((gidx0+lidx1)<1)!=true);
  var alu5 = (((gidx1+lidx0)<1)!=true);
  var alu6 = ((lidx0+(gidx1<<4))<159);
  var alu7 = ((lidx1+(gidx0<<3))<39);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*25600)+alu1+alu3);
    var alu9 = ((gidx2*576)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+409439)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+409599)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+409440)], alu5);
    var val5 = data1[(alu8+409600)];
    var val6 = select(0.0f, data1[(alu8+409441)], alu5);
    var val7 = data1[(alu8+409601)];
    var val8 = data2[(alu9+144)];
    var val9 = data2[(alu9+147)];
    var val10 = data2[(alu9+288)];
    var val11 = data2[(alu9+291)];
    var val12 = data2[(alu9+432)];
    var val13 = data2[(alu9+435)];
    var val14 = select(0.0f, data1[(alu8+409442)], alu5);
    var val15 = data1[(alu8+409602)];
    var val16 = select(0.0f, data1[(alu8+409759)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+409760)], alu6);
    var val19 = select(0.0f, data1[(alu8+409761)], alu6);
    var val20 = data2[(alu9+150)];
    var val21 = data2[(alu9+294)];
    var val22 = data2[(alu9+438)];
    var val23 = select(0.0f, data1[(alu8+409762)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+145)];
    var val26 = data2[(alu9+289)];
    var val27 = data2[(alu9+433)];
    var val28 = select(0.0f, data1[(alu8+409443)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+148)];
    var val31 = data2[(alu9+292)];
    var val32 = data2[(alu9+436)];
    var val33 = data1[(alu8+409603)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+151)];
    var val36 = data2[(alu9+295)];
    var val37 = data2[(alu9+439)];
    var val38 = select(0.0f, data1[(alu8+409763)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+146)];
    var val41 = data2[(alu9+290)];
    var val42 = data2[(alu9+434)];
    var val43 = select(0.0f, data1[(alu8+409444)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+149)];
    var val46 = data2[(alu9+293)];
    var val47 = data2[(alu9+437)];
    var val48 = select(0.0f, data1[(alu8+409604)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+152)];
    var val51 = data2[(alu9+296)];
    var val52 = data2[(alu9+440)];
    var val53 = select(0.0f, data1[(alu8+409764)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = (gidx2<<2);
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*102400)+alu1+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+25600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+51200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+76800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+25601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+51201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+76801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+25602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+51202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+76802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+25603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+51203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+76803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_4_10_5_16_8_16_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 10 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx1*2560);
  var alu1 = (gidx0<<5);
  var alu2 = (lidx0*160);
  var alu3 = (lidx1<<2);
  var alu4 = (((gidx0+lidx1)<1)!=true);
  var alu5 = (((gidx1+lidx0)<1)!=true);
  var alu6 = ((lidx0+(gidx1<<4))<159);
  var alu7 = ((lidx1+(gidx0<<3))<39);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*25600)+alu1+alu3);
    var alu9 = ((gidx2*576)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu8+-161)], (alu4&alu5));
    var val1 = data3[alu9];
    var val2 = select(0.0f, data2[(alu8+-1)], alu4);
    var val3 = data3[(alu9+3)];
    var val4 = select(0.0f, data2[(alu8+-160)], alu5);
    var val5 = data2[alu8];
    var val6 = select(0.0f, data2[(alu8+-159)], alu5);
    var val7 = data2[(alu8+1)];
    var val8 = data3[(alu9+144)];
    var val9 = data3[(alu9+147)];
    var val10 = data3[(alu9+288)];
    var val11 = data3[(alu9+291)];
    var val12 = data3[(alu9+432)];
    var val13 = data3[(alu9+435)];
    var val14 = select(0.0f, data2[(alu8+-158)], alu5);
    var val15 = data2[(alu8+2)];
    var val16 = select(0.0f, data2[(alu8+159)], (alu6&alu4));
    var val17 = data3[(alu9+6)];
    var val18 = select(0.0f, data2[(alu8+160)], alu6);
    var val19 = select(0.0f, data2[(alu8+161)], alu6);
    var val20 = data3[(alu9+150)];
    var val21 = data3[(alu9+294)];
    var val22 = data3[(alu9+438)];
    var val23 = select(0.0f, data2[(alu8+162)], alu6);
    var val24 = data3[(alu9+1)];
    var val25 = data3[(alu9+145)];
    var val26 = data3[(alu9+289)];
    var val27 = data3[(alu9+433)];
    var val28 = select(0.0f, data2[(alu8+-157)], alu5);
    var val29 = data3[(alu9+4)];
    var val30 = data3[(alu9+148)];
    var val31 = data3[(alu9+292)];
    var val32 = data3[(alu9+436)];
    var val33 = data2[(alu8+3)];
    var val34 = data3[(alu9+7)];
    var val35 = data3[(alu9+151)];
    var val36 = data3[(alu9+295)];
    var val37 = data3[(alu9+439)];
    var val38 = select(0.0f, data2[(alu8+163)], alu6);
    var val39 = data3[(alu9+2)];
    var val40 = data3[(alu9+146)];
    var val41 = data3[(alu9+290)];
    var val42 = data3[(alu9+434)];
    var val43 = select(0.0f, data2[(alu8+-156)], (alu7&alu5));
    var val44 = data3[(alu9+5)];
    var val45 = data3[(alu9+149)];
    var val46 = data3[(alu9+293)];
    var val47 = data3[(alu9+437)];
    var val48 = select(0.0f, data2[(alu8+4)], alu7);
    var val49 = data3[(alu9+8)];
    var val50 = data3[(alu9+152)];
    var val51 = data3[(alu9+296)];
    var val52 = data3[(alu9+440)];
    var val53 = select(0.0f, data2[(alu8+164)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = (gidx2<<2);
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data6[alu27];
  var val55 = data6[alu28];
  var val56 = data6[alu29];
  var val57 = data6[alu30];
  var val58 = data4[alu27];
  var val59 = data4[alu28];
  var val60 = data4[alu29];
  var val61 = data4[alu30];
  var val62 = data5[alu27];
  var val63 = data5[alu28];
  var val64 = data5[alu29];
  var val65 = data5[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu27];
  var val67 = data7[alu28];
  var val68 = data7[alu29];
  var val69 = data7[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*102400)+alu1+alu2+alu3);
  var val70 = data1[(alu51+409600)];
  var val71 = data1[(alu51+435200)];
  var val72 = data1[(alu51+460800)];
  var val73 = data1[(alu51+486400)];
  var val74 = data1[(alu51+409601)];
  var val75 = data1[(alu51+435201)];
  var val76 = data1[(alu51+460801)];
  var val77 = data1[(alu51+486401)];
  var val78 = data1[(alu51+409602)];
  var val79 = data1[(alu51+435202)];
  var val80 = data1[(alu51+460802)];
  var val81 = data1[(alu51+486402)];
  var val82 = data1[(alu51+409603)];
  var val83 = data1[(alu51+435203)];
  var val84 = data1[(alu51+460803)];
  var val85 = data1[(alu51+486403)];
  data0[alu51] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[(alu51+25600)] = (val71+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[(alu51+51200)] = (val72+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[(alu51+76800)] = (val73+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[(alu51+1)] = (val74+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[(alu51+25601)] = (val75+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[(alu51+51201)] = (val76+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[(alu51+76801)] = (val77+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[(alu51+2)] = (val78+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[(alu51+25602)] = (val79+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[(alu51+51202)] = (val80+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[(alu51+76802)] = (val81+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[(alu51+3)] = (val82+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[(alu51+25603)] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[(alu51+51203)] = (val84+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  data0[(alu51+76803)] = (val85+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
}`;

const E_6_400_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 400 */
  var gidx1 = i32(gindex.y); /* 6 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*204800)+(lidx0*25600)+(lidx1<<2));
  var alu1 = (gidx1<2);
  var alu2 = (gidx1<4);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (alu2&(alu1!=true));
  var alu7 = (alu2!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu6);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu6);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu6);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu6);
  var val8 = select(0.0f, data2[(alu0+-819200)], alu7);
  var val9 = select(0.0f, data2[(alu0+-819199)], alu7);
  var val10 = select(0.0f, data2[(alu0+-819198)], alu7);
  var val11 = select(0.0f, data2[(alu0+-819197)], alu7);
  data0[alu0] = (val8+val0+val1);
  data0[alu3] = (val9+val2+val3);
  data0[alu4] = (val10+val4+val5);
  data0[alu5] = (val11+val6+val7);
}`;

const r_400_8_16_12_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 400 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 12; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*102400));
    var alu3 = ((lidx0*192)+(ridx0<<2));
    var val0 = data1[(alu2+25600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+49)];
    var val5 = data2[(alu3+48)];
    var val6 = data2[(alu3+97)];
    var val7 = data2[(alu3+96)];
    var val8 = data2[(alu3+145)];
    var val9 = data2[(alu3+144)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+25601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+25602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+25603)];
    var val16 = data1[(alu2+51200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+50)];
    var val19 = data2[(alu3+98)];
    var val20 = data2[(alu3+146)];
    var val21 = data1[(alu2+51201)];
    var val22 = data1[(alu2+51202)];
    var val23 = data1[(alu2+51203)];
    var val24 = data1[(alu2+76800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+51)];
    var val27 = data2[(alu3+99)];
    var val28 = data2[(alu3+147)];
    var val29 = data1[(alu2+76801)];
    var val30 = data1[(alu2+76802)];
    var val31 = data1[(alu2+76803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = (lidx0<<2);
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(lidx0*102400)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+25600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+51200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+76800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+25601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+51201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+76801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+25602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+51202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+76802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+25603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+51203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+76803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_8_5_5_2_16_4_32_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (((gidx0+lidx2)<1)!=true);
  var alu1 = (((gidx1+lidx1)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = ((gidx1*5120)+(lidx1*320)+(ridx0*25600)+(gidx0<<5)+(lidx2<<3));
    var alu3 = ((gidx2*2304)+(lidx0*1152)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-161)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-159)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+288)];
    var val7 = data2[(alu3+291)];
    var val8 = data2[(alu3+576)];
    var val9 = data2[(alu3+579)];
    var val10 = data2[(alu3+864)];
    var val11 = data2[(alu3+867)];
    var val12 = select(0.0f, data1[(alu2+-157)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-155)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+159)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+161)];
    var val19 = data2[(alu3+294)];
    var val20 = data2[(alu3+582)];
    var val21 = data2[(alu3+870)];
    var val22 = data1[(alu2+163)];
    var val23 = data1[(alu2+165)];
    var val24 = select(0.0f, data1[(alu2+-160)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+289)];
    var val27 = data2[(alu3+577)];
    var val28 = data2[(alu3+865)];
    var val29 = select(0.0f, data1[(alu2+-158)], alu1);
    var val30 = select(0.0f, data1[(alu2+-156)], alu1);
    var val31 = select(0.0f, data1[(alu2+-154)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+292)];
    var val35 = data2[(alu3+580)];
    var val36 = data2[(alu3+868)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+160)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+295)];
    var val43 = data2[(alu3+583)];
    var val44 = data2[(alu3+871)];
    var val45 = data1[(alu2+162)];
    var val46 = data1[(alu2+164)];
    var val47 = data1[(alu2+166)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+290)];
    var val50 = data2[(alu3+578)];
    var val51 = data2[(alu3+866)];
    var val52 = select(0.0f, data1[(alu2+-153)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+293)];
    var val55 = data2[(alu3+581)];
    var val56 = data2[(alu3+869)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+296)];
    var val60 = data2[(alu3+584)];
    var val61 = data2[(alu3+872)];
    var val62 = data1[(alu2+167)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = ((gidx2<<3)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*1280)+(gidx2*51200)+(gidx0<<4)+(lidx0*25600)+(lidx1*80)+(lidx2<<2));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+6400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+12800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+19200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+6401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+12801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+19201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+6402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+12802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+19202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+6403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+12803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+19203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_2_100_8_16_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+65)];
    var val5 = data2[(alu3+64)];
    var val6 = data2[(alu3+129)];
    var val7 = data2[(alu3+128)];
    var val8 = data2[(alu3+193)];
    var val9 = data2[(alu3+192)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+66)];
    var val19 = data2[(alu3+130)];
    var val20 = data2[(alu3+194)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+67)];
    var val27 = data2[(alu3+131)];
    var val28 = data2[(alu3+195)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*204800)+(lidx0*25600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+6400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+12800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+19200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+6401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+12801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+19201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+6402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+12802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+19202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+6403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+12803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+19203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_4_5_5_2_16_4_32_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*2304)+(lidx0*1152)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+204719)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+204799)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+204720)], alu5);
    var val5 = data1[(alu8+204800)];
    var val6 = select(0.0f, data1[(alu8+204721)], alu5);
    var val7 = data1[(alu8+204801)];
    var val8 = data2[(alu9+288)];
    var val9 = data2[(alu9+291)];
    var val10 = data2[(alu9+576)];
    var val11 = data2[(alu9+579)];
    var val12 = data2[(alu9+864)];
    var val13 = data2[(alu9+867)];
    var val14 = select(0.0f, data1[(alu8+204722)], alu5);
    var val15 = data1[(alu8+204802)];
    var val16 = select(0.0f, data1[(alu8+204879)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+204880)], alu6);
    var val19 = select(0.0f, data1[(alu8+204881)], alu6);
    var val20 = data2[(alu9+294)];
    var val21 = data2[(alu9+582)];
    var val22 = data2[(alu9+870)];
    var val23 = select(0.0f, data1[(alu8+204882)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+289)];
    var val26 = data2[(alu9+577)];
    var val27 = data2[(alu9+865)];
    var val28 = select(0.0f, data1[(alu8+204723)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+292)];
    var val31 = data2[(alu9+580)];
    var val32 = data2[(alu9+868)];
    var val33 = data1[(alu8+204803)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+295)];
    var val36 = data2[(alu9+583)];
    var val37 = data2[(alu9+871)];
    var val38 = select(0.0f, data1[(alu8+204883)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+290)];
    var val41 = data2[(alu9+578)];
    var val42 = data2[(alu9+866)];
    var val43 = select(0.0f, data1[(alu8+204724)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+293)];
    var val46 = data2[(alu9+581)];
    var val47 = data2[(alu9+869)];
    var val48 = select(0.0f, data1[(alu8+204804)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+296)];
    var val51 = data2[(alu9+584)];
    var val52 = data2[(alu9+872)];
    var val53 = select(0.0f, data1[(alu8+204884)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+6400)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+12800)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+19200)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+6401)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+12801)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+19201)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+6402)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+12802)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+19202)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+6403)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+12803)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+19203)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_4_5_5_2_16_4_32_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*2304)+(lidx0*1152)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu8+-81)], (alu4&alu5));
    var val1 = data3[alu9];
    var val2 = select(0.0f, data2[(alu8+-1)], alu4);
    var val3 = data3[(alu9+3)];
    var val4 = select(0.0f, data2[(alu8+-80)], alu5);
    var val5 = data2[alu8];
    var val6 = select(0.0f, data2[(alu8+-79)], alu5);
    var val7 = data2[(alu8+1)];
    var val8 = data3[(alu9+288)];
    var val9 = data3[(alu9+291)];
    var val10 = data3[(alu9+576)];
    var val11 = data3[(alu9+579)];
    var val12 = data3[(alu9+864)];
    var val13 = data3[(alu9+867)];
    var val14 = select(0.0f, data2[(alu8+-78)], alu5);
    var val15 = data2[(alu8+2)];
    var val16 = select(0.0f, data2[(alu8+79)], (alu6&alu4));
    var val17 = data3[(alu9+6)];
    var val18 = select(0.0f, data2[(alu8+80)], alu6);
    var val19 = select(0.0f, data2[(alu8+81)], alu6);
    var val20 = data3[(alu9+294)];
    var val21 = data3[(alu9+582)];
    var val22 = data3[(alu9+870)];
    var val23 = select(0.0f, data2[(alu8+82)], alu6);
    var val24 = data3[(alu9+1)];
    var val25 = data3[(alu9+289)];
    var val26 = data3[(alu9+577)];
    var val27 = data3[(alu9+865)];
    var val28 = select(0.0f, data2[(alu8+-77)], alu5);
    var val29 = data3[(alu9+4)];
    var val30 = data3[(alu9+292)];
    var val31 = data3[(alu9+580)];
    var val32 = data3[(alu9+868)];
    var val33 = data2[(alu8+3)];
    var val34 = data3[(alu9+7)];
    var val35 = data3[(alu9+295)];
    var val36 = data3[(alu9+583)];
    var val37 = data3[(alu9+871)];
    var val38 = select(0.0f, data2[(alu8+83)], alu6);
    var val39 = data3[(alu9+2)];
    var val40 = data3[(alu9+290)];
    var val41 = data3[(alu9+578)];
    var val42 = data3[(alu9+866)];
    var val43 = select(0.0f, data2[(alu8+-76)], (alu7&alu5));
    var val44 = data3[(alu9+5)];
    var val45 = data3[(alu9+293)];
    var val46 = data3[(alu9+581)];
    var val47 = data3[(alu9+869)];
    var val48 = select(0.0f, data2[(alu8+4)], alu7);
    var val49 = data3[(alu9+8)];
    var val50 = data3[(alu9+296)];
    var val51 = data3[(alu9+584)];
    var val52 = data3[(alu9+872)];
    var val53 = select(0.0f, data2[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data6[alu27];
  var val55 = data6[alu28];
  var val56 = data6[alu29];
  var val57 = data6[alu30];
  var val58 = data4[alu27];
  var val59 = data4[alu28];
  var val60 = data4[alu29];
  var val61 = data4[alu30];
  var val62 = data5[alu27];
  var val63 = data5[alu28];
  var val64 = data5[alu29];
  var val65 = data5[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu27];
  var val67 = data7[alu28];
  var val68 = data7[alu29];
  var val69 = data7[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  var val70 = data1[(alu51+204800)];
  var val71 = data1[(alu51+211200)];
  var val72 = data1[(alu51+217600)];
  var val73 = data1[(alu51+224000)];
  var val74 = data1[(alu51+204801)];
  var val75 = data1[(alu51+211201)];
  var val76 = data1[(alu51+217601)];
  var val77 = data1[(alu51+224001)];
  var val78 = data1[(alu51+204802)];
  var val79 = data1[(alu51+211202)];
  var val80 = data1[(alu51+217602)];
  var val81 = data1[(alu51+224002)];
  var val82 = data1[(alu51+204803)];
  var val83 = data1[(alu51+211203)];
  var val84 = data1[(alu51+217603)];
  var val85 = data1[(alu51+224003)];
  data0[alu51] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[(alu51+6400)] = (val71+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[(alu51+12800)] = (val72+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[(alu51+19200)] = (val73+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[(alu51+1)] = (val74+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[(alu51+6401)] = (val75+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[(alu51+12801)] = (val76+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[(alu51+19201)] = (val77+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[(alu51+2)] = (val78+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[(alu51+6402)] = (val79+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[(alu51+12802)] = (val80+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[(alu51+19202)] = (val81+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[(alu51+3)] = (val82+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[(alu51+6403)] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[(alu51+12803)] = (val84+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  data0[(alu51+19203)] = (val85+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
}`;

const r_4_5_5_2_16_4_32_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*2304)+(lidx0*1152)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-81)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-80)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-79)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+288)];
    var val9 = data2[(alu9+291)];
    var val10 = data2[(alu9+576)];
    var val11 = data2[(alu9+579)];
    var val12 = data2[(alu9+864)];
    var val13 = data2[(alu9+867)];
    var val14 = select(0.0f, data1[(alu8+-78)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+79)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+80)], alu6);
    var val19 = select(0.0f, data1[(alu8+81)], alu6);
    var val20 = data2[(alu9+294)];
    var val21 = data2[(alu9+582)];
    var val22 = data2[(alu9+870)];
    var val23 = select(0.0f, data1[(alu8+82)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+289)];
    var val26 = data2[(alu9+577)];
    var val27 = data2[(alu9+865)];
    var val28 = select(0.0f, data1[(alu8+-77)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+292)];
    var val31 = data2[(alu9+580)];
    var val32 = data2[(alu9+868)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+295)];
    var val36 = data2[(alu9+583)];
    var val37 = data2[(alu9+871)];
    var val38 = select(0.0f, data1[(alu8+83)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+290)];
    var val41 = data2[(alu9+578)];
    var val42 = data2[(alu9+866)];
    var val43 = select(0.0f, data1[(alu8+-76)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+293)];
    var val46 = data2[(alu9+581)];
    var val47 = data2[(alu9+869)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+296)];
    var val51 = data2[(alu9+584)];
    var val52 = data2[(alu9+872)];
    var val53 = select(0.0f, data1[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+6400)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+12800)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+19200)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+6401)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+12801)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+19201)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+6402)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+12802)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+19202)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+6403)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+12803)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+19203)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_4_5_5_2_16_4_32_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*2304)+(lidx0*1152)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu8+-81)], (alu4&alu5));
    var val1 = data3[alu9];
    var val2 = select(0.0f, data2[(alu8+-1)], alu4);
    var val3 = data3[(alu9+3)];
    var val4 = select(0.0f, data2[(alu8+-80)], alu5);
    var val5 = data2[alu8];
    var val6 = select(0.0f, data2[(alu8+-79)], alu5);
    var val7 = data2[(alu8+1)];
    var val8 = data3[(alu9+288)];
    var val9 = data3[(alu9+291)];
    var val10 = data3[(alu9+576)];
    var val11 = data3[(alu9+579)];
    var val12 = data3[(alu9+864)];
    var val13 = data3[(alu9+867)];
    var val14 = select(0.0f, data2[(alu8+-78)], alu5);
    var val15 = data2[(alu8+2)];
    var val16 = select(0.0f, data2[(alu8+79)], (alu6&alu4));
    var val17 = data3[(alu9+6)];
    var val18 = select(0.0f, data2[(alu8+80)], alu6);
    var val19 = select(0.0f, data2[(alu8+81)], alu6);
    var val20 = data3[(alu9+294)];
    var val21 = data3[(alu9+582)];
    var val22 = data3[(alu9+870)];
    var val23 = select(0.0f, data2[(alu8+82)], alu6);
    var val24 = data3[(alu9+1)];
    var val25 = data3[(alu9+289)];
    var val26 = data3[(alu9+577)];
    var val27 = data3[(alu9+865)];
    var val28 = select(0.0f, data2[(alu8+-77)], alu5);
    var val29 = data3[(alu9+4)];
    var val30 = data3[(alu9+292)];
    var val31 = data3[(alu9+580)];
    var val32 = data3[(alu9+868)];
    var val33 = data2[(alu8+3)];
    var val34 = data3[(alu9+7)];
    var val35 = data3[(alu9+295)];
    var val36 = data3[(alu9+583)];
    var val37 = data3[(alu9+871)];
    var val38 = select(0.0f, data2[(alu8+83)], alu6);
    var val39 = data3[(alu9+2)];
    var val40 = data3[(alu9+290)];
    var val41 = data3[(alu9+578)];
    var val42 = data3[(alu9+866)];
    var val43 = select(0.0f, data2[(alu8+-76)], (alu7&alu5));
    var val44 = data3[(alu9+5)];
    var val45 = data3[(alu9+293)];
    var val46 = data3[(alu9+581)];
    var val47 = data3[(alu9+869)];
    var val48 = select(0.0f, data2[(alu8+4)], alu7);
    var val49 = data3[(alu9+8)];
    var val50 = data3[(alu9+296)];
    var val51 = data3[(alu9+584)];
    var val52 = data3[(alu9+872)];
    var val53 = select(0.0f, data2[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data6[alu27];
  var val55 = data6[alu28];
  var val56 = data6[alu29];
  var val57 = data6[alu30];
  var val58 = data4[alu27];
  var val59 = data4[alu28];
  var val60 = data4[alu29];
  var val61 = data4[alu30];
  var val62 = data5[alu27];
  var val63 = data5[alu28];
  var val64 = data5[alu29];
  var val65 = data5[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu27];
  var val67 = data7[alu28];
  var val68 = data7[alu29];
  var val69 = data7[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  var alu52 = (alu51+6400);
  var alu53 = (alu51+12800);
  var alu54 = (alu51+19200);
  var alu55 = (alu51+1);
  var alu56 = (alu51+6401);
  var alu57 = (alu51+12801);
  var alu58 = (alu51+19201);
  var alu59 = (alu51+2);
  var alu60 = (alu51+6402);
  var alu61 = (alu51+12802);
  var alu62 = (alu51+19202);
  var alu63 = (alu51+3);
  var alu64 = (alu51+6403);
  var alu65 = (alu51+12803);
  var alu66 = (alu51+19203);
  var val70 = data1[alu51];
  var val71 = data1[alu52];
  var val72 = data1[alu53];
  var val73 = data1[alu54];
  var val74 = data1[alu55];
  var val75 = data1[alu56];
  var val76 = data1[alu57];
  var val77 = data1[alu58];
  var val78 = data1[alu59];
  var val79 = data1[alu60];
  var val80 = data1[alu61];
  var val81 = data1[alu62];
  var val82 = data1[alu63];
  var val83 = data1[alu64];
  var val84 = data1[alu65];
  var val85 = data1[alu66];
  data0[alu51] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[alu52] = (val71+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[alu53] = (val72+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[alu54] = (val73+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[alu55] = (val74+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[alu56] = (val75+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[alu57] = (val76+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[alu58] = (val77+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[alu59] = (val78+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[alu60] = (val79+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[alu61] = (val80+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[alu62] = (val81+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[alu63] = (val82+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[alu64] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[alu65] = (val84+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  data0[alu66] = (val85+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
}`;

const E_16_100_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 16 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*51200)+(lidx0*6400)+(lidx1<<2));
  var alu1 = (gidx1<4);
  var alu2 = (gidx1<8);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (gidx1<12);
  var alu7 = (alu2&(alu1!=true));
  var alu8 = (alu6&(alu2!=true));
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu7);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu7);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu7);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu7);
  var alu9 = (alu6!=true);
  var val8 = select(0.0f, data2[(alu0+-409600)], alu8);
  var val9 = select(0.0f, data2[(alu0+-409599)], alu8);
  var val10 = select(0.0f, data2[(alu0+-409598)], alu8);
  var val11 = select(0.0f, data2[(alu0+-409597)], alu8);
  var val12 = select(0.0f, data3[(alu0+-614400)], alu9);
  var val13 = select(0.0f, data3[(alu0+-614399)], alu9);
  var val14 = select(0.0f, data3[(alu0+-614398)], alu9);
  var val15 = select(0.0f, data3[(alu0+-614397)], alu9);
  data0[alu0] = (val12+val8+val0+val1);
  data0[alu3] = (val13+val9+val2+val3);
  data0[alu4] = (val14+val10+val4+val5);
  data0[alu5] = (val15+val11+val6+val7);
}`;

const r_2_100_8_16_32_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1<<12)+(lidx0<<9)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+129)];
    var val5 = data2[(alu3+128)];
    var val6 = data2[(alu3+257)];
    var val7 = data2[(alu3+256)];
    var val8 = data2[(alu3+385)];
    var val9 = data2[(alu3+384)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+130)];
    var val19 = data2[(alu3+258)];
    var val20 = data2[(alu3+386)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+131)];
    var val27 = data2[(alu3+259)];
    var val28 = data2[(alu3+387)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*204800)+(lidx0*25600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+6400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+12800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+19200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+6401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+12801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+19201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+6402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+12802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+19202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+6403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+12803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+19203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_4_5_5_8_8_2_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (((gidx0+lidx2)<1)!=true);
  var alu1 = (((gidx1+lidx1)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = ((gidx1*1280)+(lidx1*160)+(ridx0*6400)+(gidx0<<4)+(lidx2<<3));
    var alu3 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-81)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-79)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+576)];
    var val7 = data2[(alu3+579)];
    var val8 = data2[(alu3+1152)];
    var val9 = data2[(alu3+1155)];
    var val10 = data2[(alu3+1728)];
    var val11 = data2[(alu3+1731)];
    var val12 = select(0.0f, data1[(alu2+-77)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-75)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+79)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+81)];
    var val19 = data2[(alu3+582)];
    var val20 = data2[(alu3+1158)];
    var val21 = data2[(alu3+1734)];
    var val22 = data1[(alu2+83)];
    var val23 = data1[(alu2+85)];
    var val24 = select(0.0f, data1[(alu2+-80)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+577)];
    var val27 = data2[(alu3+1153)];
    var val28 = data2[(alu3+1729)];
    var val29 = select(0.0f, data1[(alu2+-78)], alu1);
    var val30 = select(0.0f, data1[(alu2+-76)], alu1);
    var val31 = select(0.0f, data1[(alu2+-74)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+580)];
    var val35 = data2[(alu3+1156)];
    var val36 = data2[(alu3+1732)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+80)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+583)];
    var val43 = data2[(alu3+1159)];
    var val44 = data2[(alu3+1735)];
    var val45 = data1[(alu2+82)];
    var val46 = data1[(alu2+84)];
    var val47 = data1[(alu2+86)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+578)];
    var val50 = data2[(alu3+1154)];
    var val51 = data2[(alu3+1730)];
    var val52 = select(0.0f, data1[(alu2+-73)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+581)];
    var val55 = data2[(alu3+1157)];
    var val56 = data2[(alu3+1733)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+584)];
    var val60 = data2[(alu3+1160)];
    var val61 = data2[(alu3+1736)];
    var val62 = data1[(alu2+87)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = ((gidx2<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*320)+(gidx2*51200)+(gidx0<<3)+(lidx0*6400)+(lidx1*40)+(lidx2<<2));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_4_25_8_16_32_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1<<12)+(lidx0<<9)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+129)];
    var val5 = data2[(alu3+128)];
    var val6 = data2[(alu3+257)];
    var val7 = data2[(alu3+256)];
    var val8 = data2[(alu3+385)];
    var val9 = data2[(alu3+384)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+130)];
    var val19 = data2[(alu3+258)];
    var val20 = data2[(alu3+386)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+131)];
    var val27 = data2[(alu3+259)];
    var val28 = data2[(alu3+387)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*6400)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_2_5_5_8_8_2_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+102359)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+102399)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+102360)], alu5);
    var val5 = data1[(alu8+102400)];
    var val6 = select(0.0f, data1[(alu8+102361)], alu5);
    var val7 = data1[(alu8+102401)];
    var val8 = data2[(alu9+576)];
    var val9 = data2[(alu9+579)];
    var val10 = data2[(alu9+1152)];
    var val11 = data2[(alu9+1155)];
    var val12 = data2[(alu9+1728)];
    var val13 = data2[(alu9+1731)];
    var val14 = select(0.0f, data1[(alu8+102362)], alu5);
    var val15 = data1[(alu8+102402)];
    var val16 = select(0.0f, data1[(alu8+102439)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+102440)], alu6);
    var val19 = select(0.0f, data1[(alu8+102441)], alu6);
    var val20 = data2[(alu9+582)];
    var val21 = data2[(alu9+1158)];
    var val22 = data2[(alu9+1734)];
    var val23 = select(0.0f, data1[(alu8+102442)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+577)];
    var val26 = data2[(alu9+1153)];
    var val27 = data2[(alu9+1729)];
    var val28 = select(0.0f, data1[(alu8+102363)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+580)];
    var val31 = data2[(alu9+1156)];
    var val32 = data2[(alu9+1732)];
    var val33 = data1[(alu8+102403)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+583)];
    var val36 = data2[(alu9+1159)];
    var val37 = data2[(alu9+1735)];
    var val38 = select(0.0f, data1[(alu8+102443)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+578)];
    var val41 = data2[(alu9+1154)];
    var val42 = data2[(alu9+1730)];
    var val43 = select(0.0f, data1[(alu8+102364)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+581)];
    var val46 = data2[(alu9+1157)];
    var val47 = data2[(alu9+1733)];
    var val48 = select(0.0f, data1[(alu8+102404)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+584)];
    var val51 = data2[(alu9+1160)];
    var val52 = data2[(alu9+1736)];
    var val53 = select(0.0f, data1[(alu8+102444)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<5)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*6400)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+1600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+3200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+4800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+1601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+3201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+4801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+1602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+3202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+4802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+1603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+3203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+4803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_2_5_5_8_8_2_64_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu8+-41)], (alu4&alu5));
    var val1 = data3[alu9];
    var val2 = select(0.0f, data2[(alu8+-1)], alu4);
    var val3 = data3[(alu9+3)];
    var val4 = select(0.0f, data2[(alu8+-40)], alu5);
    var val5 = data2[alu8];
    var val6 = select(0.0f, data2[(alu8+-39)], alu5);
    var val7 = data2[(alu8+1)];
    var val8 = data3[(alu9+576)];
    var val9 = data3[(alu9+579)];
    var val10 = data3[(alu9+1152)];
    var val11 = data3[(alu9+1155)];
    var val12 = data3[(alu9+1728)];
    var val13 = data3[(alu9+1731)];
    var val14 = select(0.0f, data2[(alu8+-38)], alu5);
    var val15 = data2[(alu8+2)];
    var val16 = select(0.0f, data2[(alu8+39)], (alu6&alu4));
    var val17 = data3[(alu9+6)];
    var val18 = select(0.0f, data2[(alu8+40)], alu6);
    var val19 = select(0.0f, data2[(alu8+41)], alu6);
    var val20 = data3[(alu9+582)];
    var val21 = data3[(alu9+1158)];
    var val22 = data3[(alu9+1734)];
    var val23 = select(0.0f, data2[(alu8+42)], alu6);
    var val24 = data3[(alu9+1)];
    var val25 = data3[(alu9+577)];
    var val26 = data3[(alu9+1153)];
    var val27 = data3[(alu9+1729)];
    var val28 = select(0.0f, data2[(alu8+-37)], alu5);
    var val29 = data3[(alu9+4)];
    var val30 = data3[(alu9+580)];
    var val31 = data3[(alu9+1156)];
    var val32 = data3[(alu9+1732)];
    var val33 = data2[(alu8+3)];
    var val34 = data3[(alu9+7)];
    var val35 = data3[(alu9+583)];
    var val36 = data3[(alu9+1159)];
    var val37 = data3[(alu9+1735)];
    var val38 = select(0.0f, data2[(alu8+43)], alu6);
    var val39 = data3[(alu9+2)];
    var val40 = data3[(alu9+578)];
    var val41 = data3[(alu9+1154)];
    var val42 = data3[(alu9+1730)];
    var val43 = select(0.0f, data2[(alu8+-36)], (alu7&alu5));
    var val44 = data3[(alu9+5)];
    var val45 = data3[(alu9+581)];
    var val46 = data3[(alu9+1157)];
    var val47 = data3[(alu9+1733)];
    var val48 = select(0.0f, data2[(alu8+4)], alu7);
    var val49 = data3[(alu9+8)];
    var val50 = data3[(alu9+584)];
    var val51 = data3[(alu9+1160)];
    var val52 = data3[(alu9+1736)];
    var val53 = select(0.0f, data2[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<5)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data6[alu27];
  var val55 = data6[alu28];
  var val56 = data6[alu29];
  var val57 = data6[alu30];
  var val58 = data4[alu27];
  var val59 = data4[alu28];
  var val60 = data4[alu29];
  var val61 = data4[alu30];
  var val62 = data5[alu27];
  var val63 = data5[alu28];
  var val64 = data5[alu29];
  var val65 = data5[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu27];
  var val67 = data7[alu28];
  var val68 = data7[alu29];
  var val69 = data7[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*6400)+alu2+alu3);
  var val70 = data1[(alu51+102400)];
  var val71 = data1[(alu51+104000)];
  var val72 = data1[(alu51+105600)];
  var val73 = data1[(alu51+107200)];
  var val74 = data1[(alu51+102401)];
  var val75 = data1[(alu51+104001)];
  var val76 = data1[(alu51+105601)];
  var val77 = data1[(alu51+107201)];
  var val78 = data1[(alu51+102402)];
  var val79 = data1[(alu51+104002)];
  var val80 = data1[(alu51+105602)];
  var val81 = data1[(alu51+107202)];
  var val82 = data1[(alu51+102403)];
  var val83 = data1[(alu51+104003)];
  var val84 = data1[(alu51+105603)];
  var val85 = data1[(alu51+107203)];
  data0[alu51] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[(alu51+1600)] = (val71+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[(alu51+3200)] = (val72+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[(alu51+4800)] = (val73+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[(alu51+1)] = (val74+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[(alu51+1601)] = (val75+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[(alu51+3201)] = (val76+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[(alu51+4801)] = (val77+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[(alu51+2)] = (val78+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[(alu51+1602)] = (val79+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[(alu51+3202)] = (val80+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[(alu51+4802)] = (val81+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[(alu51+3)] = (val82+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[(alu51+1603)] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[(alu51+3203)] = (val84+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  data0[(alu51+4803)] = (val85+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
}`;

const r_2_5_5_8_8_2_64_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-41)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-40)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-39)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+576)];
    var val9 = data2[(alu9+579)];
    var val10 = data2[(alu9+1152)];
    var val11 = data2[(alu9+1155)];
    var val12 = data2[(alu9+1728)];
    var val13 = data2[(alu9+1731)];
    var val14 = select(0.0f, data1[(alu8+-38)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+39)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+40)], alu6);
    var val19 = select(0.0f, data1[(alu8+41)], alu6);
    var val20 = data2[(alu9+582)];
    var val21 = data2[(alu9+1158)];
    var val22 = data2[(alu9+1734)];
    var val23 = select(0.0f, data1[(alu8+42)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+577)];
    var val26 = data2[(alu9+1153)];
    var val27 = data2[(alu9+1729)];
    var val28 = select(0.0f, data1[(alu8+-37)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+580)];
    var val31 = data2[(alu9+1156)];
    var val32 = data2[(alu9+1732)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+583)];
    var val36 = data2[(alu9+1159)];
    var val37 = data2[(alu9+1735)];
    var val38 = select(0.0f, data1[(alu8+43)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+578)];
    var val41 = data2[(alu9+1154)];
    var val42 = data2[(alu9+1730)];
    var val43 = select(0.0f, data1[(alu8+-36)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+581)];
    var val46 = data2[(alu9+1157)];
    var val47 = data2[(alu9+1733)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+584)];
    var val51 = data2[(alu9+1160)];
    var val52 = data2[(alu9+1736)];
    var val53 = select(0.0f, data1[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<5)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*6400)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+1600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+3200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+4800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+1601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+3201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+4801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+1602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+3202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+4802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+1603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+3203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+4803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_2_5_5_8_8_2_64_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu8+-41)], (alu4&alu5));
    var val1 = data3[alu9];
    var val2 = select(0.0f, data2[(alu8+-1)], alu4);
    var val3 = data3[(alu9+3)];
    var val4 = select(0.0f, data2[(alu8+-40)], alu5);
    var val5 = data2[alu8];
    var val6 = select(0.0f, data2[(alu8+-39)], alu5);
    var val7 = data2[(alu8+1)];
    var val8 = data3[(alu9+576)];
    var val9 = data3[(alu9+579)];
    var val10 = data3[(alu9+1152)];
    var val11 = data3[(alu9+1155)];
    var val12 = data3[(alu9+1728)];
    var val13 = data3[(alu9+1731)];
    var val14 = select(0.0f, data2[(alu8+-38)], alu5);
    var val15 = data2[(alu8+2)];
    var val16 = select(0.0f, data2[(alu8+39)], (alu6&alu4));
    var val17 = data3[(alu9+6)];
    var val18 = select(0.0f, data2[(alu8+40)], alu6);
    var val19 = select(0.0f, data2[(alu8+41)], alu6);
    var val20 = data3[(alu9+582)];
    var val21 = data3[(alu9+1158)];
    var val22 = data3[(alu9+1734)];
    var val23 = select(0.0f, data2[(alu8+42)], alu6);
    var val24 = data3[(alu9+1)];
    var val25 = data3[(alu9+577)];
    var val26 = data3[(alu9+1153)];
    var val27 = data3[(alu9+1729)];
    var val28 = select(0.0f, data2[(alu8+-37)], alu5);
    var val29 = data3[(alu9+4)];
    var val30 = data3[(alu9+580)];
    var val31 = data3[(alu9+1156)];
    var val32 = data3[(alu9+1732)];
    var val33 = data2[(alu8+3)];
    var val34 = data3[(alu9+7)];
    var val35 = data3[(alu9+583)];
    var val36 = data3[(alu9+1159)];
    var val37 = data3[(alu9+1735)];
    var val38 = select(0.0f, data2[(alu8+43)], alu6);
    var val39 = data3[(alu9+2)];
    var val40 = data3[(alu9+578)];
    var val41 = data3[(alu9+1154)];
    var val42 = data3[(alu9+1730)];
    var val43 = select(0.0f, data2[(alu8+-36)], (alu7&alu5));
    var val44 = data3[(alu9+5)];
    var val45 = data3[(alu9+581)];
    var val46 = data3[(alu9+1157)];
    var val47 = data3[(alu9+1733)];
    var val48 = select(0.0f, data2[(alu8+4)], alu7);
    var val49 = data3[(alu9+8)];
    var val50 = data3[(alu9+584)];
    var val51 = data3[(alu9+1160)];
    var val52 = data3[(alu9+1736)];
    var val53 = select(0.0f, data2[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<5)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data6[alu27];
  var val55 = data6[alu28];
  var val56 = data6[alu29];
  var val57 = data6[alu30];
  var val58 = data4[alu27];
  var val59 = data4[alu28];
  var val60 = data4[alu29];
  var val61 = data4[alu30];
  var val62 = data5[alu27];
  var val63 = data5[alu28];
  var val64 = data5[alu29];
  var val65 = data5[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu27];
  var val67 = data7[alu28];
  var val68 = data7[alu29];
  var val69 = data7[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*6400)+alu2+alu3);
  var alu52 = (alu51+1600);
  var alu53 = (alu51+3200);
  var alu54 = (alu51+4800);
  var alu55 = (alu51+1);
  var alu56 = (alu51+1601);
  var alu57 = (alu51+3201);
  var alu58 = (alu51+4801);
  var alu59 = (alu51+2);
  var alu60 = (alu51+1602);
  var alu61 = (alu51+3202);
  var alu62 = (alu51+4802);
  var alu63 = (alu51+3);
  var alu64 = (alu51+1603);
  var alu65 = (alu51+3203);
  var alu66 = (alu51+4803);
  var val70 = data1[alu51];
  var val71 = data1[alu52];
  var val72 = data1[alu53];
  var val73 = data1[alu54];
  var val74 = data1[alu55];
  var val75 = data1[alu56];
  var val76 = data1[alu57];
  var val77 = data1[alu58];
  var val78 = data1[alu59];
  var val79 = data1[alu60];
  var val80 = data1[alu61];
  var val81 = data1[alu62];
  var val82 = data1[alu63];
  var val83 = data1[alu64];
  var val84 = data1[alu65];
  var val85 = data1[alu66];
  data0[alu51] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[alu52] = (val71+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[alu53] = (val72+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[alu54] = (val73+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[alu55] = (val74+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[alu56] = (val75+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[alu57] = (val76+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[alu58] = (val77+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[alu59] = (val78+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[alu60] = (val79+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[alu61] = (val80+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[alu62] = (val81+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[alu63] = (val82+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[alu64] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[alu65] = (val84+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  data0[alu66] = (val85+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
}`;

const E_32_25_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 32 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*12800)+(lidx0*1600)+(lidx1<<2));
  var alu1 = (gidx1<8);
  var alu2 = (gidx1<16);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (gidx1<24);
  var alu7 = (alu2&(alu1!=true));
  var alu8 = (alu6&(alu2!=true));
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu7);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu7);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu7);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu7);
  var alu9 = (alu6!=true);
  var val8 = select(0.0f, data2[(alu0+-204800)], alu8);
  var val9 = select(0.0f, data2[(alu0+-204799)], alu8);
  var val10 = select(0.0f, data2[(alu0+-204798)], alu8);
  var val11 = select(0.0f, data2[(alu0+-204797)], alu8);
  var val12 = select(0.0f, data3[(alu0+-307200)], alu9);
  var val13 = select(0.0f, data3[(alu0+-307199)], alu9);
  var val14 = select(0.0f, data3[(alu0+-307198)], alu9);
  var val15 = select(0.0f, data3[(alu0+-307197)], alu9);
  data0[alu0] = (val12+val8+val0+val1);
  data0[alu3] = (val13+val9+val2+val3);
  data0[alu4] = (val14+val10+val4+val5);
  data0[alu5] = (val15+val11+val6+val7);
}`;

const r_4_25_8_16_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1<<13)+(lidx0<<10)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+257)];
    var val5 = data2[(alu3+256)];
    var val6 = data2[(alu3+513)];
    var val7 = data2[(alu3+512)];
    var val8 = data2[(alu3+769)];
    var val9 = data2[(alu3+768)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+258)];
    var val19 = data2[(alu3+514)];
    var val20 = data2[(alu3+770)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+259)];
    var val27 = data2[(alu3+515)];
    var val28 = data2[(alu3+771)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*6400)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_2_5_5_32_4_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = ((gidx0<1)!=true);
  var alu1 = (((gidx1+lidx1)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu2 = ((gidx1*320)+(lidx1*80)+(ridx0*1600)+(gidx0<<3));
    var alu3 = ((gidx2*147456)+(lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-41)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-39)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+1152)];
    var val7 = data2[(alu3+1155)];
    var val8 = data2[(alu3+2304)];
    var val9 = data2[(alu3+2307)];
    var val10 = data2[(alu3+3456)];
    var val11 = data2[(alu3+3459)];
    var val12 = select(0.0f, data1[(alu2+-37)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-35)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+39)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+41)];
    var val19 = data2[(alu3+1158)];
    var val20 = data2[(alu3+2310)];
    var val21 = data2[(alu3+3462)];
    var val22 = data1[(alu2+43)];
    var val23 = data1[(alu2+45)];
    var val24 = select(0.0f, data1[(alu2+-40)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+1153)];
    var val27 = data2[(alu3+2305)];
    var val28 = data2[(alu3+3457)];
    var val29 = select(0.0f, data1[(alu2+-38)], alu1);
    var val30 = select(0.0f, data1[(alu2+-36)], alu1);
    var val31 = select(0.0f, data1[(alu2+-34)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+1156)];
    var val35 = data2[(alu3+2308)];
    var val36 = data2[(alu3+3460)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+40)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+1159)];
    var val43 = data2[(alu3+2311)];
    var val44 = data2[(alu3+3463)];
    var val45 = data1[(alu2+42)];
    var val46 = data1[(alu2+44)];
    var val47 = data1[(alu2+46)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+1154)];
    var val50 = data2[(alu3+2306)];
    var val51 = data2[(alu3+3458)];
    var val52 = select(0.0f, data1[(alu2+-33)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+1157)];
    var val55 = data2[(alu3+2309)];
    var val56 = data2[(alu3+3461)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+1160)];
    var val60 = data2[(alu3+2312)];
    var val61 = data2[(alu3+3464)];
    var val62 = data1[(alu2+47)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = ((gidx2<<7)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*80)+(gidx2*51200)+(gidx0<<2)+(lidx0*1600)+(lidx1*20));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_2_25_32_4_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((gidx1<<15)+(lidx0<<10)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+257)];
    var val5 = data2[(alu3+256)];
    var val6 = data2[(alu3+513)];
    var val7 = data2[(alu3+512)];
    var val8 = data2[(alu3+769)];
    var val9 = data2[(alu3+768)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+258)];
    var val19 = data2[(alu3+514)];
    var val20 = data2[(alu3+770)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+259)];
    var val27 = data2[(alu3+515)];
    var val28 = data2[(alu3+771)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<7)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*1600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_5_5_32_4_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<2);
  var alu1 = (gidx1*80);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu7 = (alu1+alu2+(ridx0*400)+alu0);
    var alu8 = ((lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+51179)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+51199)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+51180)], alu4);
    var val5 = data1[(alu7+51200)];
    var val6 = select(0.0f, data1[(alu7+51181)], alu4);
    var val7 = data1[(alu7+51201)];
    var val8 = data2[(alu8+1152)];
    var val9 = data2[(alu8+1155)];
    var val10 = data2[(alu8+2304)];
    var val11 = data2[(alu8+2307)];
    var val12 = data2[(alu8+3456)];
    var val13 = data2[(alu8+3459)];
    var val14 = select(0.0f, data1[(alu7+51182)], alu4);
    var val15 = data1[(alu7+51202)];
    var val16 = select(0.0f, data1[(alu7+51219)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+51220)], alu5);
    var val19 = select(0.0f, data1[(alu7+51221)], alu5);
    var val20 = data2[(alu8+1158)];
    var val21 = data2[(alu8+2310)];
    var val22 = data2[(alu8+3462)];
    var val23 = select(0.0f, data1[(alu7+51222)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+1153)];
    var val26 = data2[(alu8+2305)];
    var val27 = data2[(alu8+3457)];
    var val28 = select(0.0f, data1[(alu7+51183)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+1156)];
    var val31 = data2[(alu8+2308)];
    var val32 = data2[(alu8+3460)];
    var val33 = data1[(alu7+51203)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+1159)];
    var val36 = data2[(alu8+2311)];
    var val37 = data2[(alu8+3463)];
    var val38 = select(0.0f, data1[(alu7+51223)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+1154)];
    var val41 = data2[(alu8+2306)];
    var val42 = data2[(alu8+3458)];
    var val43 = select(0.0f, data1[(alu7+51184)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+1157)];
    var val46 = data2[(alu8+2309)];
    var val47 = data2[(alu8+3461)];
    var val48 = select(0.0f, data1[(alu7+51204)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+1160)];
    var val51 = data2[(alu8+2312)];
    var val52 = data2[(alu8+3464)];
    var val53 = select(0.0f, data1[(alu7+51224)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = (lidx0<<2);
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_5_5_32_4_128_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<2);
  var alu1 = (gidx1*80);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu7 = (alu1+alu2+(ridx0*400)+alu0);
    var alu8 = ((lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data2[(alu7+-21)], (alu3&alu4));
    var val1 = data3[alu8];
    var val2 = select(0.0f, data2[(alu7+-1)], alu3);
    var val3 = data3[(alu8+3)];
    var val4 = select(0.0f, data2[(alu7+-20)], alu4);
    var val5 = data2[alu7];
    var val6 = select(0.0f, data2[(alu7+-19)], alu4);
    var val7 = data2[(alu7+1)];
    var val8 = data3[(alu8+1152)];
    var val9 = data3[(alu8+1155)];
    var val10 = data3[(alu8+2304)];
    var val11 = data3[(alu8+2307)];
    var val12 = data3[(alu8+3456)];
    var val13 = data3[(alu8+3459)];
    var val14 = select(0.0f, data2[(alu7+-18)], alu4);
    var val15 = data2[(alu7+2)];
    var val16 = select(0.0f, data2[(alu7+19)], (alu5&alu3));
    var val17 = data3[(alu8+6)];
    var val18 = select(0.0f, data2[(alu7+20)], alu5);
    var val19 = select(0.0f, data2[(alu7+21)], alu5);
    var val20 = data3[(alu8+1158)];
    var val21 = data3[(alu8+2310)];
    var val22 = data3[(alu8+3462)];
    var val23 = select(0.0f, data2[(alu7+22)], alu5);
    var val24 = data3[(alu8+1)];
    var val25 = data3[(alu8+1153)];
    var val26 = data3[(alu8+2305)];
    var val27 = data3[(alu8+3457)];
    var val28 = select(0.0f, data2[(alu7+-17)], alu4);
    var val29 = data3[(alu8+4)];
    var val30 = data3[(alu8+1156)];
    var val31 = data3[(alu8+2308)];
    var val32 = data3[(alu8+3460)];
    var val33 = data2[(alu7+3)];
    var val34 = data3[(alu8+7)];
    var val35 = data3[(alu8+1159)];
    var val36 = data3[(alu8+2311)];
    var val37 = data3[(alu8+3463)];
    var val38 = select(0.0f, data2[(alu7+23)], alu5);
    var val39 = data3[(alu8+2)];
    var val40 = data3[(alu8+1154)];
    var val41 = data3[(alu8+2306)];
    var val42 = data3[(alu8+3458)];
    var val43 = select(0.0f, data2[(alu7+-16)], (alu6&alu4));
    var val44 = data3[(alu8+5)];
    var val45 = data3[(alu8+1157)];
    var val46 = data3[(alu8+2309)];
    var val47 = data3[(alu8+3461)];
    var val48 = select(0.0f, data2[(alu7+4)], alu6);
    var val49 = data3[(alu8+8)];
    var val50 = data3[(alu8+1160)];
    var val51 = data3[(alu8+2312)];
    var val52 = data3[(alu8+3464)];
    var val53 = select(0.0f, data2[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = (lidx0<<2);
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data6[alu26];
  var val55 = data6[alu27];
  var val56 = data6[alu28];
  var val57 = data6[alu29];
  var val58 = data4[alu26];
  var val59 = data4[alu27];
  var val60 = data4[alu28];
  var val61 = data4[alu29];
  var val62 = data5[alu26];
  var val63 = data5[alu27];
  var val64 = data5[alu28];
  var val65 = data5[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data7[alu26];
  var val67 = data7[alu27];
  var val68 = data7[alu28];
  var val69 = data7[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+alu1+(lidx0*1600)+alu2);
  var val70 = data1[(alu50+51200)];
  var val71 = data1[(alu50+51600)];
  var val72 = data1[(alu50+52000)];
  var val73 = data1[(alu50+52400)];
  var val74 = data1[(alu50+51201)];
  var val75 = data1[(alu50+51601)];
  var val76 = data1[(alu50+52001)];
  var val77 = data1[(alu50+52401)];
  var val78 = data1[(alu50+51202)];
  var val79 = data1[(alu50+51602)];
  var val80 = data1[(alu50+52002)];
  var val81 = data1[(alu50+52402)];
  var val82 = data1[(alu50+51203)];
  var val83 = data1[(alu50+51603)];
  var val84 = data1[(alu50+52003)];
  var val85 = data1[(alu50+52403)];
  data0[alu50] = (val70+((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34));
  data0[(alu50+400)] = (val71+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  data0[(alu50+800)] = (val72+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  data0[(alu50+1200)] = (val73+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  data0[(alu50+1)] = (val74+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  data0[(alu50+401)] = (val75+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  data0[(alu50+801)] = (val76+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  data0[(alu50+1201)] = (val77+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  data0[(alu50+2)] = (val78+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  data0[(alu50+402)] = (val79+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  data0[(alu50+802)] = (val80+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  data0[(alu50+1202)] = (val81+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  data0[(alu50+3)] = (val82+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  data0[(alu50+403)] = (val83+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  data0[(alu50+803)] = (val84+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  data0[(alu50+1203)] = (val85+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
}`;

const E_12_25_32_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 12 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = ((gidx0<<4)+(gidx1*12800)+(lidx0*400)+(lidx1<<2));
  var alu1 = (gidx1<4);
  var alu2 = (gidx1<8);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (alu2&(alu1!=true));
  var alu7 = (alu2!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu6);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu6);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu6);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu6);
  var val8 = select(0.0f, data2[(alu0+-102400)], alu7);
  var val9 = select(0.0f, data2[(alu0+-102399)], alu7);
  var val10 = select(0.0f, data2[(alu0+-102398)], alu7);
  var val11 = select(0.0f, data2[(alu0+-102397)], alu7);
  data0[alu0] = (val8+val0+val1);
  data0[alu3] = (val9+val2+val3);
  data0[alu4] = (val10+val4+val5);
  data0[alu5] = (val11+val6+val7);
}`;

const r_2_25_32_4_96_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 96; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((gidx1*49152)+(lidx0*1536)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+385)];
    var val5 = data2[(alu3+384)];
    var val6 = data2[(alu3+769)];
    var val7 = data2[(alu3+768)];
    var val8 = data2[(alu3+1153)];
    var val9 = data2[(alu3+1152)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+386)];
    var val19 = data2[(alu3+770)];
    var val20 = data2[(alu3+1154)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+387)];
    var val27 = data2[(alu3+771)];
    var val28 = data2[(alu3+1155)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<7)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*1600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_25_32_4_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((lidx0<<10)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+257)];
    var val5 = data2[(alu3+256)];
    var val6 = data2[(alu3+513)];
    var val7 = data2[(alu3+512)];
    var val8 = data2[(alu3+769)];
    var val9 = data2[(alu3+768)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+258)];
    var val19 = data2[(alu3+514)];
    var val20 = data2[(alu3+770)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+259)];
    var val27 = data2[(alu3+515)];
    var val28 = data2[(alu3+771)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = (lidx0<<2);
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(lidx0*1600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_16_5_5_8_4_4_5_5 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@compute @workgroup_size(8,4,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 16 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 4 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*80);
  var alu1 = (gidx2*3200);
  var alu2 = (gidx0<<2);
  var alu3 = (lidx0*400);
  var alu4 = (lidx1*20);
  var alu5 = (lidx2+alu2);
  var acc0 = (f32(-INFINITY));
  for (var ridx0 = 0; ridx0 < 5; ridx0++) {
    var alu6 = (lidx1+(gidx1<<2)+ridx0);
    var alu7 = (alu5+alu0+alu4+(ridx0*20)+alu1+alu3);
    var alu8 = ((alu6<22)&((alu6<2)!=true));
    var val0 = select(0.0f, data1[(alu7+-42)], (((alu5<2)!=true)&alu8));
    var val1 = select(0.0f, data1[(alu7+-41)], ((((gidx0+lidx2)<1)!=true)&alu8));
    var val2 = select(0.0f, data1[(alu7+-40)], alu8);
    var alu9 = select(val0,val1,(val0<val1));
    var val3 = select(0.0f, data1[(alu7+-39)], ((alu5<19)&alu8));
    var alu10 = select(val2,alu9,(val2<alu9));
    var val4 = select(0.0f, data1[(alu7+-38)], ((alu5<18)&alu8));
    var alu11 = select(val3,alu10,(val3<alu10));
    var alu12 = select(val4,alu11,(val4<alu11));
    acc0 = select(acc0,alu12,(acc0<alu12));
  }
  data0[(lidx2+alu0+alu1+alu2+alu3+alu4)] = acc0;
}`;

const E_16_25_32_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 16 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = ((gidx0<<4)+(gidx1*12800)+(lidx0*400)+(lidx1<<2));
  var alu1 = (gidx1<4);
  var alu2 = (gidx1<8);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (gidx1<12);
  var alu7 = (alu2&(alu1!=true));
  var alu8 = (alu6&(alu2!=true));
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data2[(alu0+-51200)], alu7);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data2[(alu0+-51199)], alu7);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data2[(alu0+-51198)], alu7);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data2[(alu0+-51197)], alu7);
  var alu9 = (alu6!=true);
  var val8 = select(0.0f, data3[(alu0+-102400)], alu8);
  var val9 = select(0.0f, data3[(alu0+-102399)], alu8);
  var val10 = select(0.0f, data3[(alu0+-102398)], alu8);
  var val11 = select(0.0f, data3[(alu0+-102397)], alu8);
  var val12 = select(0.0f, data4[(alu0+-153600)], alu9);
  var val13 = select(0.0f, data4[(alu0+-153599)], alu9);
  var val14 = select(0.0f, data4[(alu0+-153598)], alu9);
  var val15 = select(0.0f, data4[(alu0+-153597)], alu9);
  data0[alu0] = (val12+val8+val0+val1);
  data0[alu3] = (val13+val9+val2+val3);
  data0[alu4] = (val14+val10+val4+val5);
  data0[alu5] = (val15+val11+val6+val7);
}`;

const r_2_25_32_4_128_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((gidx1<<16)+(lidx0<<11)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+513)];
    var val5 = data2[(alu3+512)];
    var val6 = data2[(alu3+1025)];
    var val7 = data2[(alu3+1024)];
    var val8 = data2[(alu3+1537)];
    var val9 = data2[(alu3+1536)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+514)];
    var val19 = data2[(alu3+1026)];
    var val20 = data2[(alu3+1538)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+515)];
    var val27 = data2[(alu3+1027)];
    var val28 = data2[(alu3+1539)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<7)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*1600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const E_48_5_5_8_8_2_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 48 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = ((gidx1*320)+(gidx2*12800)+(gidx0<<3)+(lidx0*1600)+(lidx1*40)+(lidx2<<2));
  var alu1 = ((gidx1*80)+(gidx2*3200)+(lidx0*400)+((lidx1>>1)*20)+(gidx0<<2)+(lidx2<<1));
  var alu2 = (gidx2<32);
  var alu3 = (alu2!=true);
  var val0 = select(0.0f, data1[alu1], alu2);
  var val1 = select(0.0f, data2[(alu0+-409600)], alu3);
  var val2 = select(0.0f, data2[(alu0+-409599)], alu3);
  var val3 = select(0.0f, data1[(alu1+1)], alu2);
  var val4 = select(0.0f, data2[(alu0+-409598)], alu3);
  var val5 = select(0.0f, data2[(alu0+-409597)], alu3);
  data0[alu0] = (val0+val1);
  data0[(alu0+1)] = (val0+val2);
  data0[(alu0+2)] = (val3+val4);
  data0[(alu0+3)] = (val3+val5);
}`;

const r_4_25_8_16_96_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 96; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1*12288)+(lidx0*1536)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+385)];
    var val5 = data2[(alu3+384)];
    var val6 = data2[(alu3+769)];
    var val7 = data2[(alu3+768)];
    var val8 = data2[(alu3+1153)];
    var val9 = data2[(alu3+1152)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+386)];
    var val19 = data2[(alu3+770)];
    var val20 = data2[(alu3+1154)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+387)];
    var val27 = data2[(alu3+771)];
    var val28 = data2[(alu3+1155)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*6400)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const E_24_25_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 24 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*12800)+(lidx0*1600)+(lidx1<<2));
  var alu1 = (gidx1<8);
  var alu2 = (gidx1<16);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (alu2&(alu1!=true));
  var alu7 = (alu2!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu6);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu6);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu6);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu6);
  var val8 = select(0.0f, data2[(alu0+-204800)], alu7);
  var val9 = select(0.0f, data2[(alu0+-204799)], alu7);
  var val10 = select(0.0f, data2[(alu0+-204798)], alu7);
  var val11 = select(0.0f, data2[(alu0+-204797)], alu7);
  data0[alu0] = (val8+val0+val1);
  data0[alu3] = (val9+val2+val3);
  data0[alu4] = (val10+val4+val5);
  data0[alu5] = (val11+val6+val7);
}`;

const r_4_25_8_16_48_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 48; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1*6144)+(lidx0*768)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+193)];
    var val5 = data2[(alu3+192)];
    var val6 = data2[(alu3+385)];
    var val7 = data2[(alu3+384)];
    var val8 = data2[(alu3+577)];
    var val9 = data2[(alu3+576)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+194)];
    var val19 = data2[(alu3+386)];
    var val20 = data2[(alu3+578)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+195)];
    var val27 = data2[(alu3+387)];
    var val28 = data2[(alu3+579)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*51200)+(lidx0*6400)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const E_96_5_5_2_16_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 96 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = ((gidx1*1280)+(gidx2*12800)+(gidx0<<4)+(lidx0*6400)+(lidx1*80)+(lidx2<<2));
  var alu1 = ((gidx1*320)+(gidx2*3200)+(lidx0*1600)+((lidx1>>1)*40)+(gidx0<<3)+(lidx2<<1));
  var alu2 = (gidx2<64);
  var alu3 = (alu2!=true);
  var val0 = select(0.0f, data1[alu1], alu2);
  var val1 = select(0.0f, data2[(alu0+-819200)], alu3);
  var val2 = select(0.0f, data2[(alu0+-819199)], alu3);
  var val3 = select(0.0f, data1[(alu1+1)], alu2);
  var val4 = select(0.0f, data2[(alu0+-819198)], alu3);
  var val5 = select(0.0f, data2[(alu0+-819197)], alu3);
  data0[alu0] = (val0+val1);
  data0[(alu0+1)] = (val0+val2);
  data0[(alu0+2)] = (val3+val4);
  data0[(alu0+3)] = (val3+val5);
}`;

const r_2_100_8_16_48_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 48; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1*6144)+(lidx0*768)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+193)];
    var val5 = data2[(alu3+192)];
    var val6 = data2[(alu3+385)];
    var val7 = data2[(alu3+384)];
    var val8 = data2[(alu3+577)];
    var val9 = data2[(alu3+576)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+194)];
    var val19 = data2[(alu3+386)];
    var val20 = data2[(alu3+578)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+195)];
    var val27 = data2[(alu3+387)];
    var val28 = data2[(alu3+579)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*204800)+(lidx0*25600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+6400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+12800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+19200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+6401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+12801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+19201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+6402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+12802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+19202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+6403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+12803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+19203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const E_12_100_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 12 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*51200)+(lidx0*6400)+(lidx1<<2));
  var alu1 = (gidx1<4);
  var alu2 = (gidx1<8);
  var alu3 = (alu0+1);
  var alu4 = (alu0+2);
  var alu5 = (alu0+3);
  var alu6 = (alu2&(alu1!=true));
  var alu7 = (alu2!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data1[alu0], alu6);
  var val2 = select(0.0f, data1[alu3], alu1);
  var val3 = select(0.0f, data1[alu3], alu6);
  var val4 = select(0.0f, data1[alu4], alu1);
  var val5 = select(0.0f, data1[alu4], alu6);
  var val6 = select(0.0f, data1[alu5], alu1);
  var val7 = select(0.0f, data1[alu5], alu6);
  var val8 = select(0.0f, data2[(alu0+-409600)], alu7);
  var val9 = select(0.0f, data2[(alu0+-409599)], alu7);
  var val10 = select(0.0f, data2[(alu0+-409598)], alu7);
  var val11 = select(0.0f, data2[(alu0+-409597)], alu7);
  data0[alu0] = (val8+val0+val1);
  data0[alu3] = (val9+val2+val3);
  data0[alu4] = (val10+val4+val5);
  data0[alu5] = (val11+val6+val7);
}`;

const r_2_100_8_16_24_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 24; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1*3072)+(lidx0*384)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+97)];
    var val5 = data2[(alu3+96)];
    var val6 = data2[(alu3+193)];
    var val7 = data2[(alu3+192)];
    var val8 = data2[(alu3+289)];
    var val9 = data2[(alu3+288)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+98)];
    var val19 = data2[(alu3+194)];
    var val20 = data2[(alu3+290)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+99)];
    var val27 = data2[(alu3+195)];
    var val28 = data2[(alu3+291)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val32 = data5[alu21];
  var val33 = data5[alu22];
  var val34 = data5[alu23];
  var val35 = data5[alu24];
  var val36 = data3[alu21];
  var val37 = data3[alu22];
  var val38 = data3[alu23];
  var val39 = data3[alu24];
  var val40 = data4[alu21];
  var val41 = data4[alu22];
  var val42 = data4[alu23];
  var val43 = data4[alu24];
  var alu25 = sqrt((1/(val32+0.001f)));
  var alu26 = sqrt((1/(val33+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = sqrt((1/(val35+0.001f)));
  var val44 = data6[alu21];
  var val45 = data6[alu22];
  var val46 = data6[alu23];
  var val47 = data6[alu24];
  var alu29 = (val44+(alu25*val40*(acc0-val36)));
  var alu30 = (val45+(alu26*val41*(acc1-val37)));
  var alu31 = (val46+(alu27*val42*(acc2-val38)));
  var alu32 = (val47+(alu28*val43*(acc3-val39)));
  var alu33 = (val44+(alu25*val40*(acc4-val36)));
  var alu34 = (val45+(alu26*val41*(acc5-val37)));
  var alu35 = (val46+(alu27*val42*(acc6-val38)));
  var alu36 = (val47+(alu28*val43*(acc7-val39)));
  var alu37 = (val44+(alu25*val40*(acc8-val36)));
  var alu38 = (val45+(alu26*val41*(acc9-val37)));
  var alu39 = (val46+(alu27*val42*(acc10-val38)));
  var alu40 = (val47+(alu28*val43*(acc11-val39)));
  var alu41 = (val44+(alu25*val40*(acc12-val36)));
  var alu42 = (val45+(alu26*val41*(acc13-val37)));
  var alu43 = (val46+(alu27*val42*(acc14-val38)));
  var alu44 = (val47+(alu28*val43*(acc15-val39)));
  var alu45 = (alu0+(gidx1*204800)+(lidx0*25600)+alu1);
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+6400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+12800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+19200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+6401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+12801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+19201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+6402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+12802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+19202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+6403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+12803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+19203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_8_5_5_2_16_4_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-81)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-80)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-79)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+576)];
    var val9 = data2[(alu9+579)];
    var val10 = data2[(alu9+1152)];
    var val11 = data2[(alu9+1155)];
    var val12 = data2[(alu9+1728)];
    var val13 = data2[(alu9+1731)];
    var val14 = select(0.0f, data1[(alu8+-78)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+79)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+80)], alu6);
    var val19 = select(0.0f, data1[(alu8+81)], alu6);
    var val20 = data2[(alu9+582)];
    var val21 = data2[(alu9+1158)];
    var val22 = data2[(alu9+1734)];
    var val23 = select(0.0f, data1[(alu8+82)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+577)];
    var val26 = data2[(alu9+1153)];
    var val27 = data2[(alu9+1729)];
    var val28 = select(0.0f, data1[(alu8+-77)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+580)];
    var val31 = data2[(alu9+1156)];
    var val32 = data2[(alu9+1732)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+583)];
    var val36 = data2[(alu9+1159)];
    var val37 = data2[(alu9+1735)];
    var val38 = select(0.0f, data1[(alu8+83)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+578)];
    var val41 = data2[(alu9+1154)];
    var val42 = data2[(alu9+1730)];
    var val43 = select(0.0f, data1[(alu8+-76)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+581)];
    var val46 = data2[(alu9+1157)];
    var val47 = data2[(alu9+1733)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+584)];
    var val51 = data2[(alu9+1160)];
    var val52 = data2[(alu9+1736)];
    var val53 = select(0.0f, data1[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+6400)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+12800)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+19200)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+6401)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+12801)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+19201)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+6402)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+12802)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+19202)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+6403)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+12803)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+19203)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_10_5_5_2_16_4_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 10 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-81)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-80)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-79)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+576)];
    var val9 = data2[(alu9+579)];
    var val10 = data2[(alu9+1152)];
    var val11 = data2[(alu9+1155)];
    var val12 = data2[(alu9+1728)];
    var val13 = data2[(alu9+1731)];
    var val14 = select(0.0f, data1[(alu8+-78)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+79)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+80)], alu6);
    var val19 = select(0.0f, data1[(alu8+81)], alu6);
    var val20 = data2[(alu9+582)];
    var val21 = data2[(alu9+1158)];
    var val22 = data2[(alu9+1734)];
    var val23 = select(0.0f, data1[(alu8+82)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+577)];
    var val26 = data2[(alu9+1153)];
    var val27 = data2[(alu9+1729)];
    var val28 = select(0.0f, data1[(alu8+-77)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+580)];
    var val31 = data2[(alu9+1156)];
    var val32 = data2[(alu9+1732)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+583)];
    var val36 = data2[(alu9+1159)];
    var val37 = data2[(alu9+1735)];
    var val38 = select(0.0f, data1[(alu8+83)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+578)];
    var val41 = data2[(alu9+1154)];
    var val42 = data2[(alu9+1730)];
    var val43 = select(0.0f, data1[(alu8+-76)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+581)];
    var val46 = data2[(alu9+1157)];
    var val47 = data2[(alu9+1733)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+584)];
    var val51 = data2[(alu9+1160)];
    var val52 = data2[(alu9+1736)];
    var val53 = select(0.0f, data1[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+6400)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+12800)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+19200)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+6401)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+12801)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+19201)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+6402)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+12802)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+19202)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+6403)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+12803)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+19203)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_2_5_5_8_8_2_64_4_4_3_3n4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (((gidx0+lidx2)<1)!=true);
  var alu1 = (((gidx1+lidx1)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = ((gidx1*1280)+(lidx1*160)+(ridx0*6400)+(gidx0<<4)+(lidx2<<3));
    var alu3 = ((gidx2*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-81)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-79)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+576)];
    var val7 = data2[(alu3+579)];
    var val8 = data2[(alu3+1152)];
    var val9 = data2[(alu3+1155)];
    var val10 = data2[(alu3+1728)];
    var val11 = data2[(alu3+1731)];
    var val12 = select(0.0f, data1[(alu2+-77)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-75)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+79)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+81)];
    var val19 = data2[(alu3+582)];
    var val20 = data2[(alu3+1158)];
    var val21 = data2[(alu3+1734)];
    var val22 = data1[(alu2+83)];
    var val23 = data1[(alu2+85)];
    var val24 = select(0.0f, data1[(alu2+-80)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+577)];
    var val27 = data2[(alu3+1153)];
    var val28 = data2[(alu3+1729)];
    var val29 = select(0.0f, data1[(alu2+-78)], alu1);
    var val30 = select(0.0f, data1[(alu2+-76)], alu1);
    var val31 = select(0.0f, data1[(alu2+-74)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+580)];
    var val35 = data2[(alu3+1156)];
    var val36 = data2[(alu3+1732)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+80)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+583)];
    var val43 = data2[(alu3+1159)];
    var val44 = data2[(alu3+1735)];
    var val45 = data1[(alu2+82)];
    var val46 = data1[(alu2+84)];
    var val47 = data1[(alu2+86)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+578)];
    var val50 = data2[(alu3+1154)];
    var val51 = data2[(alu3+1730)];
    var val52 = select(0.0f, data1[(alu2+-73)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+581)];
    var val55 = data2[(alu3+1157)];
    var val56 = data2[(alu3+1733)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+584)];
    var val60 = data2[(alu3+1160)];
    var val61 = data2[(alu3+1736)];
    var val62 = data1[(alu2+87)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = ((gidx2<<5)+(lidx0<<2));
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx1*320)+(gidx2*51200)+(gidx0<<3)+(lidx0*6400)+(lidx1*40)+(lidx2<<2));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+1600)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+3200)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+4800)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+1601)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+3201)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+4801)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+1602)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+3202)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+4802)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+1603)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+3203)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+4803)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_10_5_5_2_16_4_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 10 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx1*1280);
  var alu1 = (gidx0<<4);
  var alu2 = (lidx1*80);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<4))<79);
  var alu7 = ((lidx2+(gidx0<<2))<19);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*6400)+alu1+alu3);
    var alu9 = ((gidx2*5760)+(lidx0*2880)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-81)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-80)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-79)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+720)];
    var val9 = data2[(alu9+723)];
    var val10 = data2[(alu9+1440)];
    var val11 = data2[(alu9+1443)];
    var val12 = data2[(alu9+2160)];
    var val13 = data2[(alu9+2163)];
    var val14 = select(0.0f, data1[(alu8+-78)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+79)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+80)], alu6);
    var val19 = select(0.0f, data1[(alu8+81)], alu6);
    var val20 = data2[(alu9+726)];
    var val21 = data2[(alu9+1446)];
    var val22 = data2[(alu9+2166)];
    var val23 = select(0.0f, data1[(alu8+82)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+721)];
    var val26 = data2[(alu9+1441)];
    var val27 = data2[(alu9+2161)];
    var val28 = select(0.0f, data1[(alu8+-77)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+724)];
    var val31 = data2[(alu9+1444)];
    var val32 = data2[(alu9+2164)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+727)];
    var val36 = data2[(alu9+1447)];
    var val37 = data2[(alu9+2167)];
    var val38 = select(0.0f, data1[(alu8+83)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+722)];
    var val41 = data2[(alu9+1442)];
    var val42 = data2[(alu9+2162)];
    var val43 = select(0.0f, data1[(alu8+-76)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+725)];
    var val46 = data2[(alu9+1445)];
    var val47 = data2[(alu9+2165)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+728)];
    var val51 = data2[(alu9+1448)];
    var val52 = data2[(alu9+2168)];
    var val53 = select(0.0f, data1[(alu8+84)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<3)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*25600)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+6400)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+12800)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+19200)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+6401)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+12801)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+19201)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+6402)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+12802)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+19202)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+6403)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+12803)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+19203)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const E_24_25_8_16_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 24 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<6)+(gidx1*12800)+(lidx0*1600)+(lidx1<<2));
  var alu1 = (gidx1<8);
  var alu2 = (alu0+1);
  var alu3 = (alu0+2);
  var alu4 = (alu0+3);
  var alu5 = (alu1!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data2[(alu0+-102400)], alu5);
  var val2 = select(0.0f, data1[alu2], alu1);
  var val3 = select(0.0f, data2[(alu0+-102399)], alu5);
  var val4 = select(0.0f, data1[alu3], alu1);
  var val5 = select(0.0f, data2[(alu0+-102398)], alu5);
  var val6 = select(0.0f, data1[alu4], alu1);
  var val7 = select(0.0f, data2[(alu0+-102397)], alu5);
  data0[alu0] = (val0+val1);
  data0[alu2] = (val2+val3);
  data0[alu3] = (val4+val5);
  data0[alu4] = (val6+val7);
}`;

const r_2_100_8_16_16_4_4_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+65)];
    var val5 = data2[(alu3+64)];
    var val6 = data2[(alu3+129)];
    var val7 = data2[(alu3+128)];
    var val8 = data2[(alu3+193)];
    var val9 = data2[(alu3+192)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+66)];
    var val19 = data2[(alu3+130)];
    var val20 = data2[(alu3+194)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+67)];
    var val27 = data2[(alu3+131)];
    var val28 = data2[(alu3+195)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu0+(gidx1*204800)+(lidx0*25600)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+6400)] = (val33+acc1);
  data0[(alu22+12800)] = (val34+acc2);
  data0[(alu22+19200)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+6401)] = (val33+acc5);
  data0[(alu22+12801)] = (val34+acc6);
  data0[(alu22+19201)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+6402)] = (val33+acc9);
  data0[(alu22+12802)] = (val34+acc10);
  data0[(alu22+19202)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+6403)] = (val33+acc13);
  data0[(alu22+12803)] = (val34+acc14);
  data0[(alu22+19203)] = (val35+acc15);
}`;

const r_5_100_4_16_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 100 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*25600));
    var alu3 = ((gidx1*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data1[(alu2+6400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+81)];
    var val5 = data2[(alu3+80)];
    var val6 = data2[(alu3+161)];
    var val7 = data2[(alu3+160)];
    var val8 = data2[(alu3+241)];
    var val9 = data2[(alu3+240)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+6401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+6402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+6403)];
    var val16 = data1[(alu2+12800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+82)];
    var val19 = data2[(alu3+162)];
    var val20 = data2[(alu3+242)];
    var val21 = data1[(alu2+12801)];
    var val22 = data1[(alu2+12802)];
    var val23 = data1[(alu2+12803)];
    var val24 = data1[(alu2+19200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+83)];
    var val27 = data2[(alu3+163)];
    var val28 = data2[(alu3+243)];
    var val29 = data1[(alu2+19201)];
    var val30 = data1[(alu2+19202)];
    var val31 = data1[(alu2+19203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<4)+(lidx0<<2));
  var alu22 = (alu0+(gidx1*102400)+(lidx0*25600)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+6400)] = (val33+acc1);
  data0[(alu22+12800)] = (val34+acc2);
  data0[(alu22+19200)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+6401)] = (val33+acc5);
  data0[(alu22+12801)] = (val34+acc6);
  data0[(alu22+19201)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+6402)] = (val33+acc9);
  data0[(alu22+12802)] = (val34+acc10);
  data0[(alu22+19202)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+6403)] = (val33+acc13);
  data0[(alu22+12803)] = (val34+acc14);
  data0[(alu22+19203)] = (val35+acc15);
}`;

const r_2_5_5_8_8_2_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-41)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-40)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-39)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+1152)];
    var val9 = data2[(alu9+1155)];
    var val10 = data2[(alu9+2304)];
    var val11 = data2[(alu9+2307)];
    var val12 = data2[(alu9+3456)];
    var val13 = data2[(alu9+3459)];
    var val14 = select(0.0f, data1[(alu8+-38)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+39)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+40)], alu6);
    var val19 = select(0.0f, data1[(alu8+41)], alu6);
    var val20 = data2[(alu9+1158)];
    var val21 = data2[(alu9+2310)];
    var val22 = data2[(alu9+3462)];
    var val23 = select(0.0f, data1[(alu8+42)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+1153)];
    var val26 = data2[(alu9+2305)];
    var val27 = data2[(alu9+3457)];
    var val28 = select(0.0f, data1[(alu8+-37)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+1156)];
    var val31 = data2[(alu9+2308)];
    var val32 = data2[(alu9+3460)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+1159)];
    var val36 = data2[(alu9+2311)];
    var val37 = data2[(alu9+3463)];
    var val38 = select(0.0f, data1[(alu8+43)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+1154)];
    var val41 = data2[(alu9+2306)];
    var val42 = data2[(alu9+3458)];
    var val43 = select(0.0f, data1[(alu8+-36)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+1157)];
    var val46 = data2[(alu9+2309)];
    var val47 = data2[(alu9+3461)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+1160)];
    var val51 = data2[(alu9+2312)];
    var val52 = data2[(alu9+3464)];
    var val53 = select(0.0f, data1[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<5)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*51200)+alu1+(lidx0*6400)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+1600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+3200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+4800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+1601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+3201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+4801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+1602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+3202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+4802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+1603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+3203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+4803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_5_5_5_4_8_2_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*18432)+(lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-41)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-40)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-39)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+1152)];
    var val9 = data2[(alu9+1155)];
    var val10 = data2[(alu9+2304)];
    var val11 = data2[(alu9+2307)];
    var val12 = data2[(alu9+3456)];
    var val13 = data2[(alu9+3459)];
    var val14 = select(0.0f, data1[(alu8+-38)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+39)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+40)], alu6);
    var val19 = select(0.0f, data1[(alu8+41)], alu6);
    var val20 = data2[(alu9+1158)];
    var val21 = data2[(alu9+2310)];
    var val22 = data2[(alu9+3462)];
    var val23 = select(0.0f, data1[(alu8+42)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+1153)];
    var val26 = data2[(alu9+2305)];
    var val27 = data2[(alu9+3457)];
    var val28 = select(0.0f, data1[(alu8+-37)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+1156)];
    var val31 = data2[(alu9+2308)];
    var val32 = data2[(alu9+3460)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+1159)];
    var val36 = data2[(alu9+2311)];
    var val37 = data2[(alu9+3463)];
    var val38 = select(0.0f, data1[(alu8+43)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+1154)];
    var val41 = data2[(alu9+2306)];
    var val42 = data2[(alu9+3458)];
    var val43 = select(0.0f, data1[(alu8+-36)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+1157)];
    var val46 = data2[(alu9+2309)];
    var val47 = data2[(alu9+3461)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+1160)];
    var val51 = data2[(alu9+2312)];
    var val52 = data2[(alu9+3464)];
    var val53 = select(0.0f, data1[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<4)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*25600)+alu1+(lidx0*6400)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+1600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+3200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+4800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+1601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+3201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+4801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+1602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+3202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+4802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+1603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+3203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+4803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const r_5_5_32_4_128_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = ((gidx0<1)!=true);
  var alu1 = (((gidx1+lidx1)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu2 = ((gidx1*320)+(lidx1*80)+(ridx0*1600)+(gidx0<<3));
    var alu3 = ((lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu2+-41)], (alu0&alu1));
    var val1 = data2[alu3];
    var val2 = select(0.0f, data1[(alu2+-1)], alu0);
    var val3 = data2[(alu3+3)];
    var val4 = select(0.0f, data1[(alu2+-39)], alu1);
    var val5 = data1[(alu2+1)];
    var val6 = data2[(alu3+1152)];
    var val7 = data2[(alu3+1155)];
    var val8 = data2[(alu3+2304)];
    var val9 = data2[(alu3+2307)];
    var val10 = data2[(alu3+3456)];
    var val11 = data2[(alu3+3459)];
    var val12 = select(0.0f, data1[(alu2+-37)], alu1);
    var val13 = data1[(alu2+3)];
    var val14 = select(0.0f, data1[(alu2+-35)], alu1);
    var val15 = data1[(alu2+5)];
    var val16 = select(0.0f, data1[(alu2+39)], alu0);
    var val17 = data2[(alu3+6)];
    var val18 = data1[(alu2+41)];
    var val19 = data2[(alu3+1158)];
    var val20 = data2[(alu3+2310)];
    var val21 = data2[(alu3+3462)];
    var val22 = data1[(alu2+43)];
    var val23 = data1[(alu2+45)];
    var val24 = select(0.0f, data1[(alu2+-40)], alu1);
    var val25 = data2[(alu3+1)];
    var val26 = data2[(alu3+1153)];
    var val27 = data2[(alu3+2305)];
    var val28 = data2[(alu3+3457)];
    var val29 = select(0.0f, data1[(alu2+-38)], alu1);
    var val30 = select(0.0f, data1[(alu2+-36)], alu1);
    var val31 = select(0.0f, data1[(alu2+-34)], alu1);
    var val32 = data1[alu2];
    var val33 = data2[(alu3+4)];
    var val34 = data2[(alu3+1156)];
    var val35 = data2[(alu3+2308)];
    var val36 = data2[(alu3+3460)];
    var val37 = data1[(alu2+2)];
    var val38 = data1[(alu2+4)];
    var val39 = data1[(alu2+6)];
    var val40 = data1[(alu2+40)];
    var val41 = data2[(alu3+7)];
    var val42 = data2[(alu3+1159)];
    var val43 = data2[(alu3+2311)];
    var val44 = data2[(alu3+3463)];
    var val45 = data1[(alu2+42)];
    var val46 = data1[(alu2+44)];
    var val47 = data1[(alu2+46)];
    var val48 = data2[(alu3+2)];
    var val49 = data2[(alu3+1154)];
    var val50 = data2[(alu3+2306)];
    var val51 = data2[(alu3+3458)];
    var val52 = select(0.0f, data1[(alu2+-33)], alu1);
    var val53 = data2[(alu3+5)];
    var val54 = data2[(alu3+1157)];
    var val55 = data2[(alu3+2309)];
    var val56 = data2[(alu3+3461)];
    var val57 = data1[(alu2+7)];
    var val58 = data2[(alu3+8)];
    var val59 = data2[(alu3+1160)];
    var val60 = data2[(alu3+2312)];
    var val61 = data2[(alu3+3464)];
    var val62 = data1[(alu2+47)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25)+(val32*val33)+(val40*val41)+(val4*val48)+(val5*val53)+(val18*val58));
    acc1 = (acc1+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val26)+(val32*val34)+(val40*val42)+(val4*val49)+(val5*val54)+(val18*val59));
    acc2 = (acc2+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val27)+(val32*val35)+(val40*val43)+(val4*val50)+(val5*val55)+(val18*val60));
    acc3 = (acc3+(val0*val10)+(val2*val11)+(val16*val21)+(val24*val28)+(val32*val36)+(val40*val44)+(val4*val51)+(val5*val56)+(val18*val61));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val29*val25)+(val37*val33)+(val45*val41)+(val12*val48)+(val13*val53)+(val22*val58));
    acc5 = (acc5+(val4*val6)+(val5*val7)+(val18*val19)+(val29*val26)+(val37*val34)+(val45*val42)+(val12*val49)+(val13*val54)+(val22*val59));
    acc6 = (acc6+(val4*val8)+(val5*val9)+(val18*val20)+(val29*val27)+(val37*val35)+(val45*val43)+(val12*val50)+(val13*val55)+(val22*val60));
    acc7 = (acc7+(val4*val10)+(val5*val11)+(val18*val21)+(val29*val28)+(val37*val36)+(val45*val44)+(val12*val51)+(val13*val56)+(val22*val61));
    acc8 = (acc8+(val12*val1)+(val13*val3)+(val22*val17)+(val30*val25)+(val38*val33)+(val46*val41)+(val14*val48)+(val15*val53)+(val23*val58));
    acc9 = (acc9+(val12*val6)+(val13*val7)+(val22*val19)+(val30*val26)+(val38*val34)+(val46*val42)+(val14*val49)+(val15*val54)+(val23*val59));
    acc10 = (acc10+(val12*val8)+(val13*val9)+(val22*val20)+(val30*val27)+(val38*val35)+(val46*val43)+(val14*val50)+(val15*val55)+(val23*val60));
    acc11 = (acc11+(val12*val10)+(val13*val11)+(val22*val21)+(val30*val28)+(val38*val36)+(val46*val44)+(val14*val51)+(val15*val56)+(val23*val61));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val31*val25)+(val39*val33)+(val47*val41)+(val52*val48)+(val57*val53)+(val62*val58));
    acc13 = (acc13+(val14*val6)+(val15*val7)+(val23*val19)+(val31*val26)+(val39*val34)+(val47*val42)+(val52*val49)+(val57*val54)+(val62*val59));
    acc14 = (acc14+(val14*val8)+(val15*val9)+(val23*val20)+(val31*val27)+(val39*val35)+(val47*val43)+(val52*val50)+(val57*val55)+(val62*val60));
    acc15 = (acc15+(val14*val10)+(val15*val11)+(val23*val21)+(val31*val28)+(val39*val36)+(val47*val44)+(val52*val51)+(val57*val56)+(val62*val61));
  }
  var alu21 = (lidx0<<2);
  var alu22 = (alu21+1);
  var alu23 = (alu21+2);
  var alu24 = (alu21+3);
  var val63 = data5[alu21];
  var val64 = data5[alu22];
  var val65 = data5[alu23];
  var val66 = data5[alu24];
  var val67 = data3[alu21];
  var val68 = data3[alu22];
  var val69 = data3[alu23];
  var val70 = data3[alu24];
  var val71 = data4[alu21];
  var val72 = data4[alu22];
  var val73 = data4[alu23];
  var val74 = data4[alu24];
  var alu25 = sqrt((1/(val63+0.001f)));
  var alu26 = sqrt((1/(val64+0.001f)));
  var alu27 = sqrt((1/(val65+0.001f)));
  var alu28 = sqrt((1/(val66+0.001f)));
  var val75 = data6[alu21];
  var val76 = data6[alu22];
  var val77 = data6[alu23];
  var val78 = data6[alu24];
  var alu29 = (val75+(alu25*val71*(acc0-val67)));
  var alu30 = (val76+(alu26*val72*(acc1-val68)));
  var alu31 = (val77+(alu27*val73*(acc2-val69)));
  var alu32 = (val78+(alu28*val74*(acc3-val70)));
  var alu33 = (val75+(alu25*val71*(acc4-val67)));
  var alu34 = (val76+(alu26*val72*(acc5-val68)));
  var alu35 = (val77+(alu27*val73*(acc6-val69)));
  var alu36 = (val78+(alu28*val74*(acc7-val70)));
  var alu37 = (val75+(alu25*val71*(acc8-val67)));
  var alu38 = (val76+(alu26*val72*(acc9-val68)));
  var alu39 = (val77+(alu27*val73*(acc10-val69)));
  var alu40 = (val78+(alu28*val74*(acc11-val70)));
  var alu41 = (val75+(alu25*val71*(acc12-val67)));
  var alu42 = (val76+(alu26*val72*(acc13-val68)));
  var alu43 = (val77+(alu27*val73*(acc14-val69)));
  var alu44 = (val78+(alu28*val74*(acc15-val70)));
  var alu45 = ((gidx0<<2)+(gidx1*80)+(lidx0*1600)+(lidx1*20));
  data0[alu45] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  data0[(alu45+400)] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  data0[(alu45+800)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  data0[(alu45+1200)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  data0[(alu45+1)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  data0[(alu45+401)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu45+801)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu45+1201)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu45+2)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu45+402)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu45+802)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu45+1202)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu45+3)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu45+403)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu45+803)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu45+1203)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
}`;

const r_5_5_5_4_8_2_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (gidx1*320);
  var alu1 = (gidx0<<3);
  var alu2 = (lidx1*40);
  var alu3 = (lidx2<<2);
  var alu4 = (((gidx0+lidx2)<1)!=true);
  var alu5 = (((gidx1+lidx1)<1)!=true);
  var alu6 = ((lidx1+(gidx1<<3))<39);
  var alu7 = ((lidx2+(gidx0<<1))<9);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu8 = (alu0+alu2+(ridx0*1600)+alu1+alu3);
    var alu9 = ((gidx2*11520)+(lidx0*2880)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu8+-41)], (alu4&alu5));
    var val1 = data2[alu9];
    var val2 = select(0.0f, data1[(alu8+-1)], alu4);
    var val3 = data2[(alu9+3)];
    var val4 = select(0.0f, data1[(alu8+-40)], alu5);
    var val5 = data1[alu8];
    var val6 = select(0.0f, data1[(alu8+-39)], alu5);
    var val7 = data1[(alu8+1)];
    var val8 = data2[(alu9+720)];
    var val9 = data2[(alu9+723)];
    var val10 = data2[(alu9+1440)];
    var val11 = data2[(alu9+1443)];
    var val12 = data2[(alu9+2160)];
    var val13 = data2[(alu9+2163)];
    var val14 = select(0.0f, data1[(alu8+-38)], alu5);
    var val15 = data1[(alu8+2)];
    var val16 = select(0.0f, data1[(alu8+39)], (alu6&alu4));
    var val17 = data2[(alu9+6)];
    var val18 = select(0.0f, data1[(alu8+40)], alu6);
    var val19 = select(0.0f, data1[(alu8+41)], alu6);
    var val20 = data2[(alu9+726)];
    var val21 = data2[(alu9+1446)];
    var val22 = data2[(alu9+2166)];
    var val23 = select(0.0f, data1[(alu8+42)], alu6);
    var val24 = data2[(alu9+1)];
    var val25 = data2[(alu9+721)];
    var val26 = data2[(alu9+1441)];
    var val27 = data2[(alu9+2161)];
    var val28 = select(0.0f, data1[(alu8+-37)], alu5);
    var val29 = data2[(alu9+4)];
    var val30 = data2[(alu9+724)];
    var val31 = data2[(alu9+1444)];
    var val32 = data2[(alu9+2164)];
    var val33 = data1[(alu8+3)];
    var val34 = data2[(alu9+7)];
    var val35 = data2[(alu9+727)];
    var val36 = data2[(alu9+1447)];
    var val37 = data2[(alu9+2167)];
    var val38 = select(0.0f, data1[(alu8+43)], alu6);
    var val39 = data2[(alu9+2)];
    var val40 = data2[(alu9+722)];
    var val41 = data2[(alu9+1442)];
    var val42 = data2[(alu9+2162)];
    var val43 = select(0.0f, data1[(alu8+-36)], (alu7&alu5));
    var val44 = data2[(alu9+5)];
    var val45 = data2[(alu9+725)];
    var val46 = data2[(alu9+1445)];
    var val47 = data2[(alu9+2165)];
    var val48 = select(0.0f, data1[(alu8+4)], alu7);
    var val49 = data2[(alu9+8)];
    var val50 = data2[(alu9+728)];
    var val51 = data2[(alu9+1448)];
    var val52 = data2[(alu9+2168)];
    var val53 = select(0.0f, data1[(alu8+44)], (alu6&alu7));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu27 = ((gidx2<<4)+(lidx0<<2));
  var alu28 = (alu27+1);
  var alu29 = (alu27+2);
  var alu30 = (alu27+3);
  var val54 = data5[alu27];
  var val55 = data5[alu28];
  var val56 = data5[alu29];
  var val57 = data5[alu30];
  var val58 = data3[alu27];
  var val59 = data3[alu28];
  var val60 = data3[alu29];
  var val61 = data3[alu30];
  var val62 = data4[alu27];
  var val63 = data4[alu28];
  var val64 = data4[alu29];
  var val65 = data4[alu30];
  var alu31 = sqrt((1/(val54+0.001f)));
  var alu32 = sqrt((1/(val55+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu27];
  var val67 = data6[alu28];
  var val68 = data6[alu29];
  var val69 = data6[alu30];
  var alu35 = (val66+(alu31*val62*(acc0-val58)));
  var alu36 = (val67+(alu32*val63*(acc1-val59)));
  var alu37 = (val68+(alu33*val64*(acc2-val60)));
  var alu38 = (val69+(alu34*val65*(acc3-val61)));
  var alu39 = (val66+(alu31*val62*(acc4-val58)));
  var alu40 = (val67+(alu32*val63*(acc5-val59)));
  var alu41 = (val68+(alu33*val64*(acc6-val60)));
  var alu42 = (val69+(alu34*val65*(acc7-val61)));
  var alu43 = (val66+(alu31*val62*(acc8-val58)));
  var alu44 = (val67+(alu32*val63*(acc9-val59)));
  var alu45 = (val68+(alu33*val64*(acc10-val60)));
  var alu46 = (val69+(alu34*val65*(acc11-val61)));
  var alu47 = (val66+(alu31*val62*(acc12-val58)));
  var alu48 = (val67+(alu32*val63*(acc13-val59)));
  var alu49 = (val68+(alu33*val64*(acc14-val60)));
  var alu50 = (val69+(alu34*val65*(acc15-val61)));
  var alu51 = (alu0+(gidx2*25600)+alu1+(lidx0*6400)+alu2+alu3);
  data0[alu51] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu51+1600)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu51+3200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu51+4800)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu51+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu51+1601)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu51+3201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu51+4801)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu51+2)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu51+1602)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu51+3202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu51+4802)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu51+3)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu51+1603)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu51+3203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  data0[(alu51+4803)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
}`;

const E_12_25_32_4_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 12 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = ((gidx0<<4)+(gidx1*12800)+(lidx0*400)+(lidx1<<2));
  var alu1 = (gidx1<4);
  var alu2 = (alu0+1);
  var alu3 = (alu0+2);
  var alu4 = (alu0+3);
  var alu5 = (alu1!=true);
  var val0 = select(0.0f, data1[alu0], alu1);
  var val1 = select(0.0f, data2[(alu0+-51200)], alu5);
  var val2 = select(0.0f, data1[alu2], alu1);
  var val3 = select(0.0f, data2[(alu0+-51199)], alu5);
  var val4 = select(0.0f, data1[alu3], alu1);
  var val5 = select(0.0f, data2[(alu0+-51198)], alu5);
  var val6 = select(0.0f, data1[alu4], alu1);
  var val7 = select(0.0f, data2[(alu0+-51197)], alu5);
  data0[alu0] = (val0+val1);
  data0[alu2] = (val2+val3);
  data0[alu3] = (val4+val5);
  data0[alu4] = (val6+val7);
}`;

const r_2_25_8_16_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+65)];
    var val5 = data2[(alu3+64)];
    var val6 = data2[(alu3+129)];
    var val7 = data2[(alu3+128)];
    var val8 = data2[(alu3+193)];
    var val9 = data2[(alu3+192)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+66)];
    var val19 = data2[(alu3+130)];
    var val20 = data2[(alu3+194)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+67)];
    var val27 = data2[(alu3+131)];
    var val28 = data2[(alu3+195)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var alu22 = (alu0+(gidx1*51200)+(lidx0*6400)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+1600)] = (val33+acc1);
  data0[(alu22+3200)] = (val34+acc2);
  data0[(alu22+4800)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+1601)] = (val33+acc5);
  data0[(alu22+3201)] = (val34+acc6);
  data0[(alu22+4801)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+1602)] = (val33+acc9);
  data0[(alu22+3202)] = (val34+acc10);
  data0[(alu22+4802)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+1603)] = (val33+acc13);
  data0[(alu22+3203)] = (val34+acc14);
  data0[(alu22+4803)] = (val35+acc15);
}`;

const r_5_25_4_16_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*6400));
    var alu3 = ((gidx1*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data1[(alu2+1600)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+81)];
    var val5 = data2[(alu3+80)];
    var val6 = data2[(alu3+161)];
    var val7 = data2[(alu3+160)];
    var val8 = data2[(alu3+241)];
    var val9 = data2[(alu3+240)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+1601)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+1602)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+1603)];
    var val16 = data1[(alu2+3200)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+82)];
    var val19 = data2[(alu3+162)];
    var val20 = data2[(alu3+242)];
    var val21 = data1[(alu2+3201)];
    var val22 = data1[(alu2+3202)];
    var val23 = data1[(alu2+3203)];
    var val24 = data1[(alu2+4800)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+83)];
    var val27 = data2[(alu3+163)];
    var val28 = data2[(alu3+243)];
    var val29 = data1[(alu2+4801)];
    var val30 = data1[(alu2+4802)];
    var val31 = data1[(alu2+4803)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<4)+(lidx0<<2));
  var alu22 = (alu0+(gidx1*25600)+(lidx0*6400)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+1600)] = (val33+acc1);
  data0[(alu22+3200)] = (val34+acc2);
  data0[(alu22+4800)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+1601)] = (val33+acc5);
  data0[(alu22+3201)] = (val34+acc6);
  data0[(alu22+4801)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+1602)] = (val33+acc9);
  data0[(alu22+3202)] = (val34+acc10);
  data0[(alu22+4802)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+1603)] = (val33+acc13);
  data0[(alu22+3203)] = (val34+acc14);
  data0[(alu22+4803)] = (val35+acc15);
}`;

const r_5_5_32_4_128_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(32,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 32 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<2);
  var alu1 = (gidx1*80);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu7 = (alu1+alu2+(ridx0*400)+alu0);
    var alu8 = ((lidx0*4608)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+-21)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+-1)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+-20)], alu4);
    var val5 = data1[alu7];
    var val6 = select(0.0f, data1[(alu7+-19)], alu4);
    var val7 = data1[(alu7+1)];
    var val8 = data2[(alu8+1152)];
    var val9 = data2[(alu8+1155)];
    var val10 = data2[(alu8+2304)];
    var val11 = data2[(alu8+2307)];
    var val12 = data2[(alu8+3456)];
    var val13 = data2[(alu8+3459)];
    var val14 = select(0.0f, data1[(alu7+-18)], alu4);
    var val15 = data1[(alu7+2)];
    var val16 = select(0.0f, data1[(alu7+19)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+20)], alu5);
    var val19 = select(0.0f, data1[(alu7+21)], alu5);
    var val20 = data2[(alu8+1158)];
    var val21 = data2[(alu8+2310)];
    var val22 = data2[(alu8+3462)];
    var val23 = select(0.0f, data1[(alu7+22)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+1153)];
    var val26 = data2[(alu8+2305)];
    var val27 = data2[(alu8+3457)];
    var val28 = select(0.0f, data1[(alu7+-17)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+1156)];
    var val31 = data2[(alu8+2308)];
    var val32 = data2[(alu8+3460)];
    var val33 = data1[(alu7+3)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+1159)];
    var val36 = data2[(alu8+2311)];
    var val37 = data2[(alu8+3463)];
    var val38 = select(0.0f, data1[(alu7+23)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+1154)];
    var val41 = data2[(alu8+2306)];
    var val42 = data2[(alu8+3458)];
    var val43 = select(0.0f, data1[(alu7+-16)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+1157)];
    var val46 = data2[(alu8+2309)];
    var val47 = data2[(alu8+3461)];
    var val48 = select(0.0f, data1[(alu7+4)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+1160)];
    var val51 = data2[(alu8+2312)];
    var val52 = data2[(alu8+3464)];
    var val53 = select(0.0f, data1[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = (lidx0<<2);
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_5_5_16_4_256_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<2);
  var alu1 = (gidx1*80);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 256; ridx0++) {
    var alu7 = (alu1+alu2+(ridx0*400)+alu0);
    var alu8 = ((lidx0*9216)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+-21)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+-1)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+-20)], alu4);
    var val5 = data1[alu7];
    var val6 = select(0.0f, data1[(alu7+-19)], alu4);
    var val7 = data1[(alu7+1)];
    var val8 = data2[(alu8+2304)];
    var val9 = data2[(alu8+2307)];
    var val10 = data2[(alu8+4608)];
    var val11 = data2[(alu8+4611)];
    var val12 = data2[(alu8+6912)];
    var val13 = data2[(alu8+6915)];
    var val14 = select(0.0f, data1[(alu7+-18)], alu4);
    var val15 = data1[(alu7+2)];
    var val16 = select(0.0f, data1[(alu7+19)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+20)], alu5);
    var val19 = select(0.0f, data1[(alu7+21)], alu5);
    var val20 = data2[(alu8+2310)];
    var val21 = data2[(alu8+4614)];
    var val22 = data2[(alu8+6918)];
    var val23 = select(0.0f, data1[(alu7+22)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+2305)];
    var val26 = data2[(alu8+4609)];
    var val27 = data2[(alu8+6913)];
    var val28 = select(0.0f, data1[(alu7+-17)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+2308)];
    var val31 = data2[(alu8+4612)];
    var val32 = data2[(alu8+6916)];
    var val33 = data1[(alu7+3)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+2311)];
    var val36 = data2[(alu8+4615)];
    var val37 = data2[(alu8+6919)];
    var val38 = select(0.0f, data1[(alu7+23)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+2306)];
    var val41 = data2[(alu8+4610)];
    var val42 = data2[(alu8+6914)];
    var val43 = select(0.0f, data1[(alu7+-16)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+2309)];
    var val46 = data2[(alu8+4613)];
    var val47 = data2[(alu8+6917)];
    var val48 = select(0.0f, data1[(alu7+4)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+2312)];
    var val51 = data2[(alu8+4616)];
    var val52 = data2[(alu8+6920)];
    var val53 = select(0.0f, data1[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = (lidx0<<2);
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_5_5_5_4_4_256_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx1*80);
  var alu1 = (gidx0<<2);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 256; ridx0++) {
    var alu7 = (alu0+alu2+(ridx0*400)+alu1);
    var alu8 = ((gidx2*36864)+(lidx0*9216)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+-21)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+-1)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+-20)], alu4);
    var val5 = data1[alu7];
    var val6 = select(0.0f, data1[(alu7+-19)], alu4);
    var val7 = data1[(alu7+1)];
    var val8 = data2[(alu8+2304)];
    var val9 = data2[(alu8+2307)];
    var val10 = data2[(alu8+4608)];
    var val11 = data2[(alu8+4611)];
    var val12 = data2[(alu8+6912)];
    var val13 = data2[(alu8+6915)];
    var val14 = select(0.0f, data1[(alu7+-18)], alu4);
    var val15 = data1[(alu7+2)];
    var val16 = select(0.0f, data1[(alu7+19)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+20)], alu5);
    var val19 = select(0.0f, data1[(alu7+21)], alu5);
    var val20 = data2[(alu8+2310)];
    var val21 = data2[(alu8+4614)];
    var val22 = data2[(alu8+6918)];
    var val23 = select(0.0f, data1[(alu7+22)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+2305)];
    var val26 = data2[(alu8+4609)];
    var val27 = data2[(alu8+6913)];
    var val28 = select(0.0f, data1[(alu7+-17)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+2308)];
    var val31 = data2[(alu8+4612)];
    var val32 = data2[(alu8+6916)];
    var val33 = data1[(alu7+3)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+2311)];
    var val36 = data2[(alu8+4615)];
    var val37 = data2[(alu8+6919)];
    var val38 = select(0.0f, data1[(alu7+23)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+2306)];
    var val41 = data2[(alu8+4610)];
    var val42 = data2[(alu8+6914)];
    var val43 = select(0.0f, data1[(alu7+-16)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+2309)];
    var val46 = data2[(alu8+4613)];
    var val47 = data2[(alu8+6917)];
    var val48 = select(0.0f, data1[(alu7+4)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+2312)];
    var val51 = data2[(alu8+4616)];
    var val52 = data2[(alu8+6920)];
    var val53 = select(0.0f, data1[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = ((gidx2<<4)+(lidx0<<2));
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+(gidx2*6400)+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_5_5_16_4_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<2);
  var alu1 = (gidx1*80);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu7 = (alu1+alu2+(ridx0*400)+alu0);
    var alu8 = ((lidx0*2304)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+-21)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+-1)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+-20)], alu4);
    var val5 = data1[alu7];
    var val6 = select(0.0f, data1[(alu7+-19)], alu4);
    var val7 = data1[(alu7+1)];
    var val8 = data2[(alu8+576)];
    var val9 = data2[(alu8+579)];
    var val10 = data2[(alu8+1152)];
    var val11 = data2[(alu8+1155)];
    var val12 = data2[(alu8+1728)];
    var val13 = data2[(alu8+1731)];
    var val14 = select(0.0f, data1[(alu7+-18)], alu4);
    var val15 = data1[(alu7+2)];
    var val16 = select(0.0f, data1[(alu7+19)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+20)], alu5);
    var val19 = select(0.0f, data1[(alu7+21)], alu5);
    var val20 = data2[(alu8+582)];
    var val21 = data2[(alu8+1158)];
    var val22 = data2[(alu8+1734)];
    var val23 = select(0.0f, data1[(alu7+22)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+577)];
    var val26 = data2[(alu8+1153)];
    var val27 = data2[(alu8+1729)];
    var val28 = select(0.0f, data1[(alu7+-17)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+580)];
    var val31 = data2[(alu8+1156)];
    var val32 = data2[(alu8+1732)];
    var val33 = data1[(alu7+3)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+583)];
    var val36 = data2[(alu8+1159)];
    var val37 = data2[(alu8+1735)];
    var val38 = select(0.0f, data1[(alu7+23)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+578)];
    var val41 = data2[(alu8+1154)];
    var val42 = data2[(alu8+1730)];
    var val43 = select(0.0f, data1[(alu7+-16)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+581)];
    var val46 = data2[(alu8+1157)];
    var val47 = data2[(alu8+1733)];
    var val48 = select(0.0f, data1[(alu7+4)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+584)];
    var val51 = data2[(alu8+1160)];
    var val52 = data2[(alu8+1736)];
    var val53 = select(0.0f, data1[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = (lidx0<<2);
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_5_5_5_4_4_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var gidx1 = i32(gindex.y); /* 5 */
  var gidx2 = i32(gindex.z); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx1*80);
  var alu1 = (gidx0<<2);
  var alu2 = (lidx1*20);
  var alu3 = ((gidx0<1)!=true);
  var alu4 = (((gidx1+lidx1)<1)!=true);
  var alu5 = ((lidx1+(gidx1<<2))<19);
  var alu6 = (gidx0<4);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu7 = (alu0+alu2+(ridx0*400)+alu1);
    var alu8 = ((gidx2*11520)+(lidx0*2880)+(ridx0*9));
    var val0 = select(0.0f, data1[(alu7+-21)], (alu3&alu4));
    var val1 = data2[alu8];
    var val2 = select(0.0f, data1[(alu7+-1)], alu3);
    var val3 = data2[(alu8+3)];
    var val4 = select(0.0f, data1[(alu7+-20)], alu4);
    var val5 = data1[alu7];
    var val6 = select(0.0f, data1[(alu7+-19)], alu4);
    var val7 = data1[(alu7+1)];
    var val8 = data2[(alu8+720)];
    var val9 = data2[(alu8+723)];
    var val10 = data2[(alu8+1440)];
    var val11 = data2[(alu8+1443)];
    var val12 = data2[(alu8+2160)];
    var val13 = data2[(alu8+2163)];
    var val14 = select(0.0f, data1[(alu7+-18)], alu4);
    var val15 = data1[(alu7+2)];
    var val16 = select(0.0f, data1[(alu7+19)], (alu5&alu3));
    var val17 = data2[(alu8+6)];
    var val18 = select(0.0f, data1[(alu7+20)], alu5);
    var val19 = select(0.0f, data1[(alu7+21)], alu5);
    var val20 = data2[(alu8+726)];
    var val21 = data2[(alu8+1446)];
    var val22 = data2[(alu8+2166)];
    var val23 = select(0.0f, data1[(alu7+22)], alu5);
    var val24 = data2[(alu8+1)];
    var val25 = data2[(alu8+721)];
    var val26 = data2[(alu8+1441)];
    var val27 = data2[(alu8+2161)];
    var val28 = select(0.0f, data1[(alu7+-17)], alu4);
    var val29 = data2[(alu8+4)];
    var val30 = data2[(alu8+724)];
    var val31 = data2[(alu8+1444)];
    var val32 = data2[(alu8+2164)];
    var val33 = data1[(alu7+3)];
    var val34 = data2[(alu8+7)];
    var val35 = data2[(alu8+727)];
    var val36 = data2[(alu8+1447)];
    var val37 = data2[(alu8+2167)];
    var val38 = select(0.0f, data1[(alu7+23)], alu5);
    var val39 = data2[(alu8+2)];
    var val40 = data2[(alu8+722)];
    var val41 = data2[(alu8+1442)];
    var val42 = data2[(alu8+2162)];
    var val43 = select(0.0f, data1[(alu7+-16)], (alu6&alu4));
    var val44 = data2[(alu8+5)];
    var val45 = data2[(alu8+725)];
    var val46 = data2[(alu8+1445)];
    var val47 = data2[(alu8+2165)];
    var val48 = select(0.0f, data1[(alu7+4)], alu6);
    var val49 = data2[(alu8+8)];
    var val50 = data2[(alu8+728)];
    var val51 = data2[(alu8+1448)];
    var val52 = data2[(alu8+2168)];
    var val53 = select(0.0f, data1[(alu7+24)], (alu6&alu5));
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val4*val24)+(val5*val29)+(val18*val34)+(val6*val39)+(val7*val44)+(val19*val49));
    acc1 = (acc1+(val0*val8)+(val2*val9)+(val16*val20)+(val4*val25)+(val5*val30)+(val18*val35)+(val6*val40)+(val7*val45)+(val19*val50));
    acc2 = (acc2+(val0*val10)+(val2*val11)+(val16*val21)+(val4*val26)+(val5*val31)+(val18*val36)+(val6*val41)+(val7*val46)+(val19*val51));
    acc3 = (acc3+(val0*val12)+(val2*val13)+(val16*val22)+(val4*val27)+(val5*val32)+(val18*val37)+(val6*val42)+(val7*val47)+(val19*val52));
    acc4 = (acc4+(val4*val1)+(val5*val3)+(val18*val17)+(val6*val24)+(val7*val29)+(val19*val34)+(val14*val39)+(val15*val44)+(val23*val49));
    acc5 = (acc5+(val4*val8)+(val5*val9)+(val18*val20)+(val6*val25)+(val7*val30)+(val19*val35)+(val14*val40)+(val15*val45)+(val23*val50));
    acc6 = (acc6+(val4*val10)+(val5*val11)+(val18*val21)+(val6*val26)+(val7*val31)+(val19*val36)+(val14*val41)+(val15*val46)+(val23*val51));
    acc7 = (acc7+(val4*val12)+(val5*val13)+(val18*val22)+(val6*val27)+(val7*val32)+(val19*val37)+(val14*val42)+(val15*val47)+(val23*val52));
    acc8 = (acc8+(val6*val1)+(val7*val3)+(val19*val17)+(val14*val24)+(val15*val29)+(val23*val34)+(val28*val39)+(val33*val44)+(val38*val49));
    acc9 = (acc9+(val6*val8)+(val7*val9)+(val19*val20)+(val14*val25)+(val15*val30)+(val23*val35)+(val28*val40)+(val33*val45)+(val38*val50));
    acc10 = (acc10+(val6*val10)+(val7*val11)+(val19*val21)+(val14*val26)+(val15*val31)+(val23*val36)+(val28*val41)+(val33*val46)+(val38*val51));
    acc11 = (acc11+(val6*val12)+(val7*val13)+(val19*val22)+(val14*val27)+(val15*val32)+(val23*val37)+(val28*val42)+(val33*val47)+(val38*val52));
    acc12 = (acc12+(val14*val1)+(val15*val3)+(val23*val17)+(val28*val24)+(val33*val29)+(val38*val34)+(val43*val39)+(val48*val44)+(val53*val49));
    acc13 = (acc13+(val14*val8)+(val15*val9)+(val23*val20)+(val28*val25)+(val33*val30)+(val38*val35)+(val43*val40)+(val48*val45)+(val53*val50));
    acc14 = (acc14+(val14*val10)+(val15*val11)+(val23*val21)+(val28*val26)+(val33*val31)+(val38*val36)+(val43*val41)+(val48*val46)+(val53*val51));
    acc15 = (acc15+(val14*val12)+(val15*val13)+(val23*val22)+(val28*val27)+(val33*val32)+(val38*val37)+(val43*val42)+(val48*val47)+(val53*val52));
  }
  var alu26 = ((gidx2<<4)+(lidx0<<2));
  var alu27 = (alu26+1);
  var alu28 = (alu26+2);
  var alu29 = (alu26+3);
  var val54 = data5[alu26];
  var val55 = data5[alu27];
  var val56 = data5[alu28];
  var val57 = data5[alu29];
  var val58 = data3[alu26];
  var val59 = data3[alu27];
  var val60 = data3[alu28];
  var val61 = data3[alu29];
  var val62 = data4[alu26];
  var val63 = data4[alu27];
  var val64 = data4[alu28];
  var val65 = data4[alu29];
  var alu30 = sqrt((1/(val54+0.001f)));
  var alu31 = sqrt((1/(val55+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = sqrt((1/(val57+0.001f)));
  var val66 = data6[alu26];
  var val67 = data6[alu27];
  var val68 = data6[alu28];
  var val69 = data6[alu29];
  var alu34 = (val66+(alu30*val62*(acc0-val58)));
  var alu35 = (val67+(alu31*val63*(acc1-val59)));
  var alu36 = (val68+(alu32*val64*(acc2-val60)));
  var alu37 = (val69+(alu33*val65*(acc3-val61)));
  var alu38 = (val66+(alu30*val62*(acc4-val58)));
  var alu39 = (val67+(alu31*val63*(acc5-val59)));
  var alu40 = (val68+(alu32*val64*(acc6-val60)));
  var alu41 = (val69+(alu33*val65*(acc7-val61)));
  var alu42 = (val66+(alu30*val62*(acc8-val58)));
  var alu43 = (val67+(alu31*val63*(acc9-val59)));
  var alu44 = (val68+(alu32*val64*(acc10-val60)));
  var alu45 = (val69+(alu33*val65*(acc11-val61)));
  var alu46 = (val66+(alu30*val62*(acc12-val58)));
  var alu47 = (val67+(alu31*val63*(acc13-val59)));
  var alu48 = (val68+(alu32*val64*(acc14-val60)));
  var alu49 = (val69+(alu33*val65*(acc15-val61)));
  var alu50 = (alu0+(gidx2*6400)+alu1+(lidx0*1600)+alu2);
  data0[alu50] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  data0[(alu50+400)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  data0[(alu50+800)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  data0[(alu50+1200)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  data0[(alu50+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  data0[(alu50+401)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  data0[(alu50+801)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  data0[(alu50+1201)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  data0[(alu50+2)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  data0[(alu50+402)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  data0[(alu50+802)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  data0[(alu50+1202)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  data0[(alu50+3)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  data0[(alu50+403)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  data0[(alu50+803)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  data0[(alu50+1203)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
}`;

const r_25_16_4_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((lidx0<<8)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+65)];
    var val5 = data2[(alu3+64)];
    var val6 = data2[(alu3+129)];
    var val7 = data2[(alu3+128)];
    var val8 = data2[(alu3+193)];
    var val9 = data2[(alu3+192)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+66)];
    var val19 = data2[(alu3+130)];
    var val20 = data2[(alu3+194)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+67)];
    var val27 = data2[(alu3+131)];
    var val28 = data2[(alu3+195)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = (lidx0<<2);
  var alu22 = (alu0+(lidx0*1600)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+400)] = (val33+acc1);
  data0[(alu22+800)] = (val34+acc2);
  data0[(alu22+1200)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+401)] = (val33+acc5);
  data0[(alu22+801)] = (val34+acc6);
  data0[(alu22+1201)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+402)] = (val33+acc9);
  data0[(alu22+802)] = (val34+acc10);
  data0[(alu22+1202)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+403)] = (val33+acc13);
  data0[(alu22+803)] = (val34+acc14);
  data0[(alu22+1203)] = (val35+acc15);
}`;

const r_5_25_4_4_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 25 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 4 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu2 = (alu0+alu1+(ridx0*1600));
    var alu3 = ((gidx1*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data1[(alu2+400)];
    var val1 = data2[(alu3+1)];
    var val2 = data1[alu2];
    var val3 = data2[alu3];
    var val4 = data2[(alu3+81)];
    var val5 = data2[(alu3+80)];
    var val6 = data2[(alu3+161)];
    var val7 = data2[(alu3+160)];
    var val8 = data2[(alu3+241)];
    var val9 = data2[(alu3+240)];
    var val10 = data1[(alu2+1)];
    var val11 = data1[(alu2+401)];
    var val12 = data1[(alu2+2)];
    var val13 = data1[(alu2+402)];
    var val14 = data1[(alu2+3)];
    var val15 = data1[(alu2+403)];
    var val16 = data1[(alu2+800)];
    var val17 = data2[(alu3+2)];
    var val18 = data2[(alu3+82)];
    var val19 = data2[(alu3+162)];
    var val20 = data2[(alu3+242)];
    var val21 = data1[(alu2+801)];
    var val22 = data1[(alu2+802)];
    var val23 = data1[(alu2+803)];
    var val24 = data1[(alu2+1200)];
    var val25 = data2[(alu3+3)];
    var val26 = data2[(alu3+83)];
    var val27 = data2[(alu3+163)];
    var val28 = data2[(alu3+243)];
    var val29 = data1[(alu2+1201)];
    var val30 = data1[(alu2+1202)];
    var val31 = data1[(alu2+1203)];
    acc0 = (acc0+(val0*val1)+(val2*val3)+(val16*val17)+(val24*val25));
    acc1 = (acc1+(val0*val4)+(val2*val5)+(val16*val18)+(val24*val26));
    acc2 = (acc2+(val0*val6)+(val2*val7)+(val16*val19)+(val24*val27));
    acc3 = (acc3+(val0*val8)+(val2*val9)+(val16*val20)+(val24*val28));
    acc4 = (acc4+(val10*val3)+(val11*val1)+(val21*val17)+(val29*val25));
    acc5 = (acc5+(val10*val5)+(val11*val4)+(val21*val18)+(val29*val26));
    acc6 = (acc6+(val10*val7)+(val11*val6)+(val21*val19)+(val29*val27));
    acc7 = (acc7+(val10*val9)+(val11*val8)+(val21*val20)+(val29*val28));
    acc8 = (acc8+(val12*val3)+(val13*val1)+(val22*val17)+(val30*val25));
    acc9 = (acc9+(val12*val5)+(val13*val4)+(val22*val18)+(val30*val26));
    acc10 = (acc10+(val12*val7)+(val13*val6)+(val22*val19)+(val30*val27));
    acc11 = (acc11+(val12*val9)+(val13*val8)+(val22*val20)+(val30*val28));
    acc12 = (acc12+(val14*val3)+(val15*val1)+(val23*val17)+(val31*val25));
    acc13 = (acc13+(val14*val5)+(val15*val4)+(val23*val18)+(val31*val26));
    acc14 = (acc14+(val14*val7)+(val15*val6)+(val23*val19)+(val31*val27));
    acc15 = (acc15+(val14*val9)+(val15*val8)+(val23*val20)+(val31*val28));
  }
  var alu21 = ((gidx1<<4)+(lidx0<<2));
  var alu22 = (alu0+(gidx1*6400)+(lidx0*1600)+alu1);
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  data0[alu22] = (val32+acc0);
  data0[(alu22+400)] = (val33+acc1);
  data0[(alu22+800)] = (val34+acc2);
  data0[(alu22+1200)] = (val35+acc3);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+401)] = (val33+acc5);
  data0[(alu22+801)] = (val34+acc6);
  data0[(alu22+1201)] = (val35+acc7);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+402)] = (val33+acc9);
  data0[(alu22+802)] = (val34+acc10);
  data0[(alu22+1202)] = (val35+acc11);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+403)] = (val33+acc13);
  data0[(alu22+803)] = (val34+acc14);
  data0[(alu22+1203)] = (val35+acc15);
}`;

const r_525_4_16_16 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 525 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<4);
  var alu1 = (lidx1+alu0+(lidx0*102400));
  var alu2 = (gidx0<400);
  var alu3 = (lidx1+alu0+(lidx0*25600));
  var alu4 = (lidx1+alu0+(lidx0*6400));
  var alu5 = (gidx0<500);
  var alu6 = (alu5&(alu2!=true));
  var alu7 = (alu5!=true);
  var val0 = select(0.0f, data1[alu1], alu2);
  var val1 = select(0.0f, data3[(alu3+-6400)], alu6);
  var val2 = select(0.0f, data1[(alu1+6400)], alu2);
  var val3 = select(0.0f, data3[(alu3+-4800)], alu6);
  var val4 = select(0.0f, data5[(alu4+-8000)], alu7);
  var val5 = select(0.0f, data5[(alu4+-7600)], alu7);
  var val6 = select(0.0f, data1[(alu1+12800)], alu2);
  var val7 = select(0.0f, data3[(alu3+-3200)], alu6);
  var alu8 = (val4+val0+val1);
  var alu9 = (val5+val2+val3);
  var val8 = select(0.0f, data5[(alu4+-7200)], alu7);
  var val9 = select(0.0f, data1[(alu1+19200)], alu2);
  var val10 = select(0.0f, data3[(alu3+-1600)], alu6);
  var alu10 = (val8+val6+val7);
  var alu11 = select(alu8,alu9,(alu8<alu9));
  var val11 = select(0.0f, data5[(alu4+-6800)], alu7);
  var val12 = select(0.0f, data1[(alu1+25600)], alu2);
  var val13 = select(0.0f, data3[alu3], alu6);
  var alu12 = (val11+val9+val10);
  var alu13 = select(alu10,alu11,(alu10<alu11));
  var val14 = select(0.0f, data5[(alu4+-6400)], alu7);
  var val15 = select(0.0f, data1[(alu1+32000)], alu2);
  var val16 = select(0.0f, data3[(alu3+1600)], alu6);
  var alu14 = (val14+val12+val13);
  var alu15 = select(alu12,alu13,(alu12<alu13));
  var val17 = select(0.0f, data5[(alu4+-6000)], alu7);
  var val18 = select(0.0f, data1[(alu1+38400)], alu2);
  var val19 = select(0.0f, data3[(alu3+3200)], alu6);
  var alu16 = (val17+val15+val16);
  var alu17 = select(alu14,alu15,(alu14<alu15));
  var val20 = select(0.0f, data5[(alu4+-5600)], alu7);
  var val21 = select(0.0f, data1[(alu1+44800)], alu2);
  var val22 = select(0.0f, data3[(alu3+4800)], alu6);
  var alu18 = (val20+val18+val19);
  var alu19 = select(alu16,alu17,(alu16<alu17));
  var val23 = select(0.0f, data5[(alu4+-5200)], alu7);
  var val24 = select(0.0f, data1[(alu1+51200)], alu2);
  var val25 = select(0.0f, data3[(alu3+6400)], alu6);
  var alu20 = (val23+val21+val22);
  var alu21 = select(alu18,alu19,(alu18<alu19));
  var val26 = select(0.0f, data5[(alu4+-4800)], alu7);
  var val27 = select(0.0f, data1[(alu1+57600)], alu2);
  var val28 = select(0.0f, data3[(alu3+8000)], alu6);
  var alu22 = (val26+val24+val25);
  var alu23 = select(alu20,alu21,(alu20<alu21));
  var val29 = select(0.0f, data5[(alu4+-4400)], alu7);
  var val30 = select(0.0f, data1[(alu1+64000)], alu2);
  var val31 = select(0.0f, data3[(alu3+9600)], alu6);
  var alu24 = (val29+val27+val28);
  var alu25 = select(alu22,alu23,(alu22<alu23));
  var val32 = select(0.0f, data5[(alu4+-4000)], alu7);
  var val33 = select(0.0f, data1[(alu1+70400)], alu2);
  var val34 = select(0.0f, data3[(alu3+11200)], alu6);
  var alu26 = (val32+val30+val31);
  var alu27 = select(alu24,alu25,(alu24<alu25));
  var val35 = select(0.0f, data5[(alu4+-3600)], alu7);
  var val36 = select(0.0f, data1[(alu1+76800)], alu2);
  var val37 = select(0.0f, data3[(alu3+12800)], alu6);
  var alu28 = (val35+val33+val34);
  var alu29 = select(alu26,alu27,(alu26<alu27));
  var val38 = select(0.0f, data5[(alu4+-3200)], alu7);
  var val39 = select(0.0f, data1[(alu1+83200)], alu2);
  var val40 = select(0.0f, data3[(alu3+14400)], alu6);
  var alu30 = (val38+val36+val37);
  var alu31 = select(alu28,alu29,(alu28<alu29));
  var val41 = select(0.0f, data5[(alu4+-2800)], alu7);
  var val42 = select(0.0f, data1[(alu1+89600)], alu2);
  var val43 = select(0.0f, data3[(alu3+16000)], alu6);
  var alu32 = (val41+val39+val40);
  var alu33 = select(alu30,alu31,(alu30<alu31));
  var val44 = select(0.0f, data5[(alu4+-2400)], alu7);
  var val45 = select(0.0f, data1[(alu1+96000)], alu2);
  var val46 = select(0.0f, data3[(alu3+17600)], alu6);
  var alu34 = (val44+val42+val43);
  var alu35 = select(alu32,alu33,(alu32<alu33));
  var val47 = select(0.0f, data5[(alu4+-2000)], alu7);
  var alu36 = (val47+val45+val46);
  var alu37 = select(alu34,alu35,(alu34<alu35));
  data0[(lidx1+alu0+(lidx0*8400))] = select(alu36,alu37,(alu36<alu37));
}`;

const E_10_175_8_16_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data2:array<f32>;
@group(0) @binding(3)var<storage,read_write>data4:array<f32>;
@group(0) @binding(4)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 175 */
  var gidx1 = i32(gindex.y); /* 10 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+alu1);
  var alu3 = (lidx1+(gidx0<<4));
  var alu4 = (alu2+(gidx1*51200)+(lidx0*6400));
  var alu5 = (alu2<6400);
  var alu6 = (alu2+(gidx1*12800)+(lidx0*1600));
  var alu7 = (alu3<2133);
  var alu8 = (alu2<6398);
  var alu9 = (alu2+(gidx1*3200)+(lidx0*400));
  var alu10 = (alu2<8000);
  var alu11 = (alu2<7999);
  var alu12 = (alu3<2666);
  var val0 = select(0.0f, data2[alu4], alu5);
  var val1 = select(0.0f, data4[(alu6+-6400)], (alu10&(alu5!=true)));
  var val2 = select(0.0f, data2[(alu4+1)], alu7);
  var val3 = select(0.0f, data4[(alu6+-6399)], (alu11&(alu7!=true)));
  var val4 = select(0.0f, data2[(alu4+2)], alu8);
  var val5 = select(0.0f, data4[(alu6+-6398)], (alu12&(alu8!=true)));
  var val6 = select(0.0f, data6[(alu9+-8000)], (alu10!=true));
  var val7 = select(0.0f, data6[(alu9+-7999)], (alu11!=true));
  var val8 = select(0.0f, data6[(alu9+-7998)], (alu12!=true));
  var alu13 = (alu0+(gidx1*67200)+(lidx0*8400)+alu1);
  data0[alu13] = (1/(exp2(((val6+val0+val1)*-1.4426950408889634f))+1.0f));
  data0[(alu13+1)] = (1/(exp2(((val7+val2+val3)*-1.4426950408889634f))+1.0f));
  data0[(alu13+2)] = (1/(exp2(((val8+val4+val5)*-1.4426950408889634f))+1.0f));
}`;

const r_175_4_16_3_16 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@group(0) @binding(5)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 175 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+alu1);
  var alu3 = (lidx1+(gidx0<<4));
  var alu4 = (alu2+(lidx0*102400));
  var alu5 = (alu2<6400);
  var alu6 = (alu2+(lidx0*25600));
  var alu7 = (alu3<2133);
  var alu8 = (alu2<6398);
  var alu9 = (alu2+(lidx0*6400));
  var alu10 = (alu2<8000);
  var alu11 = (alu2<7999);
  var alu12 = (alu3<2666);
  var alu13 = (alu0+(lidx0*8400)+alu1);
  var alu14 = (alu10&(alu5!=true));
  var alu15 = (alu11&(alu7!=true));
  var alu16 = (alu12&(alu8!=true));
  var alu17 = (alu10!=true);
  var val0 = select(0.0f, data1[alu4], alu5);
  var val1 = select(0.0f, data3[(alu6+-6400)], alu14);
  var val2 = select(0.0f, data1[(alu4+6400)], alu5);
  var val3 = select(0.0f, data3[(alu6+-4800)], alu14);
  var alu18 = (alu13+1);
  var alu19 = (alu11!=true);
  var val4 = select(0.0f, data1[(alu4+1)], alu7);
  var val5 = select(0.0f, data3[(alu6+-6399)], alu15);
  var val6 = select(0.0f, data1[(alu4+6401)], alu7);
  var val7 = select(0.0f, data3[(alu6+-4799)], alu15);
  var alu20 = (alu13+2);
  var alu21 = (alu12!=true);
  var val8 = select(0.0f, data1[(alu4+2)], alu8);
  var val9 = select(0.0f, data3[(alu6+-6398)], alu16);
  var val10 = select(0.0f, data1[(alu4+6402)], alu8);
  var val11 = select(0.0f, data3[(alu6+-4798)], alu16);
  var val12 = select(0.0f, data1[(alu4+12800)], alu5);
  var val13 = select(0.0f, data3[(alu6+-3200)], alu14);
  var val14 = select(0.0f, data5[(alu9+-8000)], alu17);
  var val15 = select(0.0f, data5[(alu9+-7600)], alu17);
  var val16 = select(0.0f, data1[(alu4+12801)], alu7);
  var val17 = select(0.0f, data3[(alu6+-3199)], alu15);
  var val18 = select(0.0f, data5[(alu9+-7999)], alu19);
  var val19 = select(0.0f, data5[(alu9+-7599)], alu19);
  var val20 = select(0.0f, data1[(alu4+12802)], alu8);
  var val21 = select(0.0f, data3[(alu6+-3198)], alu16);
  var val22 = select(0.0f, data5[(alu9+-7998)], alu21);
  var val23 = select(0.0f, data5[(alu9+-7598)], alu21);
  var val24 = data7[alu13];
  var val25 = select(0.0f, data1[(alu4+19200)], alu5);
  var val26 = select(0.0f, data3[(alu6+-1600)], alu14);
  var val27 = select(0.0f, data5[(alu9+-7200)], alu17);
  var val28 = data7[alu18];
  var val29 = select(0.0f, data1[(alu4+19201)], alu7);
  var val30 = select(0.0f, data3[(alu6+-1599)], alu15);
  var val31 = select(0.0f, data5[(alu9+-7199)], alu19);
  var val32 = data7[alu20];
  var val33 = select(0.0f, data1[(alu4+19202)], alu8);
  var val34 = select(0.0f, data3[(alu6+-1598)], alu16);
  var val35 = select(0.0f, data5[(alu9+-7198)], alu21);
  var val36 = select(0.0f, data1[(alu4+25600)], alu5);
  var val37 = select(0.0f, data3[alu6], alu14);
  var val38 = select(0.0f, data5[(alu9+-6800)], alu17);
  var val39 = select(0.0f, data1[(alu4+25601)], alu7);
  var val40 = select(0.0f, data3[(alu6+1)], alu15);
  var val41 = select(0.0f, data5[(alu9+-6799)], alu19);
  var val42 = select(0.0f, data1[(alu4+25602)], alu8);
  var val43 = select(0.0f, data3[(alu6+2)], alu16);
  var val44 = select(0.0f, data5[(alu9+-6798)], alu21);
  var val45 = select(0.0f, data1[(alu4+32000)], alu5);
  var val46 = select(0.0f, data3[(alu6+1600)], alu14);
  var val47 = select(0.0f, data5[(alu9+-6400)], alu17);
  var val48 = select(0.0f, data1[(alu4+32001)], alu7);
  var val49 = select(0.0f, data3[(alu6+1601)], alu15);
  var val50 = select(0.0f, data5[(alu9+-6399)], alu19);
  var val51 = select(0.0f, data1[(alu4+32002)], alu8);
  var val52 = select(0.0f, data3[(alu6+1602)], alu16);
  var val53 = select(0.0f, data5[(alu9+-6398)], alu21);
  var val54 = select(0.0f, data1[(alu4+38400)], alu5);
  var val55 = select(0.0f, data3[(alu6+3200)], alu14);
  var val56 = select(0.0f, data5[(alu9+-6000)], alu17);
  var val57 = select(0.0f, data1[(alu4+38401)], alu7);
  var val58 = select(0.0f, data3[(alu6+3201)], alu15);
  var val59 = select(0.0f, data5[(alu9+-5999)], alu19);
  var val60 = select(0.0f, data1[(alu4+38402)], alu8);
  var val61 = select(0.0f, data3[(alu6+3202)], alu16);
  var val62 = select(0.0f, data5[(alu9+-5998)], alu21);
  var val63 = select(0.0f, data1[(alu4+44800)], alu5);
  var val64 = select(0.0f, data3[(alu6+4800)], alu14);
  var val65 = select(0.0f, data5[(alu9+-5600)], alu17);
  var val66 = select(0.0f, data1[(alu4+44801)], alu7);
  var val67 = select(0.0f, data3[(alu6+4801)], alu15);
  var val68 = select(0.0f, data5[(alu9+-5599)], alu19);
  var val69 = select(0.0f, data1[(alu4+44802)], alu8);
  var val70 = select(0.0f, data3[(alu6+4802)], alu16);
  var val71 = select(0.0f, data5[(alu9+-5598)], alu21);
  var val72 = select(0.0f, data1[(alu4+51200)], alu5);
  var val73 = select(0.0f, data3[(alu6+6400)], alu14);
  var val74 = select(0.0f, data5[(alu9+-5200)], alu17);
  var val75 = select(0.0f, data1[(alu4+51201)], alu7);
  var val76 = select(0.0f, data3[(alu6+6401)], alu15);
  var val77 = select(0.0f, data5[(alu9+-5199)], alu19);
  var val78 = select(0.0f, data1[(alu4+51202)], alu8);
  var val79 = select(0.0f, data3[(alu6+6402)], alu16);
  var val80 = select(0.0f, data5[(alu9+-5198)], alu21);
  var val81 = select(0.0f, data1[(alu4+57600)], alu5);
  var val82 = select(0.0f, data3[(alu6+8000)], alu14);
  var val83 = select(0.0f, data5[(alu9+-4800)], alu17);
  var val84 = select(0.0f, data1[(alu4+57601)], alu7);
  var val85 = select(0.0f, data3[(alu6+8001)], alu15);
  var val86 = select(0.0f, data5[(alu9+-4799)], alu19);
  var val87 = select(0.0f, data1[(alu4+57602)], alu8);
  var val88 = select(0.0f, data3[(alu6+8002)], alu16);
  var val89 = select(0.0f, data5[(alu9+-4798)], alu21);
  var val90 = select(0.0f, data1[(alu4+64000)], alu5);
  var val91 = select(0.0f, data3[(alu6+9600)], alu14);
  var val92 = select(0.0f, data5[(alu9+-4400)], alu17);
  var val93 = select(0.0f, data1[(alu4+64001)], alu7);
  var val94 = select(0.0f, data3[(alu6+9601)], alu15);
  var val95 = select(0.0f, data5[(alu9+-4399)], alu19);
  var val96 = select(0.0f, data1[(alu4+64002)], alu8);
  var val97 = select(0.0f, data3[(alu6+9602)], alu16);
  var val98 = select(0.0f, data5[(alu9+-4398)], alu21);
  var val99 = select(0.0f, data1[(alu4+70400)], alu5);
  var val100 = select(0.0f, data3[(alu6+11200)], alu14);
  var val101 = select(0.0f, data5[(alu9+-4000)], alu17);
  var val102 = select(0.0f, data1[(alu4+70401)], alu7);
  var val103 = select(0.0f, data3[(alu6+11201)], alu15);
  var val104 = select(0.0f, data5[(alu9+-3999)], alu19);
  var val105 = select(0.0f, data1[(alu4+70402)], alu8);
  var val106 = select(0.0f, data3[(alu6+11202)], alu16);
  var val107 = select(0.0f, data5[(alu9+-3998)], alu21);
  var val108 = select(0.0f, data1[(alu4+76800)], alu5);
  var val109 = select(0.0f, data3[(alu6+12800)], alu14);
  var val110 = select(0.0f, data5[(alu9+-3600)], alu17);
  var val111 = select(0.0f, data1[(alu4+76801)], alu7);
  var val112 = select(0.0f, data3[(alu6+12801)], alu15);
  var val113 = select(0.0f, data5[(alu9+-3599)], alu19);
  var val114 = select(0.0f, data1[(alu4+76802)], alu8);
  var val115 = select(0.0f, data3[(alu6+12802)], alu16);
  var val116 = select(0.0f, data5[(alu9+-3598)], alu21);
  var val117 = select(0.0f, data1[(alu4+83200)], alu5);
  var val118 = select(0.0f, data3[(alu6+14400)], alu14);
  var val119 = select(0.0f, data5[(alu9+-3200)], alu17);
  var val120 = select(0.0f, data1[(alu4+83201)], alu7);
  var val121 = select(0.0f, data3[(alu6+14401)], alu15);
  var val122 = select(0.0f, data5[(alu9+-3199)], alu19);
  var val123 = select(0.0f, data1[(alu4+83202)], alu8);
  var val124 = select(0.0f, data3[(alu6+14402)], alu16);
  var val125 = select(0.0f, data5[(alu9+-3198)], alu21);
  var val126 = select(0.0f, data1[(alu4+89600)], alu5);
  var val127 = select(0.0f, data3[(alu6+16000)], alu14);
  var val128 = select(0.0f, data5[(alu9+-2800)], alu17);
  var val129 = select(0.0f, data1[(alu4+89601)], alu7);
  var val130 = select(0.0f, data3[(alu6+16001)], alu15);
  var val131 = select(0.0f, data5[(alu9+-2799)], alu19);
  var val132 = select(0.0f, data1[(alu4+89602)], alu8);
  var val133 = select(0.0f, data3[(alu6+16002)], alu16);
  var val134 = select(0.0f, data5[(alu9+-2798)], alu21);
  var val135 = select(0.0f, data1[(alu4+96000)], alu5);
  var val136 = select(0.0f, data3[(alu6+17600)], alu14);
  var val137 = select(0.0f, data5[(alu9+-2400)], alu17);
  var val138 = select(0.0f, data1[(alu4+96001)], alu7);
  var val139 = select(0.0f, data3[(alu6+17601)], alu15);
  var val140 = select(0.0f, data5[(alu9+-2399)], alu19);
  var val141 = select(0.0f, data1[(alu4+96002)], alu8);
  var val142 = select(0.0f, data3[(alu6+17602)], alu16);
  var val143 = select(0.0f, data5[(alu9+-2398)], alu21);
  var val144 = select(0.0f, data5[(alu9+-2000)], alu17);
  var val145 = select(0.0f, data5[(alu9+-1999)], alu19);
  var val146 = select(0.0f, data5[(alu9+-1998)], alu21);
  data0[alu13] = (exp2((((val144+val135+val136)-val24)*1.4426950408889634f))+exp2((((val137+val126+val127)-val24)*1.4426950408889634f))+exp2((((val128+val117+val118)-val24)*1.4426950408889634f))+exp2((((val119+val108+val109)-val24)*1.4426950408889634f))+exp2((((val110+val99+val100)-val24)*1.4426950408889634f))+exp2((((val101+val90+val91)-val24)*1.4426950408889634f))+exp2((((val92+val81+val82)-val24)*1.4426950408889634f))+exp2((((val83+val72+val73)-val24)*1.4426950408889634f))+exp2((((val74+val63+val64)-val24)*1.4426950408889634f))+exp2((((val65+val54+val55)-val24)*1.4426950408889634f))+exp2((((val56+val45+val46)-val24)*1.4426950408889634f))+exp2((((val47+val36+val37)-val24)*1.4426950408889634f))+exp2((((val38+val25+val26)-val24)*1.4426950408889634f))+exp2((((val27+val12+val13)-val24)*1.4426950408889634f))+exp2((((val14+val0+val1)-val24)*1.4426950408889634f))+exp2((((val15+val2+val3)-val24)*1.4426950408889634f)));
  data0[alu18] = (exp2((((val145+val138+val139)-val28)*1.4426950408889634f))+exp2((((val140+val129+val130)-val28)*1.4426950408889634f))+exp2((((val131+val120+val121)-val28)*1.4426950408889634f))+exp2((((val122+val111+val112)-val28)*1.4426950408889634f))+exp2((((val113+val102+val103)-val28)*1.4426950408889634f))+exp2((((val104+val93+val94)-val28)*1.4426950408889634f))+exp2((((val95+val84+val85)-val28)*1.4426950408889634f))+exp2((((val86+val75+val76)-val28)*1.4426950408889634f))+exp2((((val77+val66+val67)-val28)*1.4426950408889634f))+exp2((((val68+val57+val58)-val28)*1.4426950408889634f))+exp2((((val59+val48+val49)-val28)*1.4426950408889634f))+exp2((((val50+val39+val40)-val28)*1.4426950408889634f))+exp2((((val41+val29+val30)-val28)*1.4426950408889634f))+exp2((((val31+val16+val17)-val28)*1.4426950408889634f))+exp2((((val18+val4+val5)-val28)*1.4426950408889634f))+exp2((((val19+val6+val7)-val28)*1.4426950408889634f)));
  data0[alu20] = (exp2((((val146+val141+val142)-val32)*1.4426950408889634f))+exp2((((val143+val132+val133)-val32)*1.4426950408889634f))+exp2((((val134+val123+val124)-val32)*1.4426950408889634f))+exp2((((val125+val114+val115)-val32)*1.4426950408889634f))+exp2((((val116+val105+val106)-val32)*1.4426950408889634f))+exp2((((val107+val96+val97)-val32)*1.4426950408889634f))+exp2((((val98+val87+val88)-val32)*1.4426950408889634f))+exp2((((val89+val78+val79)-val32)*1.4426950408889634f))+exp2((((val80+val69+val70)-val32)*1.4426950408889634f))+exp2((((val71+val60+val61)-val32)*1.4426950408889634f))+exp2((((val62+val51+val52)-val32)*1.4426950408889634f))+exp2((((val53+val42+val43)-val32)*1.4426950408889634f))+exp2((((val44+val33+val34)-val32)*1.4426950408889634f))+exp2((((val35+val20+val21)-val32)*1.4426950408889634f))+exp2((((val22+val8+val9)-val32)*1.4426950408889634f))+exp2((((val23+val10+val11)-val32)*1.4426950408889634f)));
}`;

const r_175_4_16_3_16n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@group(0) @binding(5)var<storage,read_write>data7:array<f32>;
@group(0) @binding(6)var<storage,read_write>data8:array<f32>;
@group(0) @binding(7)var<storage,read_write>data9:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 175 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+alu1);
  var alu3 = (lidx1+(gidx0<<4));
  var alu4 = (alu2+(lidx0*102400));
  var alu5 = (alu2<6400);
  var alu6 = (alu2+(lidx0*25600));
  var alu7 = (alu3<2133);
  var alu8 = (alu2<6398);
  var alu9 = (alu2+(lidx0*6400));
  var alu10 = (alu2<8000);
  var alu11 = (alu2<7999);
  var alu12 = (alu3<2666);
  var alu13 = (alu0+(lidx0*8400)+alu1);
  var alu14 = (alu10&(alu5!=true));
  var alu15 = (alu11&(alu7!=true));
  var alu16 = (alu12&(alu8!=true));
  var alu17 = (alu10!=true);
  var val0 = select(0.0f, data1[alu4], alu5);
  var val1 = select(0.0f, data3[(alu6+-6400)], alu14);
  var val2 = select(0.0f, data1[(alu4+6400)], alu5);
  var val3 = select(0.0f, data3[(alu6+-4800)], alu14);
  var alu18 = (alu13+1);
  var alu19 = (alu11!=true);
  var val4 = select(0.0f, data1[(alu4+1)], alu7);
  var val5 = select(0.0f, data3[(alu6+-6399)], alu15);
  var val6 = select(0.0f, data1[(alu4+6401)], alu7);
  var val7 = select(0.0f, data3[(alu6+-4799)], alu15);
  var alu20 = (alu13+2);
  var alu21 = (alu12!=true);
  var val8 = select(0.0f, data1[(alu4+2)], alu8);
  var val9 = select(0.0f, data3[(alu6+-6398)], alu16);
  var val10 = select(0.0f, data1[(alu4+6402)], alu8);
  var val11 = select(0.0f, data3[(alu6+-4798)], alu16);
  var val12 = select(0.0f, data5[(alu9+-8000)], alu17);
  var val13 = select(0.0f, data5[(alu9+-7600)], alu17);
  var val14 = select(0.0f, data1[(alu4+12800)], alu5);
  var val15 = select(0.0f, data3[(alu6+-3200)], alu14);
  var val16 = select(0.0f, data5[(alu9+-7999)], alu19);
  var val17 = select(0.0f, data5[(alu9+-7599)], alu19);
  var val18 = select(0.0f, data1[(alu4+12801)], alu7);
  var val19 = select(0.0f, data3[(alu6+-3199)], alu15);
  var val20 = select(0.0f, data5[(alu9+-7998)], alu21);
  var val21 = select(0.0f, data5[(alu9+-7598)], alu21);
  var val22 = select(0.0f, data1[(alu4+12802)], alu8);
  var val23 = select(0.0f, data3[(alu6+-3198)], alu16);
  var val24 = data7[alu13];
  var val25 = select(0.0f, data5[(alu9+-7200)], alu17);
  var val26 = select(0.0f, data1[(alu4+19200)], alu5);
  var val27 = select(0.0f, data3[(alu6+-1600)], alu14);
  var val28 = data7[alu18];
  var val29 = select(0.0f, data5[(alu9+-7199)], alu19);
  var val30 = select(0.0f, data1[(alu4+19201)], alu7);
  var val31 = select(0.0f, data3[(alu6+-1599)], alu15);
  var val32 = data7[alu20];
  var val33 = select(0.0f, data5[(alu9+-7198)], alu21);
  var val34 = select(0.0f, data1[(alu4+19202)], alu8);
  var val35 = select(0.0f, data3[(alu6+-1598)], alu16);
  var val36 = select(0.0f, data5[(alu9+-6800)], alu17);
  var val37 = select(0.0f, data1[(alu4+25600)], alu5);
  var val38 = select(0.0f, data3[alu6], alu14);
  var val39 = select(0.0f, data5[(alu9+-6799)], alu19);
  var val40 = select(0.0f, data1[(alu4+25601)], alu7);
  var val41 = select(0.0f, data3[(alu6+1)], alu15);
  var val42 = select(0.0f, data5[(alu9+-6798)], alu21);
  var val43 = select(0.0f, data1[(alu4+25602)], alu8);
  var val44 = select(0.0f, data3[(alu6+2)], alu16);
  var val45 = data8[alu13];
  var val46 = select(0.0f, data5[(alu9+-6400)], alu17);
  var val47 = select(0.0f, data1[(alu4+32000)], alu5);
  var val48 = select(0.0f, data3[(alu6+1600)], alu14);
  var val49 = data8[alu18];
  var val50 = select(0.0f, data5[(alu9+-6399)], alu19);
  var val51 = select(0.0f, data1[(alu4+32001)], alu7);
  var val52 = select(0.0f, data3[(alu6+1601)], alu15);
  var val53 = data8[alu20];
  var val54 = select(0.0f, data5[(alu9+-6398)], alu21);
  var val55 = select(0.0f, data1[(alu4+32002)], alu8);
  var val56 = select(0.0f, data3[(alu6+1602)], alu16);
  var alu22 = (1/val45);
  var val57 = select(0.0f, data5[(alu9+-6000)], alu17);
  var val58 = select(0.0f, data1[(alu4+38400)], alu5);
  var val59 = select(0.0f, data3[(alu6+3200)], alu14);
  var alu23 = (1/val49);
  var val60 = select(0.0f, data5[(alu9+-5999)], alu19);
  var val61 = select(0.0f, data1[(alu4+38401)], alu7);
  var val62 = select(0.0f, data3[(alu6+3201)], alu15);
  var alu24 = (1/val53);
  var val63 = select(0.0f, data5[(alu9+-5998)], alu21);
  var val64 = select(0.0f, data1[(alu4+38402)], alu8);
  var val65 = select(0.0f, data3[(alu6+3202)], alu16);
  var val66 = data9[0];
  var val67 = data9[1];
  var val68 = select(0.0f, data5[(alu9+-5600)], alu17);
  var val69 = select(0.0f, data1[(alu4+44800)], alu5);
  var val70 = select(0.0f, data3[(alu6+4800)], alu14);
  var val71 = select(0.0f, data5[(alu9+-5599)], alu19);
  var val72 = select(0.0f, data1[(alu4+44801)], alu7);
  var val73 = select(0.0f, data3[(alu6+4801)], alu15);
  var val74 = select(0.0f, data5[(alu9+-5598)], alu21);
  var val75 = select(0.0f, data1[(alu4+44802)], alu8);
  var val76 = select(0.0f, data3[(alu6+4802)], alu16);
  var val77 = data9[2];
  var val78 = select(0.0f, data5[(alu9+-5200)], alu17);
  var val79 = select(0.0f, data1[(alu4+51200)], alu5);
  var val80 = select(0.0f, data3[(alu6+6400)], alu14);
  var val81 = select(0.0f, data5[(alu9+-5199)], alu19);
  var val82 = select(0.0f, data1[(alu4+51201)], alu7);
  var val83 = select(0.0f, data3[(alu6+6401)], alu15);
  var val84 = select(0.0f, data5[(alu9+-5198)], alu21);
  var val85 = select(0.0f, data1[(alu4+51202)], alu8);
  var val86 = select(0.0f, data3[(alu6+6402)], alu16);
  var val87 = data9[3];
  var val88 = select(0.0f, data5[(alu9+-4800)], alu17);
  var val89 = select(0.0f, data1[(alu4+57600)], alu5);
  var val90 = select(0.0f, data3[(alu6+8000)], alu14);
  var val91 = select(0.0f, data5[(alu9+-4799)], alu19);
  var val92 = select(0.0f, data1[(alu4+57601)], alu7);
  var val93 = select(0.0f, data3[(alu6+8001)], alu15);
  var val94 = select(0.0f, data5[(alu9+-4798)], alu21);
  var val95 = select(0.0f, data1[(alu4+57602)], alu8);
  var val96 = select(0.0f, data3[(alu6+8002)], alu16);
  var val97 = data9[4];
  var val98 = select(0.0f, data5[(alu9+-4400)], alu17);
  var val99 = select(0.0f, data1[(alu4+64000)], alu5);
  var val100 = select(0.0f, data3[(alu6+9600)], alu14);
  var val101 = select(0.0f, data5[(alu9+-4399)], alu19);
  var val102 = select(0.0f, data1[(alu4+64001)], alu7);
  var val103 = select(0.0f, data3[(alu6+9601)], alu15);
  var val104 = select(0.0f, data5[(alu9+-4398)], alu21);
  var val105 = select(0.0f, data1[(alu4+64002)], alu8);
  var val106 = select(0.0f, data3[(alu6+9602)], alu16);
  var val107 = data9[5];
  var val108 = select(0.0f, data5[(alu9+-4000)], alu17);
  var val109 = select(0.0f, data1[(alu4+70400)], alu5);
  var val110 = select(0.0f, data3[(alu6+11200)], alu14);
  var val111 = select(0.0f, data5[(alu9+-3999)], alu19);
  var val112 = select(0.0f, data1[(alu4+70401)], alu7);
  var val113 = select(0.0f, data3[(alu6+11201)], alu15);
  var val114 = select(0.0f, data5[(alu9+-3998)], alu21);
  var val115 = select(0.0f, data1[(alu4+70402)], alu8);
  var val116 = select(0.0f, data3[(alu6+11202)], alu16);
  var val117 = data9[6];
  var val118 = select(0.0f, data5[(alu9+-3600)], alu17);
  var val119 = select(0.0f, data1[(alu4+76800)], alu5);
  var val120 = select(0.0f, data3[(alu6+12800)], alu14);
  var val121 = select(0.0f, data5[(alu9+-3599)], alu19);
  var val122 = select(0.0f, data1[(alu4+76801)], alu7);
  var val123 = select(0.0f, data3[(alu6+12801)], alu15);
  var val124 = select(0.0f, data5[(alu9+-3598)], alu21);
  var val125 = select(0.0f, data1[(alu4+76802)], alu8);
  var val126 = select(0.0f, data3[(alu6+12802)], alu16);
  var val127 = data9[7];
  var val128 = select(0.0f, data5[(alu9+-3200)], alu17);
  var val129 = select(0.0f, data1[(alu4+83200)], alu5);
  var val130 = select(0.0f, data3[(alu6+14400)], alu14);
  var val131 = select(0.0f, data5[(alu9+-3199)], alu19);
  var val132 = select(0.0f, data1[(alu4+83201)], alu7);
  var val133 = select(0.0f, data3[(alu6+14401)], alu15);
  var val134 = select(0.0f, data5[(alu9+-3198)], alu21);
  var val135 = select(0.0f, data1[(alu4+83202)], alu8);
  var val136 = select(0.0f, data3[(alu6+14402)], alu16);
  var val137 = data9[8];
  var val138 = select(0.0f, data5[(alu9+-2800)], alu17);
  var val139 = select(0.0f, data1[(alu4+89600)], alu5);
  var val140 = select(0.0f, data3[(alu6+16000)], alu14);
  var val141 = select(0.0f, data5[(alu9+-2799)], alu19);
  var val142 = select(0.0f, data1[(alu4+89601)], alu7);
  var val143 = select(0.0f, data3[(alu6+16001)], alu15);
  var val144 = select(0.0f, data5[(alu9+-2798)], alu21);
  var val145 = select(0.0f, data1[(alu4+89602)], alu8);
  var val146 = select(0.0f, data3[(alu6+16002)], alu16);
  var val147 = data9[9];
  var val148 = select(0.0f, data5[(alu9+-2400)], alu17);
  var val149 = select(0.0f, data1[(alu4+96000)], alu5);
  var val150 = select(0.0f, data3[(alu6+17600)], alu14);
  var val151 = select(0.0f, data5[(alu9+-2399)], alu19);
  var val152 = select(0.0f, data1[(alu4+96001)], alu7);
  var val153 = select(0.0f, data3[(alu6+17601)], alu15);
  var val154 = select(0.0f, data5[(alu9+-2398)], alu21);
  var val155 = select(0.0f, data1[(alu4+96002)], alu8);
  var val156 = select(0.0f, data3[(alu6+17602)], alu16);
  var val157 = data9[10];
  var val158 = select(0.0f, data5[(alu9+-2000)], alu17);
  var val159 = select(0.0f, data5[(alu9+-1999)], alu19);
  var val160 = select(0.0f, data5[(alu9+-1998)], alu21);
  var val161 = data9[11];
  var val162 = data9[12];
  var val163 = data9[13];
  var val164 = data9[14];
  var val165 = data9[15];
  data0[alu13] = ((val66*exp2((((val12+val0+val1)-val24)*1.4426950408889634f))*alu22)+(val67*exp2((((val13+val2+val3)-val24)*1.4426950408889634f))*alu22)+(val77*exp2((((val25+val14+val15)-val24)*1.4426950408889634f))*alu22)+(val87*exp2((((val36+val26+val27)-val24)*1.4426950408889634f))*alu22)+(val97*exp2((((val46+val37+val38)-val24)*1.4426950408889634f))*alu22)+(val107*exp2((((val57+val47+val48)-val24)*1.4426950408889634f))*alu22)+(val117*exp2((((val68+val58+val59)-val24)*1.4426950408889634f))*alu22)+(val127*exp2((((val78+val69+val70)-val24)*1.4426950408889634f))*alu22)+(val137*exp2((((val88+val79+val80)-val24)*1.4426950408889634f))*alu22)+(val147*exp2((((val98+val89+val90)-val24)*1.4426950408889634f))*alu22)+(val157*exp2((((val108+val99+val100)-val24)*1.4426950408889634f))*alu22)+(val161*exp2((((val118+val109+val110)-val24)*1.4426950408889634f))*alu22)+(val162*exp2((((val128+val119+val120)-val24)*1.4426950408889634f))*alu22)+(val163*exp2((((val138+val129+val130)-val24)*1.4426950408889634f))*alu22)+(val164*exp2((((val148+val139+val140)-val24)*1.4426950408889634f))*alu22)+(val165*exp2((((val158+val149+val150)-val24)*1.4426950408889634f))*alu22));
  data0[alu18] = ((val66*exp2((((val16+val4+val5)-val28)*1.4426950408889634f))*alu23)+(val67*exp2((((val17+val6+val7)-val28)*1.4426950408889634f))*alu23)+(val77*exp2((((val29+val18+val19)-val28)*1.4426950408889634f))*alu23)+(val87*exp2((((val39+val30+val31)-val28)*1.4426950408889634f))*alu23)+(val97*exp2((((val50+val40+val41)-val28)*1.4426950408889634f))*alu23)+(val107*exp2((((val60+val51+val52)-val28)*1.4426950408889634f))*alu23)+(val117*exp2((((val71+val61+val62)-val28)*1.4426950408889634f))*alu23)+(val127*exp2((((val81+val72+val73)-val28)*1.4426950408889634f))*alu23)+(val137*exp2((((val91+val82+val83)-val28)*1.4426950408889634f))*alu23)+(val147*exp2((((val101+val92+val93)-val28)*1.4426950408889634f))*alu23)+(val157*exp2((((val111+val102+val103)-val28)*1.4426950408889634f))*alu23)+(val161*exp2((((val121+val112+val113)-val28)*1.4426950408889634f))*alu23)+(val162*exp2((((val131+val122+val123)-val28)*1.4426950408889634f))*alu23)+(val163*exp2((((val141+val132+val133)-val28)*1.4426950408889634f))*alu23)+(val164*exp2((((val151+val142+val143)-val28)*1.4426950408889634f))*alu23)+(val165*exp2((((val159+val152+val153)-val28)*1.4426950408889634f))*alu23));
  data0[alu20] = ((val66*exp2((((val20+val8+val9)-val32)*1.4426950408889634f))*alu24)+(val67*exp2((((val21+val10+val11)-val32)*1.4426950408889634f))*alu24)+(val77*exp2((((val33+val22+val23)-val32)*1.4426950408889634f))*alu24)+(val87*exp2((((val42+val34+val35)-val32)*1.4426950408889634f))*alu24)+(val97*exp2((((val54+val43+val44)-val32)*1.4426950408889634f))*alu24)+(val107*exp2((((val63+val55+val56)-val32)*1.4426950408889634f))*alu24)+(val117*exp2((((val74+val64+val65)-val32)*1.4426950408889634f))*alu24)+(val127*exp2((((val84+val75+val76)-val32)*1.4426950408889634f))*alu24)+(val137*exp2((((val94+val85+val86)-val32)*1.4426950408889634f))*alu24)+(val147*exp2((((val104+val95+val96)-val32)*1.4426950408889634f))*alu24)+(val157*exp2((((val114+val105+val106)-val32)*1.4426950408889634f))*alu24)+(val161*exp2((((val124+val115+val116)-val32)*1.4426950408889634f))*alu24)+(val162*exp2((((val134+val125+val126)-val32)*1.4426950408889634f))*alu24)+(val163*exp2((((val144+val135+val136)-val32)*1.4426950408889634f))*alu24)+(val164*exp2((((val154+val145+val146)-val32)*1.4426950408889634f))*alu24)+(val165*exp2((((val160+val155+val156)-val32)*1.4426950408889634f))*alu24));
}`;

const E_525_16_2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 525 */
  var lidx0 = i32(lindex.x); /* 16 */
  var alu0 = (lidx0+(gidx0<<4));
  var alu1 = (gidx0<400);
  var alu2 = (gidx0<500);
  var alu3 = (alu2&(alu1!=true));
  var alu4 = (alu2!=true);
  var val0 = select(0.0f, data1[(alu0%80)], alu1);
  var val1 = select(0.0f, data2[(alu0%40)], alu3);
  var alu5 = (alu0+8400);
  var val2 = select(0.0f, data1[(gidx0/5)], alu1);
  var val3 = select(0.0f, data2[((alu0/40)+-160)], alu3);
  var val4 = select(0.0f, data3[(alu0%20)], alu4);
  var val5 = select(0.0f, data3[((alu0/20)+-400)], alu4);
  var val6 = data4[(alu0+16800)];
  var alu6 = (val4+val0+val1);
  var val7 = data4[alu0];
  var val8 = data4[(alu0+25200)];
  var alu7 = (val5+val2+val3);
  var val9 = data4[alu5];
  data0[alu0] = ((val6+alu6+(alu6-val7))*0.5f);
  data0[alu5] = ((val8+alu7+(alu7-val9))*0.5f);
}`;

const E_525_16_2n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 525 */
  var lidx0 = i32(lindex.x); /* 16 */
  var alu0 = (lidx0+(gidx0<<4));
  var alu1 = (gidx0<400);
  var alu2 = (gidx0<500);
  var val0 = select(0.0f, data1[(alu0%80)], alu1);
  var alu3 = (alu2&(alu1!=true));
  var val1 = select(0.0f, data1[(gidx0/5)], alu1);
  var val2 = select(0.0f, data2[(alu0%40)], alu3);
  var alu4 = (alu2!=true);
  var alu5 = (alu0+8400);
  var val3 = select(0.0f, data2[((alu0/40)+-160)], alu3);
  var val4 = select(0.0f, data3[(alu0%20)], alu4);
  var val5 = select(0.0f, data3[((alu0/20)+-400)], alu4);
  var val6 = data4[alu0];
  var val7 = data4[(alu0+16800)];
  var val8 = data4[alu5];
  var val9 = data4[(alu0+25200)];
  data0[alu0] = (val6+((-val0-val2)-val4)+val7+val4+val0+val2);
  data0[alu5] = (val8+((-val1-val3)-val5)+val9+val5+val1+val3);
}`;

const E_7_525_4_16_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 525 */
  var gidx1 = i32(gindex.y); /* 7 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<4);
  var alu1 = ((gidx1*12)+(lidx0*3));
  var alu2 = (lidx1+alu0+(gidx1*100800)+(lidx0*25200));
  var alu3 = (lidx1+alu0);
  var alu4 = (alu1<2);
  var alu5 = (alu1<4);
  var alu6 = (alu2+-16800);
  var alu7 = (alu4!=true);
  var alu8 = (((gidx1+lidx0)<1)!=true);
  var alu9 = ((lidx0+(gidx1<<2))<1);
  var alu10 = ((gidx1<1)&(lidx0<1));
  var val0 = select(0.0f, data1[alu3], alu10);
  var val1 = select(0.0f, data2[alu6], (alu5&alu7));
  var val2 = select(0.0f, data1[(alu3+8400)], alu10);
  var val3 = select(0.0f, data2[(alu2+-8400)], (alu9&alu8));
  var val4 = select(0.0f, data3[alu3], alu5);
  var val5 = select(0.0f, data3[alu3], alu9);
  var val6 = select(0.0f, data2[alu2], alu4);
  var val7 = select(0.0f, data3[alu3], alu4);
  var val8 = select(0.0f, data4[(alu2+-33600)], (alu5!=true));
  var val9 = select(0.0f, data4[(alu2+-25200)], alu8);
  var val10 = select(0.0f, data4[alu6], alu7);
  data0[alu2] = (val8+(val4*(val0+val1)));
  data0[(alu2+8400)] = (val9+(val5*(val2+val3)));
  data0[(alu2+16800)] = (val10+(val6*val7));
}`;

const setupNet = async (device, safetensor) => {
    const metadata = getTensorMetadata(safetensor);
    const infinityBuf = createInfinityUniformBuf(device);

    const layouts=[device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]})]

    const buf_0 = createEmptyBuf(device, 320);;
    const buf_1 = createEmptyBuf(device, 160);;
    const buf_2 = createEmptyBuf(device, 80);;
    const buf_3 = createEmptyBuf(device, 6553600);;
    const input0 = createEmptyBuf(device, 4915200);;
    const buf_4 = createWeightBuf(device, 1728, getTensorBuffer(safetensor, metadata['net.b1.0.conv.weight']));
    const buf_5 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.running_mean']));
    const buf_6 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.weight']));
    const buf_7 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.running_var']));
    const buf_8 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.bias']));
    const buf_9 = createEmptyBuf(device, 33600);;
    const buf_10 = createEmptyBuf(device, 3276800);;
    const buf_11 = createWeightBuf(device, 18432, getTensorBuffer(safetensor, metadata['net.b1.1.conv.weight']));
    const buf_12 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.running_mean']));
    const buf_13 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.weight']));
    const buf_14 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.running_var']));
    const buf_15 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.bias']));
    const buf_16 = createEmptyBuf(device, 3276800);;
    const buf_17 = createWeightBuf(device, 4096, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.conv.weight']));
    const buf_18 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.running_mean']));
    const buf_19 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.weight']));
    const buf_20 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.running_var']));
    const buf_21 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.bias']));
    const buf_22 = createEmptyBuf(device, 1638400);;
    const buf_23 = createWeightBuf(device, 9216, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.conv.weight']));
    const buf_24 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.running_mean']));
    const buf_25 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.weight']));
    const buf_26 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.running_var']));
    const buf_27 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.bias']));
    const buf_28 = createEmptyBuf(device, 1638400);;
    const buf_29 = createWeightBuf(device, 9216, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.conv.weight']));
    const buf_30 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.running_mean']));
    const buf_31 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.weight']));
    const buf_32 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.running_var']));
    const buf_33 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.bias']));
    const buf_34 = createEmptyBuf(device, 4915200);;
    const buf_35 = createWeightBuf(device, 6144, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.conv.weight']));
    const buf_36 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.running_mean']));
    const buf_37 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.weight']));
    const buf_38 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.running_var']));
    const buf_39 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.bias']));
    const buf_40 = createWeightBuf(device, 73728, getTensorBuffer(safetensor, metadata['net.b2.1.conv.weight']));
    const buf_41 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.running_mean']));
    const buf_42 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.weight']));
    const buf_43 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.running_var']));
    const buf_44 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.bias']));
    const buf_45 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.conv.weight']));
    const buf_46 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.running_mean']));
    const buf_47 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.weight']));
    const buf_48 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.running_var']));
    const buf_49 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.bias']));
    const buf_50 = createEmptyBuf(device, 819200);;
    const buf_51 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.conv.weight']));
    const buf_52 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.running_mean']));
    const buf_53 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.weight']));
    const buf_54 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.running_var']));
    const buf_55 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.bias']));
    const buf_56 = createEmptyBuf(device, 819200);;
    const buf_57 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.conv.weight']));
    const buf_58 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.running_mean']));
    const buf_59 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.weight']));
    const buf_60 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.running_var']));
    const buf_61 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.bias']));
    const buf_62 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.conv.weight']));
    const buf_63 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.running_mean']));
    const buf_64 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.weight']));
    const buf_65 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.running_var']));
    const buf_66 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.bias']));
    const buf_67 = createEmptyBuf(device, 819200);;
    const buf_68 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.conv.weight']));
    const buf_69 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.running_mean']));
    const buf_70 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.weight']));
    const buf_71 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.running_var']));
    const buf_72 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.bias']));
    const buf_73 = createWeightBuf(device, 32768, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.conv.weight']));
    const buf_74 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.running_mean']));
    const buf_75 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.weight']));
    const buf_76 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.running_var']));
    const buf_77 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.bias']));
    const buf_78 = createWeightBuf(device, 294912, getTensorBuffer(safetensor, metadata['net.b3.0.conv.weight']));
    const buf_79 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.running_mean']));
    const buf_80 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.weight']));
    const buf_81 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.running_var']));
    const buf_82 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.bias']));
    const buf_83 = createWeightBuf(device, 65536, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.conv.weight']));
    const buf_84 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.running_mean']));
    const buf_85 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.weight']));
    const buf_86 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.running_var']));
    const buf_87 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.bias']));
    const buf_88 = createEmptyBuf(device, 409600);;
    const buf_89 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.conv.weight']));
    const buf_90 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.running_mean']));
    const buf_91 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.weight']));
    const buf_92 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.running_var']));
    const buf_93 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.bias']));
    const buf_94 = createEmptyBuf(device, 409600);;
    const buf_95 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.conv.weight']));
    const buf_96 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.running_mean']));
    const buf_97 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.weight']));
    const buf_98 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.running_var']));
    const buf_99 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.bias']));
    const buf_100 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.conv.weight']));
    const buf_101 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.running_mean']));
    const buf_102 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.weight']));
    const buf_103 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.running_var']));
    const buf_104 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.bias']));
    const buf_105 = createEmptyBuf(device, 409600);;
    const buf_106 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.conv.weight']));
    const buf_107 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.running_mean']));
    const buf_108 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.weight']));
    const buf_109 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.running_var']));
    const buf_110 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.bias']));
    const buf_111 = createWeightBuf(device, 131072, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.conv.weight']));
    const buf_112 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.running_mean']));
    const buf_113 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.weight']));
    const buf_114 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.running_var']));
    const buf_115 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.bias']));
    const buf_116 = createWeightBuf(device, 1179648, getTensorBuffer(safetensor, metadata['net.b4.0.conv.weight']));
    const buf_117 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.running_mean']));
    const buf_118 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.weight']));
    const buf_119 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.running_var']));
    const buf_120 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.bias']));
    const buf_121 = createWeightBuf(device, 262144, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.conv.weight']));
    const buf_122 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.running_mean']));
    const buf_123 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.weight']));
    const buf_124 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.running_var']));
    const buf_125 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.bias']));
    const buf_126 = createEmptyBuf(device, 204800);;
    const buf_127 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.conv.weight']));
    const buf_128 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.running_mean']));
    const buf_129 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.weight']));
    const buf_130 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.running_var']));
    const buf_131 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.bias']));
    const buf_132 = createEmptyBuf(device, 204800);;
    const buf_133 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.conv.weight']));
    const buf_134 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.running_mean']));
    const buf_135 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.weight']));
    const buf_136 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.running_var']));
    const buf_137 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.bias']));
    const buf_138 = createEmptyBuf(device, 614400);;
    const buf_139 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.conv.weight']));
    const buf_140 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.running_mean']));
    const buf_141 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.weight']));
    const buf_142 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.running_var']));
    const buf_143 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.bias']));
    const buf_144 = createWeightBuf(device, 131072, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.conv.weight']));
    const buf_145 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.running_mean']));
    const buf_146 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.weight']));
    const buf_147 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.running_var']));
    const buf_148 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.bias']));
    const buf_149 = createEmptyBuf(device, 204800);;
    const buf_150 = createEmptyBuf(device, 204800);;
    const buf_151 = createWeightBuf(device, 524288, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.conv.weight']));
    const buf_152 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.running_mean']));
    const buf_153 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.weight']));
    const buf_154 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.running_var']));
    const buf_155 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.bias']));
    const buf_156 = createEmptyBuf(device, 2457600);;
    const buf_157 = createWeightBuf(device, 196608, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.conv.weight']));
    const buf_158 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.running_mean']));
    const buf_159 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.weight']));
    const buf_160 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.running_var']));
    const buf_161 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.bias']));
    const buf_162 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.conv.weight']));
    const buf_163 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.running_mean']));
    const buf_164 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.weight']));
    const buf_165 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.running_var']));
    const buf_166 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.bias']));
    const buf_167 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.conv.weight']));
    const buf_168 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.running_mean']));
    const buf_169 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.weight']));
    const buf_170 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.running_var']));
    const buf_171 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.bias']));
    const buf_172 = createEmptyBuf(device, 1228800);;
    const buf_173 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.conv.weight']));
    const buf_174 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.running_mean']));
    const buf_175 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.weight']));
    const buf_176 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.running_var']));
    const buf_177 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.bias']));
    const buf_178 = createWeightBuf(device, 49152, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.conv.weight']));
    const buf_179 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.running_mean']));
    const buf_180 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.weight']));
    const buf_181 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.running_var']));
    const buf_182 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.bias']));
    const buf_183 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.conv.weight']));
    const buf_184 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.running_mean']));
    const buf_185 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.weight']));
    const buf_186 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.running_var']));
    const buf_187 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.bias']));
    const buf_188 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.conv.weight']));
    const buf_189 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.running_mean']));
    const buf_190 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.weight']));
    const buf_191 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.running_var']));
    const buf_192 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.bias']));
    const buf_193 = createWeightBuf(device, 24576, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.conv.weight']));
    const buf_194 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.running_mean']));
    const buf_195 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.weight']));
    const buf_196 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.running_var']));
    const buf_197 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.bias']));
    const buf_198 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.0.0.conv.weight']));
    const buf_199 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.running_mean']));
    const buf_200 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.weight']));
    const buf_201 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.running_var']));
    const buf_202 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.bias']));
    const buf_203 = createEmptyBuf(device, 2048000);;
    const buf_204 = createWeightBuf(device, 184320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.conv.weight']));
    const buf_205 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.running_mean']));
    const buf_206 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.weight']));
    const buf_207 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.running_var']));
    const buf_208 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.bias']));
    const buf_209 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n3.conv.weight']));
    const buf_210 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.running_mean']));
    const buf_211 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.weight']));
    const buf_212 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.running_var']));
    const buf_213 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.bias']));
    const buf_214 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.0.1.conv.weight']));
    const buf_215 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.running_mean']));
    const buf_216 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.weight']));
    const buf_217 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.running_var']));
    const buf_218 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.bias']));
    const buf_219 = createEmptyBuf(device, 2048000);;
    const buf_220 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.0.1.conv.weight']));
    const buf_221 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.running_mean']));
    const buf_222 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.weight']));
    const buf_223 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.running_var']));
    const buf_224 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.bias']));
    const buf_225 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.0.2.weight']));
    const buf_226 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.2.bias']));
    const buf_227 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.0.2.weight']));
    const buf_228 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.2.bias']));
    const buf_229 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.conv.weight']));
    const buf_230 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.running_mean']));
    const buf_231 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.weight']));
    const buf_232 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.running_var']));
    const buf_233 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.bias']));
    const buf_234 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.conv.weight']));
    const buf_235 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.running_mean']));
    const buf_236 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.weight']));
    const buf_237 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.running_var']));
    const buf_238 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.bias']));
    const buf_239 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.conv.weight']));
    const buf_240 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.running_mean']));
    const buf_241 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.weight']));
    const buf_242 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.running_var']));
    const buf_243 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.bias']));
    const buf_244 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.conv.weight']));
    const buf_245 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.running_mean']));
    const buf_246 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.weight']));
    const buf_247 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.running_var']));
    const buf_248 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.bias']));
    const buf_249 = createWeightBuf(device, 294912, getTensorBuffer(safetensor, metadata['head.cv2.1.0.conv.weight']));
    const buf_250 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.running_mean']));
    const buf_251 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.weight']));
    const buf_252 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.running_var']));
    const buf_253 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.bias']));
    const buf_254 = createEmptyBuf(device, 512000);;
    const buf_255 = createWeightBuf(device, 368640, getTensorBuffer(safetensor, metadata['head.cv3.1.0.conv.weight']));
    const buf_256 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.running_mean']));
    const buf_257 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.weight']));
    const buf_258 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.running_var']));
    const buf_259 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.bias']));
    const buf_260 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n5.conv.weight']));
    const buf_261 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.running_mean']));
    const buf_262 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.weight']));
    const buf_263 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.running_var']));
    const buf_264 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.bias']));
    const buf_265 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.1.1.conv.weight']));
    const buf_266 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.running_mean']));
    const buf_267 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.weight']));
    const buf_268 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.running_var']));
    const buf_269 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.bias']));
    const buf_270 = createEmptyBuf(device, 512000);;
    const buf_271 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.1.1.conv.weight']));
    const buf_272 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.running_mean']));
    const buf_273 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.weight']));
    const buf_274 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.running_var']));
    const buf_275 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.bias']));
    const buf_276 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.1.2.weight']));
    const buf_277 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.2.bias']));
    const buf_278 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.1.2.weight']));
    const buf_279 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.2.bias']));
    const buf_280 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.conv.weight']));
    const buf_281 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.running_mean']));
    const buf_282 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.weight']));
    const buf_283 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.running_var']));
    const buf_284 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.bias']));
    const buf_285 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.conv.weight']));
    const buf_286 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.running_mean']));
    const buf_287 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.weight']));
    const buf_288 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.running_var']));
    const buf_289 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.bias']));
    const buf_290 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.conv.weight']));
    const buf_291 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.running_mean']));
    const buf_292 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.weight']));
    const buf_293 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.running_var']));
    const buf_294 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.bias']));
    const buf_295 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.conv.weight']));
    const buf_296 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.running_mean']));
    const buf_297 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.weight']));
    const buf_298 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.running_var']));
    const buf_299 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.bias']));
    const buf_300 = createEmptyBuf(device, 102400);;
    const buf_301 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['head.cv2.2.0.conv.weight']));
    const buf_302 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.running_mean']));
    const buf_303 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.weight']));
    const buf_304 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.running_var']));
    const buf_305 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.bias']));
    const buf_306 = createEmptyBuf(device, 128000);;
    const buf_307 = createWeightBuf(device, 737280, getTensorBuffer(safetensor, metadata['head.cv3.2.0.conv.weight']));
    const buf_308 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.running_mean']));
    const buf_309 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.weight']));
    const buf_310 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.running_var']));
    const buf_311 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.bias']));
    const buf_312 = createEmptyBuf(device, 102400);;
    const buf_313 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.2.1.conv.weight']));
    const buf_314 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.running_mean']));
    const buf_315 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.weight']));
    const buf_316 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.running_var']));
    const buf_317 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.bias']));
    const buf_318 = createEmptyBuf(device, 128000);;
    const buf_319 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.2.1.conv.weight']));
    const buf_320 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.running_mean']));
    const buf_321 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.weight']));
    const buf_322 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.running_var']));
    const buf_323 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.bias']));
    const buf_324 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.2.2.weight']));
    const buf_325 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.2.bias']));
    const buf_326 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.2.2.weight']));
    const buf_327 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.2.bias']));
    const buf_328 = createEmptyBuf(device, 134400);;
    const buf_329 = createEmptyBuf(device, 2688000);;
    const buf_330 = createEmptyBuf(device, 134400);;
    const buf_331 = createEmptyBuf(device, 134400);;
    const buf_332 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['head.dfl.conv.weight']));
    const buf_333 = createEmptyBuf(device, 67200);;
    const buf_334 = createEmptyBuf(device, 67200);;
    const output0 = createEmptyBuf(device, 2822400);;

    const gpuWriteBuffer0 = device.createBuffer({size:input0.size, usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE });

    const gpuReadBuffer0 = device.createBuffer({size:output0.size, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ });

    const kernels = [r_80_16_5, r_5_8_10_4, r_5_4_20, r_4_40_5_8_16_3_4_4_3_3, E_175_16_3, r_8_10_5_16_8_16_4_4_3_3, r_400_8_16_4_4_32, r_4_10_5_16_8_16_4_4_3_3, r_4_10_5_16_8_16_4_4_3_3n1, E_6_400_8_16_4, r_400_8_16_12_4_4_4, r_8_5_5_2_16_4_32_4_4_3_3, r_2_100_8_16_16_4_4_4, r_4_5_5_2_16_4_32_4_4_3_3, r_4_5_5_2_16_4_32_4_4_3_3n1, r_4_5_5_2_16_4_32_4_4_3_3n2, r_4_5_5_2_16_4_32_4_4_3_3n3, E_16_100_8_16_4, r_2_100_8_16_32_4_4_4, r_4_5_5_8_8_2_64_4_4_3_3, r_4_25_8_16_32_4_4_4, r_2_5_5_8_8_2_64_4_4_3_3, r_2_5_5_8_8_2_64_4_4_3_3n1, r_2_5_5_8_8_2_64_4_4_3_3n2, r_2_5_5_8_8_2_64_4_4_3_3n3, E_32_25_8_16_4, r_4_25_8_16_64_4_4_4, r_2_5_5_32_4_128_4_4_3_3, r_2_25_32_4_64_4_4_4, r_5_5_32_4_128_4_4_3_3, r_5_5_32_4_128_4_4_3_3n1, E_12_25_32_4_4, r_2_25_32_4_96_4_4_4, r_25_32_4_64_4_4_4, r_16_5_5_8_4_4_5_5, r_16_5_5_8_4_4_5_5, r_16_5_5_8_4_4_5_5, E_16_25_32_4_4, r_2_25_32_4_128_4_4_4, E_48_5_5_8_8_2_4, r_4_25_8_16_96_4_4_4, r_2_5_5_8_8_2_64_4_4_3_3, r_2_5_5_8_8_2_64_4_4_3_3n2, E_24_25_8_16_4, r_4_25_8_16_48_4_4_4, E_96_5_5_2_16_4_4, r_2_100_8_16_48_4_4_4, r_4_5_5_2_16_4_32_4_4_3_3, r_4_5_5_2_16_4_32_4_4_3_3n2, E_12_100_8_16_4, r_2_100_8_16_24_4_4_4, r_8_5_5_2_16_4_64_4_4_3_3, r_10_5_5_2_16_4_64_4_4_3_3, r_2_5_5_8_8_2_64_4_4_3_3n4, r_8_5_5_2_16_4_64_4_4_3_3, r_10_5_5_2_16_4_80_4_4_3_3, E_24_25_8_16_4n1, r_2_100_8_16_16_4_4_4n1, r_5_100_4_16_20_4_4_4, r_4_25_8_16_48_4_4_4, r_2_5_5_8_8_2_64_4_4_3_3, r_2_5_5_8_8_2_64_4_4_3_3n2, E_24_25_8_16_4, r_4_25_8_16_48_4_4_4, r_2_5_5_8_8_2_128_4_4_3_3, r_5_5_5_4_8_2_128_4_4_3_3, r_5_5_32_4_128_4_4_3_3n2, r_2_5_5_8_8_2_64_4_4_3_3n2, r_5_5_5_4_8_2_80_4_4_3_3, E_12_25_32_4_4n1, r_2_25_8_16_16_4_4_4, r_5_25_4_16_20_4_4_4, r_2_25_32_4_96_4_4_4, r_5_5_32_4_128_4_4_3_3, r_5_5_32_4_128_4_4_3_3n3, E_12_25_32_4_4, r_2_25_32_4_96_4_4_4, r_5_5_16_4_256_4_4_3_3, r_5_5_5_4_4_256_4_4_3_3, r_5_5_16_4_64_4_4_3_3, r_5_5_5_4_4_80_4_4_3_3, r_25_16_4_16_4_4_4, r_5_25_4_4_20_4_4_4, r_525_4_16_16, E_10_175_8_16_3, r_175_4_16_3_16, r_175_4_16_3_16n1, E_525_16_2, E_525_16_2n1, E_7_525_4_16_3];
    const pipelines = await Promise.all(kernels.map(async (name, i) => {
      return await device.createComputePipelineAsync({
          layout: device.createPipelineLayout({
              bindGroupLayouts: [layouts[i]],
          }),
          compute: {
              module: device.createShaderModule({
                  code: name,
              }),
              entryPoint: "main",
          },
      });
  }))

    return async (_input0) => {
        const commandEncoder = device.createCommandEncoder();
        await gpuWriteBuffer0.mapAsync(GPUMapMode.WRITE);
        new Float32Array(gpuWriteBuffer0.getMappedRange()).set(_input0);
        gpuWriteBuffer0.unmap();
        commandEncoder.copyBufferToBuffer(gpuWriteBuffer0, 0, input0, 0, gpuWriteBuffer0.size);
        addComputePass(device, commandEncoder, pipelines[0], layouts[0], infinityBuf, [buf_0], [80, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[1], layouts[1], infinityBuf, [buf_1], [5, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[2], layouts[2], infinityBuf, [buf_2], [5, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[3], layouts[3], infinityBuf, [buf_3, input0, buf_4, buf_5, buf_6, buf_7, buf_8], [5, 40, 4]);
        addComputePass(device, commandEncoder, pipelines[4], layouts[4], infinityBuf, [buf_9], [175, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[5], layouts[5], infinityBuf, [buf_10, buf_3, buf_11, buf_12, buf_13, buf_14, buf_15], [5, 10, 8]);
        addComputePass(device, commandEncoder, pipelines[6], layouts[6], infinityBuf, [buf_16, buf_10, buf_17, buf_18, buf_19, buf_20, buf_21], [400, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[7], layouts[7], infinityBuf, [buf_22, buf_16, buf_23, buf_24, buf_25, buf_26, buf_27], [5, 10, 4]);
        addComputePass(device, commandEncoder, pipelines[8], layouts[8], infinityBuf, [buf_28, buf_16, buf_22, buf_29, buf_30, buf_31, buf_32, buf_33], [5, 10, 4]);
        addComputePass(device, commandEncoder, pipelines[9], layouts[9], infinityBuf, [buf_34, buf_16, buf_28], [400, 6, 1]);
        addComputePass(device, commandEncoder, pipelines[10], layouts[10], infinityBuf, [buf_10, buf_34, buf_35, buf_36, buf_37, buf_38, buf_39], [400, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[11], layouts[11], infinityBuf, [buf_22, buf_10, buf_40, buf_41, buf_42, buf_43, buf_44], [5, 5, 8]);
        addComputePass(device, commandEncoder, pipelines[12], layouts[12], infinityBuf, [buf_28, buf_22, buf_45, buf_46, buf_47, buf_48, buf_49], [100, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[13], layouts[13], infinityBuf, [buf_50, buf_28, buf_51, buf_52, buf_53, buf_54, buf_55], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[14], layouts[14], infinityBuf, [buf_56, buf_28, buf_50, buf_57, buf_58, buf_59, buf_60, buf_61], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[15], layouts[15], infinityBuf, [buf_50, buf_56, buf_62, buf_63, buf_64, buf_65, buf_66], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[16], layouts[16], infinityBuf, [buf_67, buf_56, buf_50, buf_68, buf_69, buf_70, buf_71, buf_72], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[17], layouts[17], infinityBuf, [buf_16, buf_28, buf_56, buf_67], [100, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[18], layouts[18], infinityBuf, [buf_22, buf_16, buf_73, buf_74, buf_75, buf_76, buf_77], [100, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[19], layouts[19], infinityBuf, [buf_56, buf_22, buf_78, buf_79, buf_80, buf_81, buf_82], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[20], layouts[20], infinityBuf, [buf_50, buf_56, buf_83, buf_84, buf_85, buf_86, buf_87], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[21], layouts[21], infinityBuf, [buf_88, buf_50, buf_89, buf_90, buf_91, buf_92, buf_93], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[22], layouts[22], infinityBuf, [buf_94, buf_50, buf_88, buf_95, buf_96, buf_97, buf_98, buf_99], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[23], layouts[23], infinityBuf, [buf_88, buf_94, buf_100, buf_101, buf_102, buf_103, buf_104], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[24], layouts[24], infinityBuf, [buf_105, buf_94, buf_88, buf_106, buf_107, buf_108, buf_109, buf_110], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[25], layouts[25], infinityBuf, [buf_28, buf_50, buf_94, buf_105], [25, 32, 1]);
        addComputePass(device, commandEncoder, pipelines[26], layouts[26], infinityBuf, [buf_67, buf_28, buf_111, buf_112, buf_113, buf_114, buf_115], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[27], layouts[27], infinityBuf, [buf_94, buf_67, buf_116, buf_117, buf_118, buf_119, buf_120], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[28], layouts[28], infinityBuf, [buf_88, buf_94, buf_121, buf_122, buf_123, buf_124, buf_125], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[29], layouts[29], infinityBuf, [buf_126, buf_88, buf_127, buf_128, buf_129, buf_130, buf_131], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[30], layouts[30], infinityBuf, [buf_132, buf_88, buf_126, buf_133, buf_134, buf_135, buf_136, buf_137], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[31], layouts[31], infinityBuf, [buf_138, buf_88, buf_132], [25, 12, 1]);
        addComputePass(device, commandEncoder, pipelines[32], layouts[32], infinityBuf, [buf_105, buf_138, buf_139, buf_140, buf_141, buf_142, buf_143], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[33], layouts[33], infinityBuf, [buf_126, buf_105, buf_144, buf_145, buf_146, buf_147, buf_148], [25, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[34], layouts[34], infinityBuf, [buf_132, buf_126], [5, 5, 16]);
        addComputePass(device, commandEncoder, pipelines[35], layouts[35], infinityBuf, [buf_149, buf_132], [5, 5, 16]);
        addComputePass(device, commandEncoder, pipelines[36], layouts[36], infinityBuf, [buf_150, buf_149], [5, 5, 16]);
        addComputePass(device, commandEncoder, pipelines[37], layouts[37], infinityBuf, [buf_56, buf_126, buf_132, buf_149, buf_150], [25, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[38], layouts[38], infinityBuf, [buf_94, buf_56, buf_151, buf_152, buf_153, buf_154, buf_155], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[39], layouts[39], infinityBuf, [buf_156, buf_94, buf_67], [5, 5, 48]);
        addComputePass(device, commandEncoder, pipelines[40], layouts[40], infinityBuf, [buf_50, buf_156, buf_157, buf_158, buf_159, buf_160, buf_161], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[41], layouts[41], infinityBuf, [buf_88, buf_50, buf_162, buf_163, buf_164, buf_165, buf_166], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[42], layouts[42], infinityBuf, [buf_105, buf_88, buf_167, buf_168, buf_169, buf_170, buf_171], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[43], layouts[43], infinityBuf, [buf_172, buf_50, buf_105], [25, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[44], layouts[44], infinityBuf, [buf_67, buf_172, buf_173, buf_174, buf_175, buf_176, buf_177], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[45], layouts[45], infinityBuf, [buf_34, buf_67, buf_22], [5, 5, 96]);
        addComputePass(device, commandEncoder, pipelines[46], layouts[46], infinityBuf, [buf_22, buf_34, buf_178, buf_179, buf_180, buf_181, buf_182], [100, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[47], layouts[47], infinityBuf, [buf_56, buf_22, buf_183, buf_184, buf_185, buf_186, buf_187], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[48], layouts[48], infinityBuf, [buf_50, buf_56, buf_188, buf_189, buf_190, buf_191, buf_192], [5, 5, 4]);
        addComputePass(device, commandEncoder, pipelines[49], layouts[49], infinityBuf, [buf_156, buf_22, buf_50], [100, 12, 1]);
        addComputePass(device, commandEncoder, pipelines[50], layouts[50], infinityBuf, [buf_28, buf_156, buf_193, buf_194, buf_195, buf_196, buf_197], [100, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[51], layouts[51], infinityBuf, [buf_22, buf_28, buf_198, buf_199, buf_200, buf_201, buf_202], [5, 5, 8]);
        addComputePass(device, commandEncoder, pipelines[52], layouts[52], infinityBuf, [buf_203, buf_28, buf_204, buf_205, buf_206, buf_207, buf_208], [5, 5, 10]);
        addComputePass(device, commandEncoder, pipelines[53], layouts[53], infinityBuf, [buf_88, buf_28, buf_209, buf_210, buf_211, buf_212, buf_213], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[54], layouts[54], infinityBuf, [buf_28, buf_22, buf_214, buf_215, buf_216, buf_217, buf_218], [5, 5, 8]);
        addComputePass(device, commandEncoder, pipelines[55], layouts[55], infinityBuf, [buf_219, buf_203, buf_220, buf_221, buf_222, buf_223, buf_224], [5, 5, 10]);
        addComputePass(device, commandEncoder, pipelines[56], layouts[56], infinityBuf, [buf_172, buf_88, buf_67], [25, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[57], layouts[57], infinityBuf, [buf_22, buf_28, buf_225, buf_226], [100, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[58], layouts[58], infinityBuf, [buf_203, buf_219, buf_227, buf_228], [100, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[59], layouts[59], infinityBuf, [buf_67, buf_172, buf_229, buf_230, buf_231, buf_232, buf_233], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[60], layouts[60], infinityBuf, [buf_105, buf_67, buf_234, buf_235, buf_236, buf_237, buf_238], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[61], layouts[61], infinityBuf, [buf_88, buf_105, buf_239, buf_240, buf_241, buf_242, buf_243], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[62], layouts[62], infinityBuf, [buf_172, buf_67, buf_88], [25, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[63], layouts[63], infinityBuf, [buf_56, buf_172, buf_244, buf_245, buf_246, buf_247, buf_248], [25, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[64], layouts[64], infinityBuf, [buf_105, buf_56, buf_249, buf_250, buf_251, buf_252, buf_253], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[65], layouts[65], infinityBuf, [buf_254, buf_56, buf_255, buf_256, buf_257, buf_258, buf_259], [5, 5, 5]);
        addComputePass(device, commandEncoder, pipelines[66], layouts[66], infinityBuf, [buf_126, buf_56, buf_260, buf_261, buf_262, buf_263, buf_264], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[67], layouts[67], infinityBuf, [buf_88, buf_105, buf_265, buf_266, buf_267, buf_268, buf_269], [5, 5, 2]);
        addComputePass(device, commandEncoder, pipelines[68], layouts[68], infinityBuf, [buf_270, buf_254, buf_271, buf_272, buf_273, buf_274, buf_275], [5, 5, 5]);
        addComputePass(device, commandEncoder, pipelines[69], layouts[69], infinityBuf, [buf_138, buf_126, buf_94], [25, 12, 1]);
        addComputePass(device, commandEncoder, pipelines[70], layouts[70], infinityBuf, [buf_94, buf_88, buf_276, buf_277], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[71], layouts[71], infinityBuf, [buf_254, buf_270, buf_278, buf_279], [25, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[72], layouts[72], infinityBuf, [buf_105, buf_138, buf_280, buf_281, buf_282, buf_283, buf_284], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[73], layouts[73], infinityBuf, [buf_132, buf_105, buf_285, buf_286, buf_287, buf_288, buf_289], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[74], layouts[74], infinityBuf, [buf_149, buf_132, buf_290, buf_291, buf_292, buf_293, buf_294], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[75], layouts[75], infinityBuf, [buf_138, buf_105, buf_149], [25, 12, 1]);
        addComputePass(device, commandEncoder, pipelines[76], layouts[76], infinityBuf, [buf_88, buf_138, buf_295, buf_296, buf_297, buf_298, buf_299], [25, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[77], layouts[77], infinityBuf, [buf_300, buf_88, buf_301, buf_302, buf_303, buf_304, buf_305], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[78], layouts[78], infinityBuf, [buf_306, buf_88, buf_307, buf_308, buf_309, buf_310, buf_311], [5, 5, 5]);
        addComputePass(device, commandEncoder, pipelines[79], layouts[79], infinityBuf, [buf_312, buf_300, buf_313, buf_314, buf_315, buf_316, buf_317], [5, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[80], layouts[80], infinityBuf, [buf_318, buf_306, buf_319, buf_320, buf_321, buf_322, buf_323], [5, 5, 5]);
        addComputePass(device, commandEncoder, pipelines[81], layouts[81], infinityBuf, [buf_300, buf_312, buf_324, buf_325], [25, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[82], layouts[82], infinityBuf, [buf_306, buf_318, buf_326, buf_327], [25, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[83], layouts[83], infinityBuf, [buf_328, buf_22, buf_94, buf_300], [525, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[84], layouts[84], infinityBuf, [buf_329, buf_203, buf_254, buf_306], [175, 10, 1]);
        addComputePass(device, commandEncoder, pipelines[85], layouts[85], infinityBuf, [buf_330, buf_22, buf_94, buf_300, buf_328], [175, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[86], layouts[86], infinityBuf, [buf_331, buf_22, buf_94, buf_300, buf_328, buf_330, buf_332], [175, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[87], layouts[87], infinityBuf, [buf_333, buf_0, buf_1, buf_2, buf_331], [525, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[88], layouts[88], infinityBuf, [buf_334, buf_0, buf_1, buf_2, buf_331], [525, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[89], layouts[89], infinityBuf, [output0, buf_333, buf_334, buf_9, buf_329], [525, 7, 1]);
        commandEncoder.copyBufferToBuffer(output0, 0, gpuReadBuffer0, 0, output0.size);
        const gpuCommands = commandEncoder.finish();
        device.queue.submit([gpuCommands]);

        await gpuReadBuffer0.mapAsync(GPUMapMode.READ);
        const resultBuffer0 = new Float32Array(gpuReadBuffer0.size/4);
        resultBuffer0.set(new Float32Array(gpuReadBuffer0.getMappedRange()));
        gpuReadBuffer0.unmap();
        return [resultBuffer0];
    }
}
  

const loadNet = async (device) => { return await fetch('net.safetensors').then(x => x.arrayBuffer()).then(x => setupNet(device, new Uint8Array(x))); }