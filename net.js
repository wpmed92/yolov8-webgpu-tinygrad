
const getTensorBuffer = (safetensorBuffer, tensorMetadata) => {
    return safetensorBuffer.subarray(...tensorMetadata.data_offsets);
  }

const getTensorMetadata = (safetensorBuffer) => {
    const metadataLength = Number(new DataView(safetensorBuffer.buffer).getBigUint64(0, true));
    const metadata = JSON.parse(new TextDecoder("utf8").decode(safetensorBuffer.subarray(8, 8 + metadataLength)));
    return Object.fromEntries(Object.entries(metadata).filter(([k, v]) => k !== "__metadata__").map(([k, v]) => [k, {...v, data_offsets: v.data_offsets.map(x => 8 + metadataLength + x)}]));
  };

const createEmptyBuf = (device, size) => {
    return device.createBuffer({size, usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST });
};

const createInfinityUniformBuf = (device) => {
  const size = 4;
  const buf = device.createBuffer({
    mappedAtCreation: true,
    size,
    usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST
  });
  new Float32Array(buf.getMappedRange())[0] = Infinity;
  buf.unmap();
  return buf;
};

const createWeightBuf = (device, size, data) => {
  const buf = device.createBuffer({ mappedAtCreation: true, size, usage: GPUBufferUsage.STORAGE });
  new Uint8Array(buf.getMappedRange()).set(data);
  buf.unmap();
  return buf;
};

const addComputePass = (device, commandEncoder, pipeline, layout, infinityUniformBuf, bufs, workgroup) => {
  const bindGroup = device.createBindGroup({
    layout: layout,
    entries: [
      { binding: 0, resource: { buffer: infinityUniformBuf } },
      ...bufs.map((buffer, index) => ({ binding: index + 1, resource: { buffer } }))
    ]
  });

  const passEncoder = commandEncoder.beginComputePass();
  passEncoder.setPipeline(pipeline);
  passEncoder.setBindGroup(0, bindGroup);
  passEncoder.dispatchWorkgroups(...workgroup);
  passEncoder.end();
};

const r_32_16_2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
var<workgroup> temp0: array<i32, 16>;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 32 */
  var lidx0 = i32(lindex.x); /* 16 */
  var alu0 = (gidx0+(lidx0<<1)+-29);
  var alu1 = -select(alu0,0,(alu0<0));
  temp0[lidx0] = -select(alu1,-2,(alu1<-2));
  workgroupBarrier();
  if (((bool(lidx0))!=true)) {
    var acc0 = 0;
    for (var ridx0 = 0; ridx0 < 16; ridx0++) {
      var val0 = temp0[ridx0];
      acc0 = (acc0+val0);
    }
    data0[gidx0] = ((f32((acc0+-1)))+0.5f);
  }
}`;

const r_16_16 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
var<workgroup> temp0: array<i32, 16>;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var lidx0 = i32(lindex.x); /* 16 */
  temp0[lidx0] = select(0,1,(((gidx0+lidx0)<15)!=true));
  workgroupBarrier();
  if (((bool(lidx0))!=true)) {
    var acc0 = 0;
    for (var ridx0 = 0; ridx0 < 16; ridx0++) {
      var val0 = temp0[ridx0];
      acc0 = (acc0+val0);
    }
    data0[gidx0] = ((f32((acc0+-1)))+0.5f);
  }
}`;

const r_8_8 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var lidx0 = i32(lindex.x); /* 8 */
  data0[lidx0] = ((f32((select(0,1,((lidx0<6)!=true))+select(0,1,((lidx0<7)!=true))+select(0,1,((lidx0<5)!=true))+select(0,1,((lidx0<4)!=true))+select(0,1,((lidx0<3)!=true))+select(0,1,((lidx0<2)!=true))+select(0,1,((lidx0<1)!=true)))))+0.5f);
}`;

const r_4_16_2_8_16_3_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 16 */
  var gidx2 = i32(gindex.z); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (((gidx0+lidx1)<1)!=true);
  var alu1 = (((gidx1+lidx0)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 3; ridx0++) {
    var alu2 = ((gidx2*108)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+27)];
    var val10 = data2[(alu2+28)];
    var val11 = data2[(alu2+29)];
    var val12 = data2[(alu2+30)];
    var val13 = data2[(alu2+31)];
    var val14 = data2[(alu2+32)];
    var val15 = data2[(alu2+33)];
    var val16 = data2[(alu2+34)];
    var val17 = data2[(alu2+35)];
    var val18 = data2[(alu2+54)];
    var val19 = data2[(alu2+55)];
    var val20 = data2[(alu2+56)];
    var val21 = data2[(alu2+57)];
    var val22 = data2[(alu2+58)];
    var val23 = data2[(alu2+59)];
    var val24 = data2[(alu2+60)];
    var val25 = data2[(alu2+61)];
    var val26 = data2[(alu2+62)];
    var val27 = data2[(alu2+81)];
    var val28 = data2[(alu2+82)];
    var val29 = data2[(alu2+83)];
    var val30 = data2[(alu2+84)];
    var val31 = data2[(alu2+85)];
    var val32 = data2[(alu2+86)];
    var val33 = data2[(alu2+87)];
    var val34 = data2[(alu2+88)];
    var val35 = data2[(alu2+89)];
    var alu3 = ((gidx1<<12)+(lidx0<<9)+(ridx0<<16)+(gidx0<<7)+(lidx1<<3));
    var val36 = data1[alu3];
    var val37 = select(0.0f, data1[(alu3+-257)], (alu0&alu1));
    var val38 = select(0.0f, data1[(alu3+-256)], alu1);
    var val39 = select(0.0f, data1[(alu3+-255)], alu1);
    var val40 = select(0.0f, data1[(alu3+-254)], alu1);
    var val41 = select(0.0f, data1[(alu3+-253)], alu1);
    var val42 = select(0.0f, data1[(alu3+-252)], alu1);
    var val43 = select(0.0f, data1[(alu3+-251)], alu1);
    var val44 = select(0.0f, data1[(alu3+-250)], alu1);
    var val45 = select(0.0f, data1[(alu3+-249)], alu1);
    var val46 = select(0.0f, data1[(alu3+-1)], alu0);
    var val47 = data1[(alu3+1)];
    var val48 = data1[(alu3+2)];
    var val49 = data1[(alu3+3)];
    var val50 = data1[(alu3+4)];
    var val51 = data1[(alu3+5)];
    var val52 = data1[(alu3+6)];
    var val53 = data1[(alu3+7)];
    var val54 = select(0.0f, data1[(alu3+255)], alu0);
    var val55 = data1[(alu3+256)];
    var val56 = data1[(alu3+257)];
    var val57 = data1[(alu3+258)];
    var val58 = data1[(alu3+259)];
    var val59 = data1[(alu3+260)];
    var val60 = data1[(alu3+261)];
    var val61 = data1[(alu3+262)];
    var val62 = data1[(alu3+263)];
    acc0 = (acc0+(val37*val0)+(val46*val3)+(val54*val6)+(val38*val1)+(val36*val4)+(val55*val7)+(val39*val2)+(val47*val5)+(val56*val8));
    acc1 = (acc1+(val37*val9)+(val46*val12)+(val54*val15)+(val38*val10)+(val36*val13)+(val55*val16)+(val39*val11)+(val47*val14)+(val56*val17));
    acc2 = (acc2+(val37*val18)+(val46*val21)+(val54*val24)+(val38*val19)+(val36*val22)+(val55*val25)+(val39*val20)+(val47*val23)+(val56*val26));
    acc3 = (acc3+(val37*val27)+(val46*val30)+(val54*val33)+(val38*val28)+(val36*val31)+(val55*val34)+(val39*val29)+(val47*val32)+(val56*val35));
    acc4 = (acc4+(val39*val0)+(val47*val3)+(val56*val6)+(val40*val1)+(val48*val4)+(val57*val7)+(val41*val2)+(val49*val5)+(val58*val8));
    acc5 = (acc5+(val39*val9)+(val47*val12)+(val56*val15)+(val40*val10)+(val48*val13)+(val57*val16)+(val41*val11)+(val49*val14)+(val58*val17));
    acc6 = (acc6+(val39*val18)+(val47*val21)+(val56*val24)+(val40*val19)+(val48*val22)+(val57*val25)+(val41*val20)+(val49*val23)+(val58*val26));
    acc7 = (acc7+(val39*val27)+(val47*val30)+(val56*val33)+(val40*val28)+(val48*val31)+(val57*val34)+(val41*val29)+(val49*val32)+(val58*val35));
    acc8 = (acc8+(val41*val0)+(val49*val3)+(val58*val6)+(val42*val1)+(val50*val4)+(val59*val7)+(val43*val2)+(val51*val5)+(val60*val8));
    acc9 = (acc9+(val41*val9)+(val49*val12)+(val58*val15)+(val42*val10)+(val50*val13)+(val59*val16)+(val43*val11)+(val51*val14)+(val60*val17));
    acc10 = (acc10+(val41*val18)+(val49*val21)+(val58*val24)+(val42*val19)+(val50*val22)+(val59*val25)+(val43*val20)+(val51*val23)+(val60*val26));
    acc11 = (acc11+(val41*val27)+(val49*val30)+(val58*val33)+(val42*val28)+(val50*val31)+(val59*val34)+(val43*val29)+(val51*val32)+(val60*val35));
    acc12 = (acc12+(val43*val0)+(val51*val3)+(val60*val6)+(val44*val1)+(val52*val4)+(val61*val7)+(val45*val2)+(val53*val5)+(val62*val8));
    acc13 = (acc13+(val43*val9)+(val51*val12)+(val60*val15)+(val44*val10)+(val52*val13)+(val61*val16)+(val45*val11)+(val53*val14)+(val62*val17));
    acc14 = (acc14+(val43*val18)+(val51*val21)+(val60*val24)+(val44*val19)+(val52*val22)+(val61*val25)+(val45*val20)+(val53*val23)+(val62*val26));
    acc15 = (acc15+(val43*val27)+(val51*val30)+(val60*val33)+(val44*val28)+(val52*val31)+(val61*val34)+(val45*val29)+(val53*val32)+(val62*val35));
  }
  var alu21 = (gidx2<<2);
  var val63 = data3[alu21];
  var val64 = data4[alu21];
  var val65 = data5[alu21];
  var val66 = data6[alu21];
  var alu22 = (alu21+1);
  var val67 = data3[alu22];
  var val68 = data4[alu22];
  var val69 = data5[alu22];
  var val70 = data6[alu22];
  var alu23 = (alu21+2);
  var val71 = data3[alu23];
  var val72 = data4[alu23];
  var val73 = data5[alu23];
  var val74 = data6[alu23];
  var alu24 = (alu21+3);
  var val75 = data3[alu24];
  var val76 = data4[alu24];
  var val77 = data5[alu24];
  var val78 = data6[alu24];
  var alu25 = sqrt((1/(val69+0.001f)));
  var alu26 = sqrt((1/(val73+0.001f)));
  var alu27 = sqrt((1/(val77+0.001f)));
  var alu28 = sqrt((1/(val65+0.001f)));
  var alu29 = ((gidx1<<10)+(gidx2<<16)+(gidx0<<6)+(lidx0<<7)+(lidx1<<2));
  var alu30 = (val66+(alu28*val64*(acc0-val63)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val70+(alu25*val68*(acc1-val67)));
  data0[(alu29+16384)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val74+(alu26*val72*(acc2-val71)));
  data0[(alu29+32768)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val78+(alu27*val76*(acc3-val75)));
  data0[(alu29+49152)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val66+(alu28*val64*(acc4-val63)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val70+(alu25*val68*(acc5-val67)));
  data0[(alu29+16385)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val74+(alu26*val72*(acc6-val71)));
  data0[(alu29+32769)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val78+(alu27*val76*(acc7-val75)));
  data0[(alu29+49153)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val66+(alu28*val64*(acc8-val63)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val70+(alu25*val68*(acc9-val67)));
  data0[(alu29+16386)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val74+(alu26*val72*(acc10-val71)));
  data0[(alu29+32770)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val78+(alu27*val76*(acc11-val75)));
  data0[(alu29+49154)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val66+(alu28*val64*(acc12-val63)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val70+(alu25*val68*(acc13-val67)));
  data0[(alu29+16387)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val74+(alu26*val72*(acc14-val71)));
  data0[(alu29+32771)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val78+(alu27*val76*(acc15-val75)));
  data0[(alu29+49155)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const E_14_32_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 14 */
  var lidx0 = i32(lindex.x); /* 32 */
  var alu0 = ((gidx0*96)+(lidx0*3));
  var alu1 = (alu0<1022);
  var alu2 = (alu0<1024);
  var alu3 = (alu0<1279);
  var alu4 = (alu0<1280);
  var alu5 = (lidx0+(gidx0<<5));
  var alu6 = (alu5<341);
  var alu7 = (alu5<426);
  data0[(alu0+2)] = (f32((select(0,8,alu1)+select(0,16,(alu7&(alu1!=true)))+select(0,32,(alu7!=true)))));
  data0[(alu0+1)] = (f32((select(0,8,alu6)+select(0,16,(alu3&(alu6!=true)))+select(0,32,(alu3!=true)))));
  data0[alu0] = (f32((select(0,8,alu2)+select(0,16,(alu4&(alu2!=true)))+select(0,32,(alu4!=true)))));
}`;

const r_8_8_8_16_16_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var gidx1 = i32(gindex.y); /* 8 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = (((gidx0+lidx0)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = ((gidx1*576)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+144)];
    var val10 = data2[(alu2+145)];
    var val11 = data2[(alu2+146)];
    var val12 = data2[(alu2+147)];
    var val13 = data2[(alu2+148)];
    var val14 = data2[(alu2+149)];
    var val15 = data2[(alu2+150)];
    var val16 = data2[(alu2+151)];
    var val17 = data2[(alu2+152)];
    var val18 = data2[(alu2+288)];
    var val19 = data2[(alu2+289)];
    var val20 = data2[(alu2+290)];
    var val21 = data2[(alu2+291)];
    var val22 = data2[(alu2+292)];
    var val23 = data2[(alu2+293)];
    var val24 = data2[(alu2+294)];
    var val25 = data2[(alu2+295)];
    var val26 = data2[(alu2+296)];
    var val27 = data2[(alu2+432)];
    var val28 = data2[(alu2+433)];
    var val29 = data2[(alu2+434)];
    var val30 = data2[(alu2+435)];
    var val31 = data2[(alu2+436)];
    var val32 = data2[(alu2+437)];
    var val33 = data2[(alu2+438)];
    var val34 = data2[(alu2+439)];
    var val35 = data2[(alu2+440)];
    var alu3 = ((gidx0<<11)+(lidx0<<8)+(ridx0<<14)+(lidx1<<3));
    var val36 = data1[alu3];
    var val37 = select(0.0f, data1[(alu3+-129)], (alu0&alu1));
    var val38 = select(0.0f, data1[(alu3+-128)], alu1);
    var val39 = select(0.0f, data1[(alu3+-127)], alu1);
    var val40 = select(0.0f, data1[(alu3+-126)], alu1);
    var val41 = select(0.0f, data1[(alu3+-125)], alu1);
    var val42 = select(0.0f, data1[(alu3+-124)], alu1);
    var val43 = select(0.0f, data1[(alu3+-123)], alu1);
    var val44 = select(0.0f, data1[(alu3+-122)], alu1);
    var val45 = select(0.0f, data1[(alu3+-121)], alu1);
    var val46 = select(0.0f, data1[(alu3+-1)], alu0);
    var val47 = data1[(alu3+1)];
    var val48 = data1[(alu3+2)];
    var val49 = data1[(alu3+3)];
    var val50 = data1[(alu3+4)];
    var val51 = data1[(alu3+5)];
    var val52 = data1[(alu3+6)];
    var val53 = data1[(alu3+7)];
    var val54 = select(0.0f, data1[(alu3+127)], alu0);
    var val55 = data1[(alu3+128)];
    var val56 = data1[(alu3+129)];
    var val57 = data1[(alu3+130)];
    var val58 = data1[(alu3+131)];
    var val59 = data1[(alu3+132)];
    var val60 = data1[(alu3+133)];
    var val61 = data1[(alu3+134)];
    var val62 = data1[(alu3+135)];
    acc0 = (acc0+(val37*val0)+(val46*val3)+(val54*val6)+(val38*val1)+(val36*val4)+(val55*val7)+(val39*val2)+(val47*val5)+(val56*val8));
    acc1 = (acc1+(val37*val9)+(val46*val12)+(val54*val15)+(val38*val10)+(val36*val13)+(val55*val16)+(val39*val11)+(val47*val14)+(val56*val17));
    acc2 = (acc2+(val37*val18)+(val46*val21)+(val54*val24)+(val38*val19)+(val36*val22)+(val55*val25)+(val39*val20)+(val47*val23)+(val56*val26));
    acc3 = (acc3+(val37*val27)+(val46*val30)+(val54*val33)+(val38*val28)+(val36*val31)+(val55*val34)+(val39*val29)+(val47*val32)+(val56*val35));
    acc4 = (acc4+(val39*val0)+(val47*val3)+(val56*val6)+(val40*val1)+(val48*val4)+(val57*val7)+(val41*val2)+(val49*val5)+(val58*val8));
    acc5 = (acc5+(val39*val9)+(val47*val12)+(val56*val15)+(val40*val10)+(val48*val13)+(val57*val16)+(val41*val11)+(val49*val14)+(val58*val17));
    acc6 = (acc6+(val39*val18)+(val47*val21)+(val56*val24)+(val40*val19)+(val48*val22)+(val57*val25)+(val41*val20)+(val49*val23)+(val58*val26));
    acc7 = (acc7+(val39*val27)+(val47*val30)+(val56*val33)+(val40*val28)+(val48*val31)+(val57*val34)+(val41*val29)+(val49*val32)+(val58*val35));
    acc8 = (acc8+(val41*val0)+(val49*val3)+(val58*val6)+(val42*val1)+(val50*val4)+(val59*val7)+(val43*val2)+(val51*val5)+(val60*val8));
    acc9 = (acc9+(val41*val9)+(val49*val12)+(val58*val15)+(val42*val10)+(val50*val13)+(val59*val16)+(val43*val11)+(val51*val14)+(val60*val17));
    acc10 = (acc10+(val41*val18)+(val49*val21)+(val58*val24)+(val42*val19)+(val50*val22)+(val59*val25)+(val43*val20)+(val51*val23)+(val60*val26));
    acc11 = (acc11+(val41*val27)+(val49*val30)+(val58*val33)+(val42*val28)+(val50*val31)+(val59*val34)+(val43*val29)+(val51*val32)+(val60*val35));
    acc12 = (acc12+(val43*val0)+(val51*val3)+(val60*val6)+(val44*val1)+(val52*val4)+(val61*val7)+(val45*val2)+(val53*val5)+(val62*val8));
    acc13 = (acc13+(val43*val9)+(val51*val12)+(val60*val15)+(val44*val10)+(val52*val13)+(val61*val16)+(val45*val11)+(val53*val14)+(val62*val17));
    acc14 = (acc14+(val43*val18)+(val51*val21)+(val60*val24)+(val44*val19)+(val52*val22)+(val61*val25)+(val45*val20)+(val53*val23)+(val62*val26));
    acc15 = (acc15+(val43*val27)+(val51*val30)+(val60*val33)+(val44*val28)+(val52*val31)+(val61*val34)+(val45*val29)+(val53*val32)+(val62*val35));
  }
  var alu21 = (gidx1<<2);
  var val63 = data3[alu21];
  var val64 = data4[alu21];
  var val65 = data5[alu21];
  var val66 = data6[alu21];
  var alu22 = (alu21+1);
  var val67 = data3[alu22];
  var val68 = data4[alu22];
  var val69 = data5[alu22];
  var val70 = data6[alu22];
  var alu23 = (alu21+2);
  var val71 = data3[alu23];
  var val72 = data4[alu23];
  var val73 = data5[alu23];
  var val74 = data6[alu23];
  var alu24 = (alu21+3);
  var val75 = data3[alu24];
  var val76 = data4[alu24];
  var val77 = data5[alu24];
  var val78 = data6[alu24];
  var alu25 = sqrt((1/(val69+0.001f)));
  var alu26 = sqrt((1/(val73+0.001f)));
  var alu27 = sqrt((1/(val77+0.001f)));
  var alu28 = sqrt((1/(val65+0.001f)));
  var alu29 = ((gidx0<<9)+(gidx1<<14)+(lidx0<<6)+(lidx1<<2));
  var alu30 = (val66+(alu28*val64*(acc0-val63)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val70+(alu25*val68*(acc1-val67)));
  data0[(alu29+4096)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val74+(alu26*val72*(acc2-val71)));
  data0[(alu29+8192)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val78+(alu27*val76*(acc3-val75)));
  data0[(alu29+12288)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val66+(alu28*val64*(acc4-val63)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val70+(alu25*val68*(acc5-val67)));
  data0[(alu29+4097)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val74+(alu26*val72*(acc6-val71)));
  data0[(alu29+8193)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val78+(alu27*val76*(acc7-val75)));
  data0[(alu29+12289)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val66+(alu28*val64*(acc8-val63)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val70+(alu25*val68*(acc9-val67)));
  data0[(alu29+4098)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val74+(alu26*val72*(acc10-val71)));
  data0[(alu29+8194)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val78+(alu27*val76*(acc11-val75)));
  data0[(alu29+12290)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val66+(alu28*val64*(acc12-val63)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val70+(alu25*val68*(acc13-val67)));
  data0[(alu29+4099)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val74+(alu26*val72*(acc14-val71)));
  data0[(alu29+8195)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val78+(alu27*val76*(acc15-val75)));
  data0[(alu29+12291)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_64_8_16_4_4_32 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 64 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx0<<2);
  var val0 = data3[alu1];
  var val1 = data4[alu1];
  var val2 = data5[alu1];
  var val3 = data6[alu1];
  var alu2 = (alu1+1);
  var val4 = data3[alu2];
  var val5 = data4[alu2];
  var val6 = data5[alu2];
  var val7 = data6[alu2];
  var alu3 = (alu1+2);
  var val8 = data3[alu3];
  var val9 = data4[alu3];
  var val10 = data5[alu3];
  var val11 = data6[alu3];
  var alu4 = (alu1+3);
  var val12 = data3[alu4];
  var val13 = data4[alu4];
  var val14 = data5[alu4];
  var val15 = data6[alu4];
  var alu5 = (lidx0<<7);
  var val16 = data2[alu5];
  var val17 = data2[(alu5+1)];
  var val18 = data2[(alu5+2)];
  var val19 = data2[(alu5+3)];
  var val20 = data2[(alu5+4)];
  var val21 = data2[(alu5+5)];
  var val22 = data2[(alu5+6)];
  var val23 = data2[(alu5+7)];
  var val24 = data2[(alu5+8)];
  var val25 = data2[(alu5+9)];
  var val26 = data2[(alu5+10)];
  var val27 = data2[(alu5+11)];
  var val28 = data2[(alu5+12)];
  var val29 = data2[(alu5+13)];
  var val30 = data2[(alu5+14)];
  var val31 = data2[(alu5+15)];
  var val32 = data2[(alu5+16)];
  var val33 = data2[(alu5+17)];
  var val34 = data2[(alu5+18)];
  var val35 = data2[(alu5+19)];
  var val36 = data2[(alu5+20)];
  var val37 = data2[(alu5+21)];
  var val38 = data2[(alu5+22)];
  var val39 = data2[(alu5+23)];
  var val40 = data2[(alu5+24)];
  var val41 = data2[(alu5+25)];
  var val42 = data2[(alu5+26)];
  var val43 = data2[(alu5+27)];
  var val44 = data2[(alu5+28)];
  var val45 = data2[(alu5+29)];
  var val46 = data2[(alu5+30)];
  var val47 = data2[(alu5+31)];
  var val48 = data2[(alu5+32)];
  var val49 = data2[(alu5+33)];
  var val50 = data2[(alu5+34)];
  var val51 = data2[(alu5+35)];
  var val52 = data2[(alu5+36)];
  var val53 = data2[(alu5+37)];
  var val54 = data2[(alu5+38)];
  var val55 = data2[(alu5+39)];
  var val56 = data2[(alu5+40)];
  var val57 = data2[(alu5+41)];
  var val58 = data2[(alu5+42)];
  var val59 = data2[(alu5+43)];
  var val60 = data2[(alu5+44)];
  var val61 = data2[(alu5+45)];
  var val62 = data2[(alu5+46)];
  var val63 = data2[(alu5+47)];
  var val64 = data2[(alu5+48)];
  var val65 = data2[(alu5+49)];
  var val66 = data2[(alu5+50)];
  var val67 = data2[(alu5+51)];
  var val68 = data2[(alu5+52)];
  var val69 = data2[(alu5+53)];
  var val70 = data2[(alu5+54)];
  var val71 = data2[(alu5+55)];
  var val72 = data2[(alu5+56)];
  var val73 = data2[(alu5+57)];
  var val74 = data2[(alu5+58)];
  var val75 = data2[(alu5+59)];
  var val76 = data2[(alu5+60)];
  var val77 = data2[(alu5+61)];
  var val78 = data2[(alu5+62)];
  var val79 = data2[(alu5+63)];
  var val80 = data2[(alu5+64)];
  var val81 = data2[(alu5+65)];
  var val82 = data2[(alu5+66)];
  var val83 = data2[(alu5+67)];
  var val84 = data2[(alu5+68)];
  var val85 = data2[(alu5+69)];
  var val86 = data2[(alu5+70)];
  var val87 = data2[(alu5+71)];
  var val88 = data2[(alu5+72)];
  var val89 = data2[(alu5+73)];
  var val90 = data2[(alu5+74)];
  var val91 = data2[(alu5+75)];
  var val92 = data2[(alu5+76)];
  var val93 = data2[(alu5+77)];
  var val94 = data2[(alu5+78)];
  var val95 = data2[(alu5+79)];
  var val96 = data2[(alu5+80)];
  var val97 = data2[(alu5+81)];
  var val98 = data2[(alu5+82)];
  var val99 = data2[(alu5+83)];
  var val100 = data2[(alu5+84)];
  var val101 = data2[(alu5+85)];
  var val102 = data2[(alu5+86)];
  var val103 = data2[(alu5+87)];
  var val104 = data2[(alu5+88)];
  var val105 = data2[(alu5+89)];
  var val106 = data2[(alu5+90)];
  var val107 = data2[(alu5+91)];
  var val108 = data2[(alu5+92)];
  var val109 = data2[(alu5+93)];
  var val110 = data2[(alu5+94)];
  var val111 = data2[(alu5+95)];
  var val112 = data2[(alu5+96)];
  var val113 = data2[(alu5+97)];
  var val114 = data2[(alu5+98)];
  var val115 = data2[(alu5+99)];
  var val116 = data2[(alu5+100)];
  var val117 = data2[(alu5+101)];
  var val118 = data2[(alu5+102)];
  var val119 = data2[(alu5+103)];
  var val120 = data2[(alu5+104)];
  var val121 = data2[(alu5+105)];
  var val122 = data2[(alu5+106)];
  var val123 = data2[(alu5+107)];
  var val124 = data2[(alu5+108)];
  var val125 = data2[(alu5+109)];
  var val126 = data2[(alu5+110)];
  var val127 = data2[(alu5+111)];
  var val128 = data2[(alu5+112)];
  var val129 = data2[(alu5+113)];
  var val130 = data2[(alu5+114)];
  var val131 = data2[(alu5+115)];
  var val132 = data2[(alu5+116)];
  var val133 = data2[(alu5+117)];
  var val134 = data2[(alu5+118)];
  var val135 = data2[(alu5+119)];
  var val136 = data2[(alu5+120)];
  var val137 = data2[(alu5+121)];
  var val138 = data2[(alu5+122)];
  var val139 = data2[(alu5+123)];
  var val140 = data2[(alu5+124)];
  var val141 = data2[(alu5+125)];
  var val142 = data2[(alu5+126)];
  var val143 = data2[(alu5+127)];
  var alu6 = (lidx1<<2);
  var alu7 = (alu0+alu6);
  var val144 = data1[alu7];
  var val145 = data1[(alu7+1)];
  var val146 = data1[(alu7+2)];
  var val147 = data1[(alu7+3)];
  var val148 = data1[(alu7+4096)];
  var val149 = data1[(alu7+4097)];
  var val150 = data1[(alu7+4098)];
  var val151 = data1[(alu7+4099)];
  var val152 = data1[(alu7+8192)];
  var val153 = data1[(alu7+8193)];
  var val154 = data1[(alu7+8194)];
  var val155 = data1[(alu7+8195)];
  var val156 = data1[(alu7+12288)];
  var val157 = data1[(alu7+12289)];
  var val158 = data1[(alu7+12290)];
  var val159 = data1[(alu7+12291)];
  var val160 = data1[(alu7+16384)];
  var val161 = data1[(alu7+16385)];
  var val162 = data1[(alu7+16386)];
  var val163 = data1[(alu7+16387)];
  var val164 = data1[(alu7+20480)];
  var val165 = data1[(alu7+20481)];
  var val166 = data1[(alu7+20482)];
  var val167 = data1[(alu7+20483)];
  var val168 = data1[(alu7+24576)];
  var val169 = data1[(alu7+24577)];
  var val170 = data1[(alu7+24578)];
  var val171 = data1[(alu7+24579)];
  var val172 = data1[(alu7+28672)];
  var val173 = data1[(alu7+28673)];
  var val174 = data1[(alu7+28674)];
  var val175 = data1[(alu7+28675)];
  var val176 = data1[(alu7+32768)];
  var val177 = data1[(alu7+32769)];
  var val178 = data1[(alu7+32770)];
  var val179 = data1[(alu7+32771)];
  var val180 = data1[(alu7+36864)];
  var val181 = data1[(alu7+36865)];
  var val182 = data1[(alu7+36866)];
  var val183 = data1[(alu7+36867)];
  var val184 = data1[(alu7+40960)];
  var val185 = data1[(alu7+40961)];
  var val186 = data1[(alu7+40962)];
  var val187 = data1[(alu7+40963)];
  var val188 = data1[(alu7+45056)];
  var val189 = data1[(alu7+45057)];
  var val190 = data1[(alu7+45058)];
  var val191 = data1[(alu7+45059)];
  var val192 = data1[(alu7+49152)];
  var val193 = data1[(alu7+49153)];
  var val194 = data1[(alu7+49154)];
  var val195 = data1[(alu7+49155)];
  var val196 = data1[(alu7+53248)];
  var val197 = data1[(alu7+53249)];
  var val198 = data1[(alu7+53250)];
  var val199 = data1[(alu7+53251)];
  var val200 = data1[(alu7+57344)];
  var val201 = data1[(alu7+57345)];
  var val202 = data1[(alu7+57346)];
  var val203 = data1[(alu7+57347)];
  var val204 = data1[(alu7+61440)];
  var val205 = data1[(alu7+61441)];
  var val206 = data1[(alu7+61442)];
  var val207 = data1[(alu7+61443)];
  var val208 = data1[(alu7+65536)];
  var val209 = data1[(alu7+65537)];
  var val210 = data1[(alu7+65538)];
  var val211 = data1[(alu7+65539)];
  var val212 = data1[(alu7+69632)];
  var val213 = data1[(alu7+69633)];
  var val214 = data1[(alu7+69634)];
  var val215 = data1[(alu7+69635)];
  var val216 = data1[(alu7+73728)];
  var val217 = data1[(alu7+73729)];
  var val218 = data1[(alu7+73730)];
  var val219 = data1[(alu7+73731)];
  var val220 = data1[(alu7+77824)];
  var val221 = data1[(alu7+77825)];
  var val222 = data1[(alu7+77826)];
  var val223 = data1[(alu7+77827)];
  var val224 = data1[(alu7+81920)];
  var val225 = data1[(alu7+81921)];
  var val226 = data1[(alu7+81922)];
  var val227 = data1[(alu7+81923)];
  var val228 = data1[(alu7+86016)];
  var val229 = data1[(alu7+86017)];
  var val230 = data1[(alu7+86018)];
  var val231 = data1[(alu7+86019)];
  var val232 = data1[(alu7+90112)];
  var val233 = data1[(alu7+90113)];
  var val234 = data1[(alu7+90114)];
  var val235 = data1[(alu7+90115)];
  var val236 = data1[(alu7+94208)];
  var val237 = data1[(alu7+94209)];
  var val238 = data1[(alu7+94210)];
  var val239 = data1[(alu7+94211)];
  var val240 = data1[(alu7+98304)];
  var val241 = data1[(alu7+98305)];
  var val242 = data1[(alu7+98306)];
  var val243 = data1[(alu7+98307)];
  var val244 = data1[(alu7+102400)];
  var val245 = data1[(alu7+102401)];
  var val246 = data1[(alu7+102402)];
  var val247 = data1[(alu7+102403)];
  var val248 = data1[(alu7+106496)];
  var val249 = data1[(alu7+106497)];
  var val250 = data1[(alu7+106498)];
  var val251 = data1[(alu7+106499)];
  var val252 = data1[(alu7+110592)];
  var val253 = data1[(alu7+110593)];
  var val254 = data1[(alu7+110594)];
  var val255 = data1[(alu7+110595)];
  var val256 = data1[(alu7+114688)];
  var val257 = data1[(alu7+114689)];
  var val258 = data1[(alu7+114690)];
  var val259 = data1[(alu7+114691)];
  var val260 = data1[(alu7+118784)];
  var val261 = data1[(alu7+118785)];
  var val262 = data1[(alu7+118786)];
  var val263 = data1[(alu7+118787)];
  var val264 = data1[(alu7+122880)];
  var val265 = data1[(alu7+122881)];
  var val266 = data1[(alu7+122882)];
  var val267 = data1[(alu7+122883)];
  var val268 = data1[(alu7+126976)];
  var val269 = data1[(alu7+126977)];
  var val270 = data1[(alu7+126978)];
  var val271 = data1[(alu7+126979)];
  var alu8 = sqrt((1/(val6+0.001f)));
  var alu9 = sqrt((1/(val10+0.001f)));
  var alu10 = sqrt((1/(val14+0.001f)));
  var alu11 = sqrt((1/(val2+0.001f)));
  var alu12 = (alu0+(lidx0<<14)+alu6);
  var alu13 = (val7+(alu8*val5*(((val145*val48)+(val149*val49)+(val153*val50)+(val157*val51)+(val161*val52)+(val165*val53)+(val169*val54)+(val173*val55)+(val177*val56)+(val181*val57)+(val185*val58)+(val189*val59)+(val193*val60)+(val197*val61)+(val201*val62)+(val205*val63)+(val209*val64)+(val213*val65)+(val217*val66)+(val221*val67)+(val225*val68)+(val229*val69)+(val233*val70)+(val237*val71)+(val241*val72)+(val245*val73)+(val249*val74)+(val253*val75)+(val257*val76)+(val261*val77)+(val265*val78)+(val269*val79))-val4)));
  data0[(alu12+4097)] = ((1/(exp2((alu13*-1.4426950408889634f))+1.0f))*alu13);
  var alu15 = (val11+(alu9*val9*(((val145*val80)+(val149*val81)+(val153*val82)+(val157*val83)+(val161*val84)+(val165*val85)+(val169*val86)+(val173*val87)+(val177*val88)+(val181*val89)+(val185*val90)+(val189*val91)+(val193*val92)+(val197*val93)+(val201*val94)+(val205*val95)+(val209*val96)+(val213*val97)+(val217*val98)+(val221*val99)+(val225*val100)+(val229*val101)+(val233*val102)+(val237*val103)+(val241*val104)+(val245*val105)+(val249*val106)+(val253*val107)+(val257*val108)+(val261*val109)+(val265*val110)+(val269*val111))-val8)));
  data0[(alu12+8193)] = ((1/(exp2((alu15*-1.4426950408889634f))+1.0f))*alu15);
  var alu17 = (val15+(alu10*val13*(((val145*val112)+(val149*val113)+(val153*val114)+(val157*val115)+(val161*val116)+(val165*val117)+(val169*val118)+(val173*val119)+(val177*val120)+(val181*val121)+(val185*val122)+(val189*val123)+(val193*val124)+(val197*val125)+(val201*val126)+(val205*val127)+(val209*val128)+(val213*val129)+(val217*val130)+(val221*val131)+(val225*val132)+(val229*val133)+(val233*val134)+(val237*val135)+(val241*val136)+(val245*val137)+(val249*val138)+(val253*val139)+(val257*val140)+(val261*val141)+(val265*val142)+(val269*val143))-val12)));
  data0[(alu12+12289)] = ((1/(exp2((alu17*-1.4426950408889634f))+1.0f))*alu17);
  var alu19 = (val3+(alu11*val1*(((val145*val16)+(val149*val17)+(val153*val18)+(val157*val19)+(val161*val20)+(val165*val21)+(val169*val22)+(val173*val23)+(val177*val24)+(val181*val25)+(val185*val26)+(val189*val27)+(val193*val28)+(val197*val29)+(val201*val30)+(val205*val31)+(val209*val32)+(val213*val33)+(val217*val34)+(val221*val35)+(val225*val36)+(val229*val37)+(val233*val38)+(val237*val39)+(val241*val40)+(val245*val41)+(val249*val42)+(val253*val43)+(val257*val44)+(val261*val45)+(val265*val46)+(val269*val47))-val0)));
  data0[(alu12+1)] = ((1/(exp2((alu19*-1.4426950408889634f))+1.0f))*alu19);
  var alu21 = (val7+(alu8*val5*(((val146*val48)+(val150*val49)+(val154*val50)+(val158*val51)+(val162*val52)+(val166*val53)+(val170*val54)+(val174*val55)+(val178*val56)+(val182*val57)+(val186*val58)+(val190*val59)+(val194*val60)+(val198*val61)+(val202*val62)+(val206*val63)+(val210*val64)+(val214*val65)+(val218*val66)+(val222*val67)+(val226*val68)+(val230*val69)+(val234*val70)+(val238*val71)+(val242*val72)+(val246*val73)+(val250*val74)+(val254*val75)+(val258*val76)+(val262*val77)+(val266*val78)+(val270*val79))-val4)));
  data0[(alu12+4098)] = ((1/(exp2((alu21*-1.4426950408889634f))+1.0f))*alu21);
  var alu23 = (val11+(alu9*val9*(((val146*val80)+(val150*val81)+(val154*val82)+(val158*val83)+(val162*val84)+(val166*val85)+(val170*val86)+(val174*val87)+(val178*val88)+(val182*val89)+(val186*val90)+(val190*val91)+(val194*val92)+(val198*val93)+(val202*val94)+(val206*val95)+(val210*val96)+(val214*val97)+(val218*val98)+(val222*val99)+(val226*val100)+(val230*val101)+(val234*val102)+(val238*val103)+(val242*val104)+(val246*val105)+(val250*val106)+(val254*val107)+(val258*val108)+(val262*val109)+(val266*val110)+(val270*val111))-val8)));
  data0[(alu12+8194)] = ((1/(exp2((alu23*-1.4426950408889634f))+1.0f))*alu23);
  var alu25 = (val15+(alu10*val13*(((val146*val112)+(val150*val113)+(val154*val114)+(val158*val115)+(val162*val116)+(val166*val117)+(val170*val118)+(val174*val119)+(val178*val120)+(val182*val121)+(val186*val122)+(val190*val123)+(val194*val124)+(val198*val125)+(val202*val126)+(val206*val127)+(val210*val128)+(val214*val129)+(val218*val130)+(val222*val131)+(val226*val132)+(val230*val133)+(val234*val134)+(val238*val135)+(val242*val136)+(val246*val137)+(val250*val138)+(val254*val139)+(val258*val140)+(val262*val141)+(val266*val142)+(val270*val143))-val12)));
  data0[(alu12+12290)] = ((1/(exp2((alu25*-1.4426950408889634f))+1.0f))*alu25);
  var alu27 = (val3+(alu11*val1*(((val146*val16)+(val150*val17)+(val154*val18)+(val158*val19)+(val162*val20)+(val166*val21)+(val170*val22)+(val174*val23)+(val178*val24)+(val182*val25)+(val186*val26)+(val190*val27)+(val194*val28)+(val198*val29)+(val202*val30)+(val206*val31)+(val210*val32)+(val214*val33)+(val218*val34)+(val222*val35)+(val226*val36)+(val230*val37)+(val234*val38)+(val238*val39)+(val242*val40)+(val246*val41)+(val250*val42)+(val254*val43)+(val258*val44)+(val262*val45)+(val266*val46)+(val270*val47))-val0)));
  data0[(alu12+2)] = ((1/(exp2((alu27*-1.4426950408889634f))+1.0f))*alu27);
  var alu29 = (val7+(alu8*val5*(((val147*val48)+(val151*val49)+(val155*val50)+(val159*val51)+(val163*val52)+(val167*val53)+(val171*val54)+(val175*val55)+(val179*val56)+(val183*val57)+(val187*val58)+(val191*val59)+(val195*val60)+(val199*val61)+(val203*val62)+(val207*val63)+(val211*val64)+(val215*val65)+(val219*val66)+(val223*val67)+(val227*val68)+(val231*val69)+(val235*val70)+(val239*val71)+(val243*val72)+(val247*val73)+(val251*val74)+(val255*val75)+(val259*val76)+(val263*val77)+(val267*val78)+(val271*val79))-val4)));
  data0[(alu12+4099)] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  var alu31 = (val11+(alu9*val9*(((val147*val80)+(val151*val81)+(val155*val82)+(val159*val83)+(val163*val84)+(val167*val85)+(val171*val86)+(val175*val87)+(val179*val88)+(val183*val89)+(val187*val90)+(val191*val91)+(val195*val92)+(val199*val93)+(val203*val94)+(val207*val95)+(val211*val96)+(val215*val97)+(val219*val98)+(val223*val99)+(val227*val100)+(val231*val101)+(val235*val102)+(val239*val103)+(val243*val104)+(val247*val105)+(val251*val106)+(val255*val107)+(val259*val108)+(val263*val109)+(val267*val110)+(val271*val111))-val8)));
  data0[(alu12+8195)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val15+(alu10*val13*(((val147*val112)+(val151*val113)+(val155*val114)+(val159*val115)+(val163*val116)+(val167*val117)+(val171*val118)+(val175*val119)+(val179*val120)+(val183*val121)+(val187*val122)+(val191*val123)+(val195*val124)+(val199*val125)+(val203*val126)+(val207*val127)+(val211*val128)+(val215*val129)+(val219*val130)+(val223*val131)+(val227*val132)+(val231*val133)+(val235*val134)+(val239*val135)+(val243*val136)+(val247*val137)+(val251*val138)+(val255*val139)+(val259*val140)+(val263*val141)+(val267*val142)+(val271*val143))-val12)));
  data0[(alu12+12291)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val3+(alu11*val1*(((val147*val16)+(val151*val17)+(val155*val18)+(val159*val19)+(val163*val20)+(val167*val21)+(val171*val22)+(val175*val23)+(val179*val24)+(val183*val25)+(val187*val26)+(val191*val27)+(val195*val28)+(val199*val29)+(val203*val30)+(val207*val31)+(val211*val32)+(val215*val33)+(val219*val34)+(val223*val35)+(val227*val36)+(val231*val37)+(val235*val38)+(val239*val39)+(val243*val40)+(val247*val41)+(val251*val42)+(val255*val43)+(val259*val44)+(val263*val45)+(val267*val46)+(val271*val47))-val0)));
  data0[(alu12+3)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val3+(alu11*val1*(((val148*val17)+(val144*val16)+(val152*val18)+(val156*val19)+(val160*val20)+(val164*val21)+(val168*val22)+(val172*val23)+(val176*val24)+(val180*val25)+(val184*val26)+(val188*val27)+(val192*val28)+(val196*val29)+(val200*val30)+(val204*val31)+(val208*val32)+(val212*val33)+(val216*val34)+(val220*val35)+(val224*val36)+(val228*val37)+(val232*val38)+(val236*val39)+(val240*val40)+(val244*val41)+(val248*val42)+(val252*val43)+(val256*val44)+(val260*val45)+(val264*val46)+(val268*val47))-val0)));
  data0[alu12] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val7+(alu8*val5*(((val148*val49)+(val144*val48)+(val152*val50)+(val156*val51)+(val160*val52)+(val164*val53)+(val168*val54)+(val172*val55)+(val176*val56)+(val180*val57)+(val184*val58)+(val188*val59)+(val192*val60)+(val196*val61)+(val200*val62)+(val204*val63)+(val208*val64)+(val212*val65)+(val216*val66)+(val220*val67)+(val224*val68)+(val228*val69)+(val232*val70)+(val236*val71)+(val240*val72)+(val244*val73)+(val248*val74)+(val252*val75)+(val256*val76)+(val260*val77)+(val264*val78)+(val268*val79))-val4)));
  data0[(alu12+4096)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val11+(alu9*val9*(((val148*val81)+(val144*val80)+(val152*val82)+(val156*val83)+(val160*val84)+(val164*val85)+(val168*val86)+(val172*val87)+(val176*val88)+(val180*val89)+(val184*val90)+(val188*val91)+(val192*val92)+(val196*val93)+(val200*val94)+(val204*val95)+(val208*val96)+(val212*val97)+(val216*val98)+(val220*val99)+(val224*val100)+(val228*val101)+(val232*val102)+(val236*val103)+(val240*val104)+(val244*val105)+(val248*val106)+(val252*val107)+(val256*val108)+(val260*val109)+(val264*val110)+(val268*val111))-val8)));
  data0[(alu12+8192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val15+(alu10*val13*(((val148*val113)+(val144*val112)+(val152*val114)+(val156*val115)+(val160*val116)+(val164*val117)+(val168*val118)+(val172*val119)+(val176*val120)+(val180*val121)+(val184*val122)+(val188*val123)+(val192*val124)+(val196*val125)+(val200*val126)+(val204*val127)+(val208*val128)+(val212*val129)+(val216*val130)+(val220*val131)+(val224*val132)+(val228*val133)+(val232*val134)+(val236*val135)+(val240*val136)+(val244*val137)+(val248*val138)+(val252*val139)+(val256*val140)+(val260*val141)+(val264*val142)+(val268*val143))-val12)));
  data0[(alu12+12288)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
}`;

const r_4_8_8_16_16_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<6);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<3))<63);
  var alu6 = (lidx1<15);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu7 = ((gidx1*576)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+144)];
    var val10 = data2[(alu7+145)];
    var val11 = data2[(alu7+146)];
    var val12 = data2[(alu7+147)];
    var val13 = data2[(alu7+148)];
    var val14 = data2[(alu7+149)];
    var val15 = data2[(alu7+150)];
    var val16 = data2[(alu7+151)];
    var val17 = data2[(alu7+152)];
    var val18 = data2[(alu7+288)];
    var val19 = data2[(alu7+289)];
    var val20 = data2[(alu7+290)];
    var val21 = data2[(alu7+291)];
    var val22 = data2[(alu7+292)];
    var val23 = data2[(alu7+293)];
    var val24 = data2[(alu7+294)];
    var val25 = data2[(alu7+295)];
    var val26 = data2[(alu7+296)];
    var val27 = data2[(alu7+432)];
    var val28 = data2[(alu7+433)];
    var val29 = data2[(alu7+434)];
    var val30 = data2[(alu7+435)];
    var val31 = data2[(alu7+436)];
    var val32 = data2[(alu7+437)];
    var val33 = data2[(alu7+438)];
    var val34 = data2[(alu7+439)];
    var val35 = data2[(alu7+440)];
    var alu8 = (alu0+alu1+(ridx0<<12)+alu2);
    var val36 = select(0.0f, data1[(alu8+65471)], (alu3&alu4));
    var val37 = select(0.0f, data1[(alu8+65472)], alu4);
    var val38 = select(0.0f, data1[(alu8+65473)], alu4);
    var val39 = select(0.0f, data1[(alu8+65474)], alu4);
    var val40 = select(0.0f, data1[(alu8+65475)], alu4);
    var val41 = select(0.0f, data1[(alu8+65476)], (alu6&alu4));
    var val42 = select(0.0f, data1[(alu8+65535)], alu3);
    var val43 = data1[(alu8+65536)];
    var val44 = data1[(alu8+65537)];
    var val45 = data1[(alu8+65538)];
    var val46 = data1[(alu8+65539)];
    var val47 = select(0.0f, data1[(alu8+65540)], alu6);
    var val48 = select(0.0f, data1[(alu8+65599)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+65600)], alu5);
    var val50 = select(0.0f, data1[(alu8+65601)], alu5);
    var val51 = select(0.0f, data1[(alu8+65602)], alu5);
    var val52 = select(0.0f, data1[(alu8+65603)], alu5);
    var val53 = select(0.0f, data1[(alu8+65604)], (alu6&alu5));
    acc0 = (acc0+(val36*val0)+(val42*val3)+(val48*val6)+(val37*val1)+(val43*val4)+(val49*val7)+(val38*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val36*val9)+(val42*val12)+(val48*val15)+(val37*val10)+(val43*val13)+(val49*val16)+(val38*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val36*val18)+(val42*val21)+(val48*val24)+(val37*val19)+(val43*val22)+(val49*val25)+(val38*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val36*val27)+(val42*val30)+(val48*val33)+(val37*val28)+(val43*val31)+(val49*val34)+(val38*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val37*val0)+(val43*val3)+(val49*val6)+(val38*val1)+(val44*val4)+(val50*val7)+(val39*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val37*val9)+(val43*val12)+(val49*val15)+(val38*val10)+(val44*val13)+(val50*val16)+(val39*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val37*val18)+(val43*val21)+(val49*val24)+(val38*val19)+(val44*val22)+(val50*val25)+(val39*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val37*val27)+(val43*val30)+(val49*val33)+(val38*val28)+(val44*val31)+(val50*val34)+(val39*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val38*val0)+(val44*val3)+(val50*val6)+(val39*val1)+(val45*val4)+(val51*val7)+(val40*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val38*val9)+(val44*val12)+(val50*val15)+(val39*val10)+(val45*val13)+(val51*val16)+(val40*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val38*val18)+(val44*val21)+(val50*val24)+(val39*val19)+(val45*val22)+(val51*val25)+(val40*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val38*val27)+(val44*val30)+(val50*val33)+(val39*val28)+(val45*val31)+(val51*val34)+(val40*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val39*val0)+(val45*val3)+(val51*val6)+(val40*val1)+(val46*val4)+(val52*val7)+(val41*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val45*val12)+(val51*val15)+(val40*val10)+(val46*val13)+(val52*val16)+(val41*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val45*val21)+(val51*val24)+(val40*val19)+(val46*val22)+(val52*val25)+(val41*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val45*val30)+(val51*val33)+(val40*val28)+(val46*val31)+(val52*val34)+(val41*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<14)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+4096)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+8192)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+12288)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+4097)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+8193)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+12289)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+4098)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+8194)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+12290)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+4099)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+8195)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+12291)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_4_8_8_16_16_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<6);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<3))<63);
  var alu6 = (lidx1<15);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu7 = ((gidx1*576)+(ridx0*9));
    var val0 = data3[alu7];
    var val1 = data3[(alu7+1)];
    var val2 = data3[(alu7+2)];
    var val3 = data3[(alu7+3)];
    var val4 = data3[(alu7+4)];
    var val5 = data3[(alu7+5)];
    var val6 = data3[(alu7+6)];
    var val7 = data3[(alu7+7)];
    var val8 = data3[(alu7+8)];
    var val9 = data3[(alu7+144)];
    var val10 = data3[(alu7+145)];
    var val11 = data3[(alu7+146)];
    var val12 = data3[(alu7+147)];
    var val13 = data3[(alu7+148)];
    var val14 = data3[(alu7+149)];
    var val15 = data3[(alu7+150)];
    var val16 = data3[(alu7+151)];
    var val17 = data3[(alu7+152)];
    var val18 = data3[(alu7+288)];
    var val19 = data3[(alu7+289)];
    var val20 = data3[(alu7+290)];
    var val21 = data3[(alu7+291)];
    var val22 = data3[(alu7+292)];
    var val23 = data3[(alu7+293)];
    var val24 = data3[(alu7+294)];
    var val25 = data3[(alu7+295)];
    var val26 = data3[(alu7+296)];
    var val27 = data3[(alu7+432)];
    var val28 = data3[(alu7+433)];
    var val29 = data3[(alu7+434)];
    var val30 = data3[(alu7+435)];
    var val31 = data3[(alu7+436)];
    var val32 = data3[(alu7+437)];
    var val33 = data3[(alu7+438)];
    var val34 = data3[(alu7+439)];
    var val35 = data3[(alu7+440)];
    var alu8 = (alu0+alu1+(ridx0<<12)+alu2);
    var val36 = data2[alu8];
    var val37 = select(0.0f, data2[(alu8+-65)], (alu3&alu4));
    var val38 = select(0.0f, data2[(alu8+-64)], alu4);
    var val39 = select(0.0f, data2[(alu8+-63)], alu4);
    var val40 = select(0.0f, data2[(alu8+-62)], alu4);
    var val41 = select(0.0f, data2[(alu8+-61)], alu4);
    var val42 = select(0.0f, data2[(alu8+-60)], (alu6&alu4));
    var val43 = select(0.0f, data2[(alu8+-1)], alu3);
    var val44 = data2[(alu8+1)];
    var val45 = data2[(alu8+2)];
    var val46 = data2[(alu8+3)];
    var val47 = select(0.0f, data2[(alu8+4)], alu6);
    var val48 = select(0.0f, data2[(alu8+63)], (alu5&alu3));
    var val49 = select(0.0f, data2[(alu8+64)], alu5);
    var val50 = select(0.0f, data2[(alu8+65)], alu5);
    var val51 = select(0.0f, data2[(alu8+66)], alu5);
    var val52 = select(0.0f, data2[(alu8+67)], alu5);
    var val53 = select(0.0f, data2[(alu8+68)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data4[alu26];
  var val55 = data5[alu26];
  var val56 = data6[alu26];
  var val57 = data7[alu26];
  var alu27 = (alu26+1);
  var val58 = data4[alu27];
  var val59 = data5[alu27];
  var val60 = data6[alu27];
  var val61 = data7[alu27];
  var alu28 = (alu26+2);
  var val62 = data4[alu28];
  var val63 = data5[alu28];
  var val64 = data6[alu28];
  var val65 = data7[alu28];
  var alu29 = (alu26+3);
  var val66 = data4[alu29];
  var val67 = data5[alu29];
  var val68 = data6[alu29];
  var val69 = data7[alu29];
  var alu30 = (alu0+(gidx1<<14)+alu1+alu2);
  var val70 = data1[(alu30+65536)];
  var val71 = data1[(alu30+65537)];
  var val72 = data1[(alu30+65538)];
  var val73 = data1[(alu30+65539)];
  var val74 = data1[(alu30+69632)];
  var val75 = data1[(alu30+69633)];
  var val76 = data1[(alu30+69634)];
  var val77 = data1[(alu30+69635)];
  var val78 = data1[(alu30+73728)];
  var val79 = data1[(alu30+73729)];
  var val80 = data1[(alu30+73730)];
  var val81 = data1[(alu30+73731)];
  var val82 = data1[(alu30+77824)];
  var val83 = data1[(alu30+77825)];
  var val84 = data1[(alu30+77826)];
  var val85 = data1[(alu30+77827)];
  var alu31 = sqrt((1/(val60+0.001f)));
  var alu32 = sqrt((1/(val64+0.001f)));
  var alu33 = sqrt((1/(val68+0.001f)));
  var alu34 = sqrt((1/(val56+0.001f)));
  var alu35 = (val57+(alu34*val55*(acc0-val54)));
  data0[alu30] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  var alu37 = (val61+(alu31*val59*(acc1-val58)));
  data0[(alu30+4096)] = (val74+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  var alu39 = (val65+(alu32*val63*(acc2-val62)));
  data0[(alu30+8192)] = (val78+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  var alu41 = (val69+(alu33*val67*(acc3-val66)));
  data0[(alu30+12288)] = (val82+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  var alu43 = (val57+(alu34*val55*(acc4-val54)));
  data0[(alu30+1)] = (val71+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  var alu45 = (val61+(alu31*val59*(acc5-val58)));
  data0[(alu30+4097)] = (val75+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  var alu47 = (val65+(alu32*val63*(acc6-val62)));
  data0[(alu30+8193)] = (val79+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  var alu49 = (val69+(alu33*val67*(acc7-val66)));
  data0[(alu30+12289)] = (val83+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  var alu51 = (val57+(alu34*val55*(acc8-val54)));
  data0[(alu30+2)] = (val72+((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51));
  var alu53 = (val61+(alu31*val59*(acc9-val58)));
  data0[(alu30+4098)] = (val76+((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53));
  var alu55 = (val65+(alu32*val63*(acc10-val62)));
  data0[(alu30+8194)] = (val80+((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55));
  var alu57 = (val69+(alu33*val67*(acc11-val66)));
  data0[(alu30+12290)] = (val84+((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57));
  var alu59 = (val57+(alu34*val55*(acc12-val54)));
  data0[(alu30+3)] = (val73+((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59));
  var alu61 = (val61+(alu31*val59*(acc13-val58)));
  data0[(alu30+4099)] = (val77+((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61));
  var alu63 = (val65+(alu32*val63*(acc14-val62)));
  data0[(alu30+8195)] = (val81+((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63));
  var alu65 = (val69+(alu33*val67*(acc15-val66)));
  data0[(alu30+12291)] = (val85+((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65));
}`;

const E_6_64_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 64 */
  var gidx1 = i32(gindex.y); /* 6 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<2);
  var alu1 = (gidx1<4);
  var alu2 = (alu1!=true);
  var alu3 = ((gidx0<<6)+(gidx1<<15)+(lidx0<<12)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu3], alu0);
  var val1 = select(0.0f, data2[(alu3+-131072)], alu2);
  var val2 = select(0.0f, data2[(alu3+-131071)], alu2);
  var val3 = select(0.0f, data2[(alu3+-131070)], alu2);
  var val4 = select(0.0f, data2[(alu3+-131069)], alu2);
  var alu4 = (alu3+1);
  var val5 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu3+2);
  var val6 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu3+3);
  var val7 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu4], alu7);
  var val9 = select(0.0f, data1[alu5], alu7);
  var val10 = select(0.0f, data1[alu6], alu7);
  var val11 = select(0.0f, data1[alu3], alu7);
  data0[alu3] = (val1+val0+val11);
  data0[alu4] = (val2+val5+val8);
  data0[alu5] = (val3+val6+val9);
  data0[alu6] = (val4+val7+val10);
}`;

const r_64_8_16_12_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 64 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 12; ridx0++) {
    var alu2 = ((lidx0*192)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+48)];
    var val5 = data2[(alu2+49)];
    var val6 = data2[(alu2+50)];
    var val7 = data2[(alu2+51)];
    var val8 = data2[(alu2+96)];
    var val9 = data2[(alu2+97)];
    var val10 = data2[(alu2+98)];
    var val11 = data2[(alu2+99)];
    var val12 = data2[(alu2+144)];
    var val13 = data2[(alu2+145)];
    var val14 = data2[(alu2+146)];
    var val15 = data2[(alu2+147)];
    var alu3 = (alu0+alu1+(ridx0<<14));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+4096)];
    var val21 = data1[(alu3+4097)];
    var val22 = data1[(alu3+4098)];
    var val23 = data1[(alu3+4099)];
    var val24 = data1[(alu3+8192)];
    var val25 = data1[(alu3+8193)];
    var val26 = data1[(alu3+8194)];
    var val27 = data1[(alu3+8195)];
    var val28 = data1[(alu3+12288)];
    var val29 = data1[(alu3+12289)];
    var val30 = data1[(alu3+12290)];
    var val31 = data1[(alu3+12291)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = (lidx0<<2);
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(lidx0<<14)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+4096)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+8192)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+12288)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+4097)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+8193)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+12289)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+4098)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+8194)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+12290)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+4099)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+8195)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+12291)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_16_2_16_8_32_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 16 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = (((gidx0+lidx0)<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = ((gidx1*1152)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+288)];
    var val10 = data2[(alu2+289)];
    var val11 = data2[(alu2+290)];
    var val12 = data2[(alu2+291)];
    var val13 = data2[(alu2+292)];
    var val14 = data2[(alu2+293)];
    var val15 = data2[(alu2+294)];
    var val16 = data2[(alu2+295)];
    var val17 = data2[(alu2+296)];
    var val18 = data2[(alu2+576)];
    var val19 = data2[(alu2+577)];
    var val20 = data2[(alu2+578)];
    var val21 = data2[(alu2+579)];
    var val22 = data2[(alu2+580)];
    var val23 = data2[(alu2+581)];
    var val24 = data2[(alu2+582)];
    var val25 = data2[(alu2+583)];
    var val26 = data2[(alu2+584)];
    var val27 = data2[(alu2+864)];
    var val28 = data2[(alu2+865)];
    var val29 = data2[(alu2+866)];
    var val30 = data2[(alu2+867)];
    var val31 = data2[(alu2+868)];
    var val32 = data2[(alu2+869)];
    var val33 = data2[(alu2+870)];
    var val34 = data2[(alu2+871)];
    var val35 = data2[(alu2+872)];
    var alu3 = ((gidx0<<11)+(lidx0<<7)+(ridx0<<12)+(lidx1<<3));
    var val36 = data1[alu3];
    var val37 = select(0.0f, data1[(alu3+-65)], (alu0&alu1));
    var val38 = select(0.0f, data1[(alu3+-64)], alu1);
    var val39 = select(0.0f, data1[(alu3+-63)], alu1);
    var val40 = select(0.0f, data1[(alu3+-62)], alu1);
    var val41 = select(0.0f, data1[(alu3+-61)], alu1);
    var val42 = select(0.0f, data1[(alu3+-60)], alu1);
    var val43 = select(0.0f, data1[(alu3+-59)], alu1);
    var val44 = select(0.0f, data1[(alu3+-58)], alu1);
    var val45 = select(0.0f, data1[(alu3+-57)], alu1);
    var val46 = select(0.0f, data1[(alu3+-1)], alu0);
    var val47 = data1[(alu3+1)];
    var val48 = data1[(alu3+2)];
    var val49 = data1[(alu3+3)];
    var val50 = data1[(alu3+4)];
    var val51 = data1[(alu3+5)];
    var val52 = data1[(alu3+6)];
    var val53 = data1[(alu3+7)];
    var val54 = select(0.0f, data1[(alu3+63)], alu0);
    var val55 = data1[(alu3+64)];
    var val56 = data1[(alu3+65)];
    var val57 = data1[(alu3+66)];
    var val58 = data1[(alu3+67)];
    var val59 = data1[(alu3+68)];
    var val60 = data1[(alu3+69)];
    var val61 = data1[(alu3+70)];
    var val62 = data1[(alu3+71)];
    acc0 = (acc0+(val37*val0)+(val46*val3)+(val54*val6)+(val38*val1)+(val36*val4)+(val55*val7)+(val39*val2)+(val47*val5)+(val56*val8));
    acc1 = (acc1+(val37*val9)+(val46*val12)+(val54*val15)+(val38*val10)+(val36*val13)+(val55*val16)+(val39*val11)+(val47*val14)+(val56*val17));
    acc2 = (acc2+(val37*val18)+(val46*val21)+(val54*val24)+(val38*val19)+(val36*val22)+(val55*val25)+(val39*val20)+(val47*val23)+(val56*val26));
    acc3 = (acc3+(val37*val27)+(val46*val30)+(val54*val33)+(val38*val28)+(val36*val31)+(val55*val34)+(val39*val29)+(val47*val32)+(val56*val35));
    acc4 = (acc4+(val39*val0)+(val47*val3)+(val56*val6)+(val40*val1)+(val48*val4)+(val57*val7)+(val41*val2)+(val49*val5)+(val58*val8));
    acc5 = (acc5+(val39*val9)+(val47*val12)+(val56*val15)+(val40*val10)+(val48*val13)+(val57*val16)+(val41*val11)+(val49*val14)+(val58*val17));
    acc6 = (acc6+(val39*val18)+(val47*val21)+(val56*val24)+(val40*val19)+(val48*val22)+(val57*val25)+(val41*val20)+(val49*val23)+(val58*val26));
    acc7 = (acc7+(val39*val27)+(val47*val30)+(val56*val33)+(val40*val28)+(val48*val31)+(val57*val34)+(val41*val29)+(val49*val32)+(val58*val35));
    acc8 = (acc8+(val41*val0)+(val49*val3)+(val58*val6)+(val42*val1)+(val50*val4)+(val59*val7)+(val43*val2)+(val51*val5)+(val60*val8));
    acc9 = (acc9+(val41*val9)+(val49*val12)+(val58*val15)+(val42*val10)+(val50*val13)+(val59*val16)+(val43*val11)+(val51*val14)+(val60*val17));
    acc10 = (acc10+(val41*val18)+(val49*val21)+(val58*val24)+(val42*val19)+(val50*val22)+(val59*val25)+(val43*val20)+(val51*val23)+(val60*val26));
    acc11 = (acc11+(val41*val27)+(val49*val30)+(val58*val33)+(val42*val28)+(val50*val31)+(val59*val34)+(val43*val29)+(val51*val32)+(val60*val35));
    acc12 = (acc12+(val43*val0)+(val51*val3)+(val60*val6)+(val44*val1)+(val52*val4)+(val61*val7)+(val45*val2)+(val53*val5)+(val62*val8));
    acc13 = (acc13+(val43*val9)+(val51*val12)+(val60*val15)+(val44*val10)+(val52*val13)+(val61*val16)+(val45*val11)+(val53*val14)+(val62*val17));
    acc14 = (acc14+(val43*val18)+(val51*val21)+(val60*val24)+(val44*val19)+(val52*val22)+(val61*val25)+(val45*val20)+(val53*val23)+(val62*val26));
    acc15 = (acc15+(val43*val27)+(val51*val30)+(val60*val33)+(val44*val28)+(val52*val31)+(val61*val34)+(val45*val29)+(val53*val32)+(val62*val35));
  }
  var alu21 = (gidx1<<2);
  var val63 = data3[alu21];
  var val64 = data4[alu21];
  var val65 = data5[alu21];
  var val66 = data6[alu21];
  var alu22 = (alu21+1);
  var val67 = data3[alu22];
  var val68 = data4[alu22];
  var val69 = data5[alu22];
  var val70 = data6[alu22];
  var alu23 = (alu21+2);
  var val71 = data3[alu23];
  var val72 = data4[alu23];
  var val73 = data5[alu23];
  var val74 = data6[alu23];
  var alu24 = (alu21+3);
  var val75 = data3[alu24];
  var val76 = data4[alu24];
  var val77 = data5[alu24];
  var val78 = data6[alu24];
  var alu25 = sqrt((1/(val69+0.001f)));
  var alu26 = sqrt((1/(val73+0.001f)));
  var alu27 = sqrt((1/(val77+0.001f)));
  var alu28 = sqrt((1/(val65+0.001f)));
  var alu29 = ((gidx0<<9)+(gidx1<<12)+(lidx0<<5)+(lidx1<<2));
  var alu30 = (val66+(alu28*val64*(acc0-val63)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val70+(alu25*val68*(acc1-val67)));
  data0[(alu29+1024)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val74+(alu26*val72*(acc2-val71)));
  data0[(alu29+2048)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val78+(alu27*val76*(acc3-val75)));
  data0[(alu29+3072)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val66+(alu28*val64*(acc4-val63)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val70+(alu25*val68*(acc5-val67)));
  data0[(alu29+1025)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val74+(alu26*val72*(acc6-val71)));
  data0[(alu29+2049)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val78+(alu27*val76*(acc7-val75)));
  data0[(alu29+3073)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val66+(alu28*val64*(acc8-val63)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val70+(alu25*val68*(acc9-val67)));
  data0[(alu29+1026)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val74+(alu26*val72*(acc10-val71)));
  data0[(alu29+2050)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val78+(alu27*val76*(acc11-val75)));
  data0[(alu29+3074)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val66+(alu28*val64*(acc12-val63)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val70+(alu25*val68*(acc13-val67)));
  data0[(alu29+1027)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val74+(alu26*val72*(acc14-val71)));
  data0[(alu29+2051)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val78+(alu27*val76*(acc15-val75)));
  data0[(alu29+3075)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_2_16_8_16_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+64)];
    var val5 = data2[(alu2+65)];
    var val6 = data2[(alu2+66)];
    var val7 = data2[(alu2+67)];
    var val8 = data2[(alu2+128)];
    var val9 = data2[(alu2+129)];
    var val10 = data2[(alu2+130)];
    var val11 = data2[(alu2+131)];
    var val12 = data2[(alu2+192)];
    var val13 = data2[(alu2+193)];
    var val14 = data2[(alu2+194)];
    var val15 = data2[(alu2+195)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<15)+(lidx0<<12)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+1024)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+2048)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+3072)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+1025)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+2049)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+3073)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+1026)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+2050)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+3074)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+1027)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+2051)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+3075)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_8_2_16_8_32_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 8 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu7 = ((gidx1*1152)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+288)];
    var val10 = data2[(alu7+289)];
    var val11 = data2[(alu7+290)];
    var val12 = data2[(alu7+291)];
    var val13 = data2[(alu7+292)];
    var val14 = data2[(alu7+293)];
    var val15 = data2[(alu7+294)];
    var val16 = data2[(alu7+295)];
    var val17 = data2[(alu7+296)];
    var val18 = data2[(alu7+576)];
    var val19 = data2[(alu7+577)];
    var val20 = data2[(alu7+578)];
    var val21 = data2[(alu7+579)];
    var val22 = data2[(alu7+580)];
    var val23 = data2[(alu7+581)];
    var val24 = data2[(alu7+582)];
    var val25 = data2[(alu7+583)];
    var val26 = data2[(alu7+584)];
    var val27 = data2[(alu7+864)];
    var val28 = data2[(alu7+865)];
    var val29 = data2[(alu7+866)];
    var val30 = data2[(alu7+867)];
    var val31 = data2[(alu7+868)];
    var val32 = data2[(alu7+869)];
    var val33 = data2[(alu7+870)];
    var val34 = data2[(alu7+871)];
    var val35 = data2[(alu7+872)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = select(0.0f, data1[(alu8+32735)], (alu3&alu4));
    var val37 = select(0.0f, data1[(alu8+32736)], alu4);
    var val38 = select(0.0f, data1[(alu8+32737)], alu4);
    var val39 = select(0.0f, data1[(alu8+32738)], alu4);
    var val40 = select(0.0f, data1[(alu8+32739)], alu4);
    var val41 = select(0.0f, data1[(alu8+32740)], (alu6&alu4));
    var val42 = select(0.0f, data1[(alu8+32767)], alu3);
    var val43 = data1[(alu8+32768)];
    var val44 = data1[(alu8+32769)];
    var val45 = data1[(alu8+32770)];
    var val46 = data1[(alu8+32771)];
    var val47 = select(0.0f, data1[(alu8+32772)], alu6);
    var val48 = select(0.0f, data1[(alu8+32799)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+32800)], alu5);
    var val50 = select(0.0f, data1[(alu8+32801)], alu5);
    var val51 = select(0.0f, data1[(alu8+32802)], alu5);
    var val52 = select(0.0f, data1[(alu8+32803)], alu5);
    var val53 = select(0.0f, data1[(alu8+32804)], (alu6&alu5));
    acc0 = (acc0+(val36*val0)+(val42*val3)+(val48*val6)+(val37*val1)+(val43*val4)+(val49*val7)+(val38*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val36*val9)+(val42*val12)+(val48*val15)+(val37*val10)+(val43*val13)+(val49*val16)+(val38*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val36*val18)+(val42*val21)+(val48*val24)+(val37*val19)+(val43*val22)+(val49*val25)+(val38*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val36*val27)+(val42*val30)+(val48*val33)+(val37*val28)+(val43*val31)+(val49*val34)+(val38*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val37*val0)+(val43*val3)+(val49*val6)+(val38*val1)+(val44*val4)+(val50*val7)+(val39*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val37*val9)+(val43*val12)+(val49*val15)+(val38*val10)+(val44*val13)+(val50*val16)+(val39*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val37*val18)+(val43*val21)+(val49*val24)+(val38*val19)+(val44*val22)+(val50*val25)+(val39*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val37*val27)+(val43*val30)+(val49*val33)+(val38*val28)+(val44*val31)+(val50*val34)+(val39*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val38*val0)+(val44*val3)+(val50*val6)+(val39*val1)+(val45*val4)+(val51*val7)+(val40*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val38*val9)+(val44*val12)+(val50*val15)+(val39*val10)+(val45*val13)+(val51*val16)+(val40*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val38*val18)+(val44*val21)+(val50*val24)+(val39*val19)+(val45*val22)+(val51*val25)+(val40*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val38*val27)+(val44*val30)+(val50*val33)+(val39*val28)+(val45*val31)+(val51*val34)+(val40*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val39*val0)+(val45*val3)+(val51*val6)+(val40*val1)+(val46*val4)+(val52*val7)+(val41*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val45*val12)+(val51*val15)+(val40*val10)+(val46*val13)+(val52*val16)+(val41*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val45*val21)+(val51*val24)+(val40*val19)+(val46*val22)+(val52*val25)+(val41*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val45*val30)+(val51*val33)+(val40*val28)+(val46*val31)+(val52*val34)+(val41*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<12)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+1024)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+2048)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+3072)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+1025)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+2049)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+3073)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+1026)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+2050)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+3074)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+1027)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+2051)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+3075)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_8_2_16_8_32_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 8 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu7 = ((gidx1*1152)+(ridx0*9));
    var val0 = data3[alu7];
    var val1 = data3[(alu7+1)];
    var val2 = data3[(alu7+2)];
    var val3 = data3[(alu7+3)];
    var val4 = data3[(alu7+4)];
    var val5 = data3[(alu7+5)];
    var val6 = data3[(alu7+6)];
    var val7 = data3[(alu7+7)];
    var val8 = data3[(alu7+8)];
    var val9 = data3[(alu7+288)];
    var val10 = data3[(alu7+289)];
    var val11 = data3[(alu7+290)];
    var val12 = data3[(alu7+291)];
    var val13 = data3[(alu7+292)];
    var val14 = data3[(alu7+293)];
    var val15 = data3[(alu7+294)];
    var val16 = data3[(alu7+295)];
    var val17 = data3[(alu7+296)];
    var val18 = data3[(alu7+576)];
    var val19 = data3[(alu7+577)];
    var val20 = data3[(alu7+578)];
    var val21 = data3[(alu7+579)];
    var val22 = data3[(alu7+580)];
    var val23 = data3[(alu7+581)];
    var val24 = data3[(alu7+582)];
    var val25 = data3[(alu7+583)];
    var val26 = data3[(alu7+584)];
    var val27 = data3[(alu7+864)];
    var val28 = data3[(alu7+865)];
    var val29 = data3[(alu7+866)];
    var val30 = data3[(alu7+867)];
    var val31 = data3[(alu7+868)];
    var val32 = data3[(alu7+869)];
    var val33 = data3[(alu7+870)];
    var val34 = data3[(alu7+871)];
    var val35 = data3[(alu7+872)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data2[alu8];
    var val37 = select(0.0f, data2[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data2[(alu8+-32)], alu4);
    var val39 = select(0.0f, data2[(alu8+-31)], alu4);
    var val40 = select(0.0f, data2[(alu8+-30)], alu4);
    var val41 = select(0.0f, data2[(alu8+-29)], alu4);
    var val42 = select(0.0f, data2[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data2[(alu8+-1)], alu3);
    var val44 = data2[(alu8+1)];
    var val45 = data2[(alu8+2)];
    var val46 = data2[(alu8+3)];
    var val47 = select(0.0f, data2[(alu8+4)], alu6);
    var val48 = select(0.0f, data2[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data2[(alu8+32)], alu5);
    var val50 = select(0.0f, data2[(alu8+33)], alu5);
    var val51 = select(0.0f, data2[(alu8+34)], alu5);
    var val52 = select(0.0f, data2[(alu8+35)], alu5);
    var val53 = select(0.0f, data2[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data4[alu26];
  var val55 = data5[alu26];
  var val56 = data6[alu26];
  var val57 = data7[alu26];
  var alu27 = (alu26+1);
  var val58 = data4[alu27];
  var val59 = data5[alu27];
  var val60 = data6[alu27];
  var val61 = data7[alu27];
  var alu28 = (alu26+2);
  var val62 = data4[alu28];
  var val63 = data5[alu28];
  var val64 = data6[alu28];
  var val65 = data7[alu28];
  var alu29 = (alu26+3);
  var val66 = data4[alu29];
  var val67 = data5[alu29];
  var val68 = data6[alu29];
  var val69 = data7[alu29];
  var alu30 = (alu0+(gidx1<<12)+alu1+alu2);
  var val70 = data1[(alu30+32768)];
  var val71 = data1[(alu30+32769)];
  var val72 = data1[(alu30+32770)];
  var val73 = data1[(alu30+32771)];
  var val74 = data1[(alu30+33792)];
  var val75 = data1[(alu30+33793)];
  var val76 = data1[(alu30+33794)];
  var val77 = data1[(alu30+33795)];
  var val78 = data1[(alu30+34816)];
  var val79 = data1[(alu30+34817)];
  var val80 = data1[(alu30+34818)];
  var val81 = data1[(alu30+34819)];
  var val82 = data1[(alu30+35840)];
  var val83 = data1[(alu30+35841)];
  var val84 = data1[(alu30+35842)];
  var val85 = data1[(alu30+35843)];
  var alu31 = sqrt((1/(val60+0.001f)));
  var alu32 = sqrt((1/(val64+0.001f)));
  var alu33 = sqrt((1/(val68+0.001f)));
  var alu34 = sqrt((1/(val56+0.001f)));
  var alu35 = (val57+(alu34*val55*(acc0-val54)));
  data0[alu30] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  var alu37 = (val61+(alu31*val59*(acc1-val58)));
  data0[(alu30+1024)] = (val74+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  var alu39 = (val65+(alu32*val63*(acc2-val62)));
  data0[(alu30+2048)] = (val78+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  var alu41 = (val69+(alu33*val67*(acc3-val66)));
  data0[(alu30+3072)] = (val82+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  var alu43 = (val57+(alu34*val55*(acc4-val54)));
  data0[(alu30+1)] = (val71+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  var alu45 = (val61+(alu31*val59*(acc5-val58)));
  data0[(alu30+1025)] = (val75+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  var alu47 = (val65+(alu32*val63*(acc6-val62)));
  data0[(alu30+2049)] = (val79+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  var alu49 = (val69+(alu33*val67*(acc7-val66)));
  data0[(alu30+3073)] = (val83+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  var alu51 = (val57+(alu34*val55*(acc8-val54)));
  data0[(alu30+2)] = (val72+((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51));
  var alu53 = (val61+(alu31*val59*(acc9-val58)));
  data0[(alu30+1026)] = (val76+((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53));
  var alu55 = (val65+(alu32*val63*(acc10-val62)));
  data0[(alu30+2050)] = (val80+((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55));
  var alu57 = (val69+(alu33*val67*(acc11-val66)));
  data0[(alu30+3074)] = (val84+((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57));
  var alu59 = (val57+(alu34*val55*(acc12-val54)));
  data0[(alu30+3)] = (val73+((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59));
  var alu61 = (val61+(alu31*val59*(acc13-val58)));
  data0[(alu30+1027)] = (val77+((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61));
  var alu63 = (val65+(alu32*val63*(acc14-val62)));
  data0[(alu30+2051)] = (val81+((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63));
  var alu65 = (val69+(alu33*val67*(acc15-val66)));
  data0[(alu30+3075)] = (val85+((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65));
}`;

const r_8_2_16_8_32_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 8 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu7 = ((gidx1*1152)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+288)];
    var val10 = data2[(alu7+289)];
    var val11 = data2[(alu7+290)];
    var val12 = data2[(alu7+291)];
    var val13 = data2[(alu7+292)];
    var val14 = data2[(alu7+293)];
    var val15 = data2[(alu7+294)];
    var val16 = data2[(alu7+295)];
    var val17 = data2[(alu7+296)];
    var val18 = data2[(alu7+576)];
    var val19 = data2[(alu7+577)];
    var val20 = data2[(alu7+578)];
    var val21 = data2[(alu7+579)];
    var val22 = data2[(alu7+580)];
    var val23 = data2[(alu7+581)];
    var val24 = data2[(alu7+582)];
    var val25 = data2[(alu7+583)];
    var val26 = data2[(alu7+584)];
    var val27 = data2[(alu7+864)];
    var val28 = data2[(alu7+865)];
    var val29 = data2[(alu7+866)];
    var val30 = data2[(alu7+867)];
    var val31 = data2[(alu7+868)];
    var val32 = data2[(alu7+869)];
    var val33 = data2[(alu7+870)];
    var val34 = data2[(alu7+871)];
    var val35 = data2[(alu7+872)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data1[(alu8+-32)], alu4);
    var val39 = select(0.0f, data1[(alu8+-31)], alu4);
    var val40 = select(0.0f, data1[(alu8+-30)], alu4);
    var val41 = select(0.0f, data1[(alu8+-29)], alu4);
    var val42 = select(0.0f, data1[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data1[(alu8+-1)], alu3);
    var val44 = data1[(alu8+1)];
    var val45 = data1[(alu8+2)];
    var val46 = data1[(alu8+3)];
    var val47 = select(0.0f, data1[(alu8+4)], alu6);
    var val48 = select(0.0f, data1[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+32)], alu5);
    var val50 = select(0.0f, data1[(alu8+33)], alu5);
    var val51 = select(0.0f, data1[(alu8+34)], alu5);
    var val52 = select(0.0f, data1[(alu8+35)], alu5);
    var val53 = select(0.0f, data1[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<12)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+1024)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+2048)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+3072)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+1025)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+2049)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+3073)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+1026)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+2050)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+3074)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+1027)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+2051)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+3075)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_8_2_16_8_32_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 8 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu7 = ((gidx1*1152)+(ridx0*9));
    var val0 = data3[alu7];
    var val1 = data3[(alu7+1)];
    var val2 = data3[(alu7+2)];
    var val3 = data3[(alu7+3)];
    var val4 = data3[(alu7+4)];
    var val5 = data3[(alu7+5)];
    var val6 = data3[(alu7+6)];
    var val7 = data3[(alu7+7)];
    var val8 = data3[(alu7+8)];
    var val9 = data3[(alu7+288)];
    var val10 = data3[(alu7+289)];
    var val11 = data3[(alu7+290)];
    var val12 = data3[(alu7+291)];
    var val13 = data3[(alu7+292)];
    var val14 = data3[(alu7+293)];
    var val15 = data3[(alu7+294)];
    var val16 = data3[(alu7+295)];
    var val17 = data3[(alu7+296)];
    var val18 = data3[(alu7+576)];
    var val19 = data3[(alu7+577)];
    var val20 = data3[(alu7+578)];
    var val21 = data3[(alu7+579)];
    var val22 = data3[(alu7+580)];
    var val23 = data3[(alu7+581)];
    var val24 = data3[(alu7+582)];
    var val25 = data3[(alu7+583)];
    var val26 = data3[(alu7+584)];
    var val27 = data3[(alu7+864)];
    var val28 = data3[(alu7+865)];
    var val29 = data3[(alu7+866)];
    var val30 = data3[(alu7+867)];
    var val31 = data3[(alu7+868)];
    var val32 = data3[(alu7+869)];
    var val33 = data3[(alu7+870)];
    var val34 = data3[(alu7+871)];
    var val35 = data3[(alu7+872)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data2[alu8];
    var val37 = select(0.0f, data2[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data2[(alu8+-32)], alu4);
    var val39 = select(0.0f, data2[(alu8+-31)], alu4);
    var val40 = select(0.0f, data2[(alu8+-30)], alu4);
    var val41 = select(0.0f, data2[(alu8+-29)], alu4);
    var val42 = select(0.0f, data2[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data2[(alu8+-1)], alu3);
    var val44 = data2[(alu8+1)];
    var val45 = data2[(alu8+2)];
    var val46 = data2[(alu8+3)];
    var val47 = select(0.0f, data2[(alu8+4)], alu6);
    var val48 = select(0.0f, data2[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data2[(alu8+32)], alu5);
    var val50 = select(0.0f, data2[(alu8+33)], alu5);
    var val51 = select(0.0f, data2[(alu8+34)], alu5);
    var val52 = select(0.0f, data2[(alu8+35)], alu5);
    var val53 = select(0.0f, data2[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data4[alu26];
  var val55 = data5[alu26];
  var val56 = data6[alu26];
  var val57 = data7[alu26];
  var alu27 = (alu26+1);
  var val58 = data4[alu27];
  var val59 = data5[alu27];
  var val60 = data6[alu27];
  var val61 = data7[alu27];
  var alu28 = (alu26+2);
  var val62 = data4[alu28];
  var val63 = data5[alu28];
  var val64 = data6[alu28];
  var val65 = data7[alu28];
  var alu29 = (alu26+3);
  var val66 = data4[alu29];
  var val67 = data5[alu29];
  var val68 = data6[alu29];
  var val69 = data7[alu29];
  var alu30 = (alu0+(gidx1<<12)+alu1+alu2);
  var val70 = data1[alu30];
  var alu31 = (alu30+1);
  var val71 = data1[alu31];
  var alu32 = (alu30+2);
  var val72 = data1[alu32];
  var alu33 = (alu30+3);
  var val73 = data1[alu33];
  var alu34 = (alu30+1024);
  var val74 = data1[alu34];
  var alu35 = (alu30+1025);
  var val75 = data1[alu35];
  var alu36 = (alu30+1026);
  var val76 = data1[alu36];
  var alu37 = (alu30+1027);
  var val77 = data1[alu37];
  var alu38 = (alu30+2048);
  var val78 = data1[alu38];
  var alu39 = (alu30+2049);
  var val79 = data1[alu39];
  var alu40 = (alu30+2050);
  var val80 = data1[alu40];
  var alu41 = (alu30+2051);
  var val81 = data1[alu41];
  var alu42 = (alu30+3072);
  var val82 = data1[alu42];
  var alu43 = (alu30+3073);
  var val83 = data1[alu43];
  var alu44 = (alu30+3074);
  var val84 = data1[alu44];
  var alu45 = (alu30+3075);
  var val85 = data1[alu45];
  var alu46 = sqrt((1/(val60+0.001f)));
  var alu47 = sqrt((1/(val64+0.001f)));
  var alu48 = sqrt((1/(val68+0.001f)));
  var alu49 = sqrt((1/(val56+0.001f)));
  var alu50 = (val57+(alu49*val55*(acc0-val54)));
  data0[alu30] = (val70+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
  var alu52 = (val61+(alu46*val59*(acc1-val58)));
  data0[alu34] = (val74+((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52));
  var alu54 = (val65+(alu47*val63*(acc2-val62)));
  data0[alu38] = (val78+((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54));
  var alu56 = (val69+(alu48*val67*(acc3-val66)));
  data0[alu42] = (val82+((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56));
  var alu58 = (val57+(alu49*val55*(acc4-val54)));
  data0[alu31] = (val71+((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58));
  var alu60 = (val61+(alu46*val59*(acc5-val58)));
  data0[alu35] = (val75+((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60));
  var alu62 = (val65+(alu47*val63*(acc6-val62)));
  data0[alu39] = (val79+((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62));
  var alu64 = (val69+(alu48*val67*(acc7-val66)));
  data0[alu43] = (val83+((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64));
  var alu66 = (val57+(alu49*val55*(acc8-val54)));
  data0[alu32] = (val72+((1/(exp2((alu66*-1.4426950408889634f))+1.0f))*alu66));
  var alu68 = (val61+(alu46*val59*(acc9-val58)));
  data0[alu36] = (val76+((1/(exp2((alu68*-1.4426950408889634f))+1.0f))*alu68));
  var alu70 = (val65+(alu47*val63*(acc10-val62)));
  data0[alu40] = (val80+((1/(exp2((alu70*-1.4426950408889634f))+1.0f))*alu70));
  var alu72 = (val69+(alu48*val67*(acc11-val66)));
  data0[alu44] = (val84+((1/(exp2((alu72*-1.4426950408889634f))+1.0f))*alu72));
  var alu74 = (val57+(alu49*val55*(acc12-val54)));
  data0[alu33] = (val73+((1/(exp2((alu74*-1.4426950408889634f))+1.0f))*alu74));
  var alu76 = (val61+(alu46*val59*(acc13-val58)));
  data0[alu37] = (val77+((1/(exp2((alu76*-1.4426950408889634f))+1.0f))*alu76));
  var alu78 = (val65+(alu47*val63*(acc14-val62)));
  data0[alu41] = (val81+((1/(exp2((alu78*-1.4426950408889634f))+1.0f))*alu78));
  var alu80 = (val69+(alu48*val67*(acc15-val66)));
  data0[alu45] = (val85+((1/(exp2((alu80*-1.4426950408889634f))+1.0f))*alu80));
}`;

const E_16_16_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 16 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<4);
  var alu1 = (gidx1<8);
  var alu2 = (gidx1<12);
  var alu3 = (alu2!=true);
  var alu4 = ((gidx0<<6)+(gidx1<<13)+(lidx0<<10)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu4], alu0);
  var val1 = select(0.0f, data3[(alu4+-98304)], alu3);
  var val2 = select(0.0f, data3[(alu4+-98303)], alu3);
  var val3 = select(0.0f, data3[(alu4+-98302)], alu3);
  var val4 = select(0.0f, data3[(alu4+-98301)], alu3);
  var alu5 = (alu4+1);
  var val5 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu4+2);
  var val6 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu4+3);
  var val7 = select(0.0f, data1[alu7], alu0);
  var alu8 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu5], alu8);
  var val9 = select(0.0f, data1[alu6], alu8);
  var val10 = select(0.0f, data1[alu7], alu8);
  var val11 = select(0.0f, data1[alu4], alu8);
  var alu9 = (alu2&(alu1!=true));
  var val12 = select(0.0f, data2[(alu4+-65536)], alu9);
  var val13 = select(0.0f, data2[(alu4+-65535)], alu9);
  var val14 = select(0.0f, data2[(alu4+-65534)], alu9);
  var val15 = select(0.0f, data2[(alu4+-65533)], alu9);
  data0[alu4] = (val1+val12+val0+val11);
  data0[alu5] = (val2+val13+val5+val8);
  data0[alu6] = (val3+val14+val6+val9);
  data0[alu7] = (val4+val15+val7+val10);
}`;

const r_2_16_8_16_32_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = ((gidx1<<12)+(lidx0<<9)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+128)];
    var val5 = data2[(alu2+129)];
    var val6 = data2[(alu2+130)];
    var val7 = data2[(alu2+131)];
    var val8 = data2[(alu2+256)];
    var val9 = data2[(alu2+257)];
    var val10 = data2[(alu2+258)];
    var val11 = data2[(alu2+259)];
    var val12 = data2[(alu2+384)];
    var val13 = data2[(alu2+385)];
    var val14 = data2[(alu2+386)];
    var val15 = data2[(alu2+387)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<15)+(lidx0<<12)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+1024)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+2048)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+3072)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+1025)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+2049)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+3073)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+1026)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+2050)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+3074)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+1027)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+2051)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+3075)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_16_2_16_4_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = ((lidx2<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+576)];
    var val10 = data2[(alu2+577)];
    var val11 = data2[(alu2+578)];
    var val12 = data2[(alu2+579)];
    var val13 = data2[(alu2+580)];
    var val14 = data2[(alu2+581)];
    var val15 = data2[(alu2+582)];
    var val16 = data2[(alu2+583)];
    var val17 = data2[(alu2+584)];
    var val18 = data2[(alu2+1152)];
    var val19 = data2[(alu2+1153)];
    var val20 = data2[(alu2+1154)];
    var val21 = data2[(alu2+1155)];
    var val22 = data2[(alu2+1156)];
    var val23 = data2[(alu2+1157)];
    var val24 = data2[(alu2+1158)];
    var val25 = data2[(alu2+1159)];
    var val26 = data2[(alu2+1160)];
    var val27 = data2[(alu2+1728)];
    var val28 = data2[(alu2+1729)];
    var val29 = data2[(alu2+1730)];
    var val30 = data2[(alu2+1731)];
    var val31 = data2[(alu2+1732)];
    var val32 = data2[(alu2+1733)];
    var val33 = data2[(alu2+1734)];
    var val34 = data2[(alu2+1735)];
    var val35 = data2[(alu2+1736)];
    var alu3 = ((lidx1<<6)+(ridx0<<10)+(lidx2<<3));
    var val36 = data1[alu3];
    var val37 = select(0.0f, data1[(alu3+-33)], (alu0&alu1));
    var val38 = select(0.0f, data1[(alu3+-32)], alu0);
    var val39 = select(0.0f, data1[(alu3+-31)], alu0);
    var val40 = select(0.0f, data1[(alu3+-30)], alu0);
    var val41 = select(0.0f, data1[(alu3+-29)], alu0);
    var val42 = select(0.0f, data1[(alu3+-28)], alu0);
    var val43 = select(0.0f, data1[(alu3+-27)], alu0);
    var val44 = select(0.0f, data1[(alu3+-26)], alu0);
    var val45 = select(0.0f, data1[(alu3+-25)], alu0);
    var val46 = select(0.0f, data1[(alu3+-1)], alu1);
    var val47 = data1[(alu3+1)];
    var val48 = data1[(alu3+2)];
    var val49 = data1[(alu3+3)];
    var val50 = data1[(alu3+4)];
    var val51 = data1[(alu3+5)];
    var val52 = data1[(alu3+6)];
    var val53 = data1[(alu3+7)];
    var val54 = select(0.0f, data1[(alu3+31)], alu1);
    var val55 = data1[(alu3+32)];
    var val56 = data1[(alu3+33)];
    var val57 = data1[(alu3+34)];
    var val58 = data1[(alu3+35)];
    var val59 = data1[(alu3+36)];
    var val60 = data1[(alu3+37)];
    var val61 = data1[(alu3+38)];
    var val62 = data1[(alu3+39)];
    acc0 = (acc0+(val37*val0)+(val46*val3)+(val54*val6)+(val38*val1)+(val36*val4)+(val55*val7)+(val39*val2)+(val47*val5)+(val56*val8));
    acc1 = (acc1+(val37*val9)+(val46*val12)+(val54*val15)+(val38*val10)+(val36*val13)+(val55*val16)+(val39*val11)+(val47*val14)+(val56*val17));
    acc2 = (acc2+(val37*val18)+(val46*val21)+(val54*val24)+(val38*val19)+(val36*val22)+(val55*val25)+(val39*val20)+(val47*val23)+(val56*val26));
    acc3 = (acc3+(val37*val27)+(val46*val30)+(val54*val33)+(val38*val28)+(val36*val31)+(val55*val34)+(val39*val29)+(val47*val32)+(val56*val35));
    acc4 = (acc4+(val39*val0)+(val47*val3)+(val56*val6)+(val40*val1)+(val48*val4)+(val57*val7)+(val41*val2)+(val49*val5)+(val58*val8));
    acc5 = (acc5+(val39*val9)+(val47*val12)+(val56*val15)+(val40*val10)+(val48*val13)+(val57*val16)+(val41*val11)+(val49*val14)+(val58*val17));
    acc6 = (acc6+(val39*val18)+(val47*val21)+(val56*val24)+(val40*val19)+(val48*val22)+(val57*val25)+(val41*val20)+(val49*val23)+(val58*val26));
    acc7 = (acc7+(val39*val27)+(val47*val30)+(val56*val33)+(val40*val28)+(val48*val31)+(val57*val34)+(val41*val29)+(val49*val32)+(val58*val35));
    acc8 = (acc8+(val41*val0)+(val49*val3)+(val58*val6)+(val42*val1)+(val50*val4)+(val59*val7)+(val43*val2)+(val51*val5)+(val60*val8));
    acc9 = (acc9+(val41*val9)+(val49*val12)+(val58*val15)+(val42*val10)+(val50*val13)+(val59*val16)+(val43*val11)+(val51*val14)+(val60*val17));
    acc10 = (acc10+(val41*val18)+(val49*val21)+(val58*val24)+(val42*val19)+(val50*val22)+(val59*val25)+(val43*val20)+(val51*val23)+(val60*val26));
    acc11 = (acc11+(val41*val27)+(val49*val30)+(val58*val33)+(val42*val28)+(val50*val31)+(val59*val34)+(val43*val29)+(val51*val32)+(val60*val35));
    acc12 = (acc12+(val43*val0)+(val51*val3)+(val60*val6)+(val44*val1)+(val52*val4)+(val61*val7)+(val45*val2)+(val53*val5)+(val62*val8));
    acc13 = (acc13+(val43*val9)+(val51*val12)+(val60*val15)+(val44*val10)+(val52*val13)+(val61*val16)+(val45*val11)+(val53*val14)+(val62*val17));
    acc14 = (acc14+(val43*val18)+(val51*val21)+(val60*val24)+(val44*val19)+(val52*val22)+(val61*val25)+(val45*val20)+(val53*val23)+(val62*val26));
    acc15 = (acc15+(val43*val27)+(val51*val30)+(val60*val33)+(val44*val28)+(val52*val31)+(val61*val34)+(val45*val29)+(val53*val32)+(val62*val35));
  }
  var alu21 = ((gidx0<<3)+(lidx0<<2));
  var val63 = data3[alu21];
  var val64 = data4[alu21];
  var val65 = data5[alu21];
  var val66 = data6[alu21];
  var alu22 = (alu21+1);
  var val67 = data3[alu22];
  var val68 = data4[alu22];
  var val69 = data5[alu22];
  var val70 = data6[alu22];
  var alu23 = (alu21+2);
  var val71 = data3[alu23];
  var val72 = data4[alu23];
  var val73 = data5[alu23];
  var val74 = data6[alu23];
  var alu24 = (alu21+3);
  var val75 = data3[alu24];
  var val76 = data4[alu24];
  var val77 = data5[alu24];
  var val78 = data6[alu24];
  var alu25 = sqrt((1/(val69+0.001f)));
  var alu26 = sqrt((1/(val73+0.001f)));
  var alu27 = sqrt((1/(val77+0.001f)));
  var alu28 = sqrt((1/(val65+0.001f)));
  var alu29 = ((gidx0<<11)+(lidx0<<10)+(lidx1<<4)+(lidx2<<2));
  var alu30 = (val66+(alu28*val64*(acc0-val63)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val70+(alu25*val68*(acc1-val67)));
  data0[(alu29+256)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val74+(alu26*val72*(acc2-val71)));
  data0[(alu29+512)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val78+(alu27*val76*(acc3-val75)));
  data0[(alu29+768)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val66+(alu28*val64*(acc4-val63)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val70+(alu25*val68*(acc5-val67)));
  data0[(alu29+257)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val74+(alu26*val72*(acc6-val71)));
  data0[(alu29+513)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val78+(alu27*val76*(acc7-val75)));
  data0[(alu29+769)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val66+(alu28*val64*(acc8-val63)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val70+(alu25*val68*(acc9-val67)));
  data0[(alu29+258)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val74+(alu26*val72*(acc10-val71)));
  data0[(alu29+514)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val78+(alu27*val76*(acc11-val75)));
  data0[(alu29+770)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val66+(alu28*val64*(acc12-val63)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val70+(alu25*val68*(acc13-val67)));
  data0[(alu29+259)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val74+(alu26*val72*(acc14-val71)));
  data0[(alu29+515)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val78+(alu27*val76*(acc15-val75)));
  data0[(alu29+771)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_4_4_8_16_32_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 32; ridx0++) {
    var alu2 = ((gidx1<<12)+(lidx0<<9)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+128)];
    var val5 = data2[(alu2+129)];
    var val6 = data2[(alu2+130)];
    var val7 = data2[(alu2+131)];
    var val8 = data2[(alu2+256)];
    var val9 = data2[(alu2+257)];
    var val10 = data2[(alu2+258)];
    var val11 = data2[(alu2+259)];
    var val12 = data2[(alu2+384)];
    var val13 = data2[(alu2+385)];
    var val14 = data2[(alu2+386)];
    var val15 = data2[(alu2+387)];
    var alu3 = (alu0+alu1+(ridx0<<10));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+256)];
    var val21 = data1[(alu3+257)];
    var val22 = data1[(alu3+258)];
    var val23 = data1[(alu3+259)];
    var val24 = data1[(alu3+512)];
    var val25 = data1[(alu3+513)];
    var val26 = data1[(alu3+514)];
    var val27 = data1[(alu3+515)];
    var val28 = data1[(alu3+768)];
    var val29 = data1[(alu3+769)];
    var val30 = data1[(alu3+770)];
    var val31 = data1[(alu3+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<13)+(lidx0<<10)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+256)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+512)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+768)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+257)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+513)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+769)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+258)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+514)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+770)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+259)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+515)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+771)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_8_2_16_4_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu6 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+576)];
    var val10 = data2[(alu6+577)];
    var val11 = data2[(alu6+578)];
    var val12 = data2[(alu6+579)];
    var val13 = data2[(alu6+580)];
    var val14 = data2[(alu6+581)];
    var val15 = data2[(alu6+582)];
    var val16 = data2[(alu6+583)];
    var val17 = data2[(alu6+584)];
    var val18 = data2[(alu6+1152)];
    var val19 = data2[(alu6+1153)];
    var val20 = data2[(alu6+1154)];
    var val21 = data2[(alu6+1155)];
    var val22 = data2[(alu6+1156)];
    var val23 = data2[(alu6+1157)];
    var val24 = data2[(alu6+1158)];
    var val25 = data2[(alu6+1159)];
    var val26 = data2[(alu6+1160)];
    var val27 = data2[(alu6+1728)];
    var val28 = data2[(alu6+1729)];
    var val29 = data2[(alu6+1730)];
    var val30 = data2[(alu6+1731)];
    var val31 = data2[(alu6+1732)];
    var val32 = data2[(alu6+1733)];
    var val33 = data2[(alu6+1734)];
    var val34 = data2[(alu6+1735)];
    var val35 = data2[(alu6+1736)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = select(0.0f, data1[(alu7+16367)], (alu2&alu3));
    var val37 = select(0.0f, data1[(alu7+16368)], alu2);
    var val38 = select(0.0f, data1[(alu7+16369)], alu2);
    var val39 = select(0.0f, data1[(alu7+16370)], alu2);
    var val40 = select(0.0f, data1[(alu7+16371)], alu2);
    var val41 = select(0.0f, data1[(alu7+16372)], (alu5&alu2));
    var val42 = select(0.0f, data1[(alu7+16383)], alu3);
    var val43 = data1[(alu7+16384)];
    var val44 = data1[(alu7+16385)];
    var val45 = data1[(alu7+16386)];
    var val46 = data1[(alu7+16387)];
    var val47 = select(0.0f, data1[(alu7+16388)], alu5);
    var val48 = select(0.0f, data1[(alu7+16399)], (alu4&alu3));
    var val49 = select(0.0f, data1[(alu7+16400)], alu4);
    var val50 = select(0.0f, data1[(alu7+16401)], alu4);
    var val51 = select(0.0f, data1[(alu7+16402)], alu4);
    var val52 = select(0.0f, data1[(alu7+16403)], alu4);
    var val53 = select(0.0f, data1[(alu7+16404)], (alu4&alu5));
    acc0 = (acc0+(val36*val0)+(val42*val3)+(val48*val6)+(val37*val1)+(val43*val4)+(val49*val7)+(val38*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val36*val9)+(val42*val12)+(val48*val15)+(val37*val10)+(val43*val13)+(val49*val16)+(val38*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val36*val18)+(val42*val21)+(val48*val24)+(val37*val19)+(val43*val22)+(val49*val25)+(val38*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val36*val27)+(val42*val30)+(val48*val33)+(val37*val28)+(val43*val31)+(val49*val34)+(val38*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val37*val0)+(val43*val3)+(val49*val6)+(val38*val1)+(val44*val4)+(val50*val7)+(val39*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val37*val9)+(val43*val12)+(val49*val15)+(val38*val10)+(val44*val13)+(val50*val16)+(val39*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val37*val18)+(val43*val21)+(val49*val24)+(val38*val19)+(val44*val22)+(val50*val25)+(val39*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val37*val27)+(val43*val30)+(val49*val33)+(val38*val28)+(val44*val31)+(val50*val34)+(val39*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val38*val0)+(val44*val3)+(val50*val6)+(val39*val1)+(val45*val4)+(val51*val7)+(val40*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val38*val9)+(val44*val12)+(val50*val15)+(val39*val10)+(val45*val13)+(val51*val16)+(val40*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val38*val18)+(val44*val21)+(val50*val24)+(val39*val19)+(val45*val22)+(val51*val25)+(val40*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val38*val27)+(val44*val30)+(val50*val33)+(val39*val28)+(val45*val31)+(val51*val34)+(val40*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val39*val0)+(val45*val3)+(val51*val6)+(val40*val1)+(val46*val4)+(val52*val7)+(val41*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val45*val12)+(val51*val15)+(val40*val10)+(val46*val13)+(val52*val16)+(val41*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val45*val21)+(val51*val24)+(val40*val19)+(val46*val22)+(val52*val25)+(val41*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val45*val30)+(val51*val33)+(val40*val28)+(val46*val31)+(val52*val34)+(val41*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data3[alu25];
  var val55 = data4[alu25];
  var val56 = data5[alu25];
  var val57 = data6[alu25];
  var alu26 = (alu25+1);
  var val58 = data3[alu26];
  var val59 = data4[alu26];
  var val60 = data5[alu26];
  var val61 = data6[alu26];
  var alu27 = (alu25+2);
  var val62 = data3[alu27];
  var val63 = data4[alu27];
  var val64 = data5[alu27];
  var val65 = data6[alu27];
  var alu28 = (alu25+3);
  var val66 = data3[alu28];
  var val67 = data4[alu28];
  var val68 = data5[alu28];
  var val69 = data6[alu28];
  var alu29 = sqrt((1/(val60+0.001f)));
  var alu30 = sqrt((1/(val64+0.001f)));
  var alu31 = sqrt((1/(val68+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var alu34 = (val57+(alu32*val55*(acc0-val54)));
  data0[alu33] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val61+(alu29*val59*(acc1-val58)));
  data0[(alu33+256)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val65+(alu30*val63*(acc2-val62)));
  data0[(alu33+512)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val69+(alu31*val67*(acc3-val66)));
  data0[(alu33+768)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val57+(alu32*val55*(acc4-val54)));
  data0[(alu33+1)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val61+(alu29*val59*(acc5-val58)));
  data0[(alu33+257)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val65+(alu30*val63*(acc6-val62)));
  data0[(alu33+513)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val69+(alu31*val67*(acc7-val66)));
  data0[(alu33+769)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val57+(alu32*val55*(acc8-val54)));
  data0[(alu33+2)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val61+(alu29*val59*(acc9-val58)));
  data0[(alu33+258)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val65+(alu30*val63*(acc10-val62)));
  data0[(alu33+514)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val69+(alu31*val67*(acc11-val66)));
  data0[(alu33+770)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val57+(alu32*val55*(acc12-val54)));
  data0[(alu33+3)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val61+(alu29*val59*(acc13-val58)));
  data0[(alu33+259)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val65+(alu30*val63*(acc14-val62)));
  data0[(alu33+515)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
  var alu64 = (val69+(alu31*val67*(acc15-val66)));
  data0[(alu33+771)] = ((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64);
}`;

const r_8_2_16_4_64_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu6 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data3[alu6];
    var val1 = data3[(alu6+1)];
    var val2 = data3[(alu6+2)];
    var val3 = data3[(alu6+3)];
    var val4 = data3[(alu6+4)];
    var val5 = data3[(alu6+5)];
    var val6 = data3[(alu6+6)];
    var val7 = data3[(alu6+7)];
    var val8 = data3[(alu6+8)];
    var val9 = data3[(alu6+576)];
    var val10 = data3[(alu6+577)];
    var val11 = data3[(alu6+578)];
    var val12 = data3[(alu6+579)];
    var val13 = data3[(alu6+580)];
    var val14 = data3[(alu6+581)];
    var val15 = data3[(alu6+582)];
    var val16 = data3[(alu6+583)];
    var val17 = data3[(alu6+584)];
    var val18 = data3[(alu6+1152)];
    var val19 = data3[(alu6+1153)];
    var val20 = data3[(alu6+1154)];
    var val21 = data3[(alu6+1155)];
    var val22 = data3[(alu6+1156)];
    var val23 = data3[(alu6+1157)];
    var val24 = data3[(alu6+1158)];
    var val25 = data3[(alu6+1159)];
    var val26 = data3[(alu6+1160)];
    var val27 = data3[(alu6+1728)];
    var val28 = data3[(alu6+1729)];
    var val29 = data3[(alu6+1730)];
    var val30 = data3[(alu6+1731)];
    var val31 = data3[(alu6+1732)];
    var val32 = data3[(alu6+1733)];
    var val33 = data3[(alu6+1734)];
    var val34 = data3[(alu6+1735)];
    var val35 = data3[(alu6+1736)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data2[alu7];
    var val37 = select(0.0f, data2[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data2[(alu7+-16)], alu2);
    var val39 = select(0.0f, data2[(alu7+-15)], alu2);
    var val40 = select(0.0f, data2[(alu7+-14)], alu2);
    var val41 = select(0.0f, data2[(alu7+-13)], alu2);
    var val42 = select(0.0f, data2[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data2[(alu7+-1)], alu3);
    var val44 = data2[(alu7+1)];
    var val45 = data2[(alu7+2)];
    var val46 = data2[(alu7+3)];
    var val47 = select(0.0f, data2[(alu7+4)], alu5);
    var val48 = select(0.0f, data2[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data2[(alu7+16)], alu4);
    var val50 = select(0.0f, data2[(alu7+17)], alu4);
    var val51 = select(0.0f, data2[(alu7+18)], alu4);
    var val52 = select(0.0f, data2[(alu7+19)], alu4);
    var val53 = select(0.0f, data2[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data4[alu25];
  var val55 = data5[alu25];
  var val56 = data6[alu25];
  var val57 = data7[alu25];
  var alu26 = (alu25+1);
  var val58 = data4[alu26];
  var val59 = data5[alu26];
  var val60 = data6[alu26];
  var val61 = data7[alu26];
  var alu27 = (alu25+2);
  var val62 = data4[alu27];
  var val63 = data5[alu27];
  var val64 = data6[alu27];
  var val65 = data7[alu27];
  var alu28 = (alu25+3);
  var val66 = data4[alu28];
  var val67 = data5[alu28];
  var val68 = data6[alu28];
  var val69 = data7[alu28];
  var alu29 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var val70 = data1[(alu29+16384)];
  var val71 = data1[(alu29+16385)];
  var val72 = data1[(alu29+16386)];
  var val73 = data1[(alu29+16387)];
  var val74 = data1[(alu29+16640)];
  var val75 = data1[(alu29+16641)];
  var val76 = data1[(alu29+16642)];
  var val77 = data1[(alu29+16643)];
  var val78 = data1[(alu29+16896)];
  var val79 = data1[(alu29+16897)];
  var val80 = data1[(alu29+16898)];
  var val81 = data1[(alu29+16899)];
  var val82 = data1[(alu29+17152)];
  var val83 = data1[(alu29+17153)];
  var val84 = data1[(alu29+17154)];
  var val85 = data1[(alu29+17155)];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu29] = (val70+((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34));
  var alu36 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu29+256)] = (val74+((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36));
  var alu38 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu29+512)] = (val78+((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38));
  var alu40 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu29+768)] = (val82+((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40));
  var alu42 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu29+1)] = (val71+((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42));
  var alu44 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu29+257)] = (val75+((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44));
  var alu46 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu29+513)] = (val79+((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46));
  var alu48 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu29+769)] = (val83+((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48));
  var alu50 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu29+2)] = (val72+((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50));
  var alu52 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu29+258)] = (val76+((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52));
  var alu54 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu29+514)] = (val80+((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54));
  var alu56 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu29+770)] = (val84+((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56));
  var alu58 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu29+3)] = (val73+((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58));
  var alu60 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu29+259)] = (val77+((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60));
  var alu62 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu29+515)] = (val81+((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62));
  var alu64 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu29+771)] = (val85+((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64));
}`;

const r_8_2_16_4_64_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu6 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+576)];
    var val10 = data2[(alu6+577)];
    var val11 = data2[(alu6+578)];
    var val12 = data2[(alu6+579)];
    var val13 = data2[(alu6+580)];
    var val14 = data2[(alu6+581)];
    var val15 = data2[(alu6+582)];
    var val16 = data2[(alu6+583)];
    var val17 = data2[(alu6+584)];
    var val18 = data2[(alu6+1152)];
    var val19 = data2[(alu6+1153)];
    var val20 = data2[(alu6+1154)];
    var val21 = data2[(alu6+1155)];
    var val22 = data2[(alu6+1156)];
    var val23 = data2[(alu6+1157)];
    var val24 = data2[(alu6+1158)];
    var val25 = data2[(alu6+1159)];
    var val26 = data2[(alu6+1160)];
    var val27 = data2[(alu6+1728)];
    var val28 = data2[(alu6+1729)];
    var val29 = data2[(alu6+1730)];
    var val30 = data2[(alu6+1731)];
    var val31 = data2[(alu6+1732)];
    var val32 = data2[(alu6+1733)];
    var val33 = data2[(alu6+1734)];
    var val34 = data2[(alu6+1735)];
    var val35 = data2[(alu6+1736)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data1[alu7];
    var val37 = select(0.0f, data1[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data1[(alu7+-16)], alu2);
    var val39 = select(0.0f, data1[(alu7+-15)], alu2);
    var val40 = select(0.0f, data1[(alu7+-14)], alu2);
    var val41 = select(0.0f, data1[(alu7+-13)], alu2);
    var val42 = select(0.0f, data1[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data1[(alu7+-1)], alu3);
    var val44 = data1[(alu7+1)];
    var val45 = data1[(alu7+2)];
    var val46 = data1[(alu7+3)];
    var val47 = select(0.0f, data1[(alu7+4)], alu5);
    var val48 = select(0.0f, data1[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data1[(alu7+16)], alu4);
    var val50 = select(0.0f, data1[(alu7+17)], alu4);
    var val51 = select(0.0f, data1[(alu7+18)], alu4);
    var val52 = select(0.0f, data1[(alu7+19)], alu4);
    var val53 = select(0.0f, data1[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data3[alu25];
  var val55 = data4[alu25];
  var val56 = data5[alu25];
  var val57 = data6[alu25];
  var alu26 = (alu25+1);
  var val58 = data3[alu26];
  var val59 = data4[alu26];
  var val60 = data5[alu26];
  var val61 = data6[alu26];
  var alu27 = (alu25+2);
  var val62 = data3[alu27];
  var val63 = data4[alu27];
  var val64 = data5[alu27];
  var val65 = data6[alu27];
  var alu28 = (alu25+3);
  var val66 = data3[alu28];
  var val67 = data4[alu28];
  var val68 = data5[alu28];
  var val69 = data6[alu28];
  var alu29 = sqrt((1/(val60+0.001f)));
  var alu30 = sqrt((1/(val64+0.001f)));
  var alu31 = sqrt((1/(val68+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var alu34 = (val57+(alu32*val55*(acc0-val54)));
  data0[alu33] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val61+(alu29*val59*(acc1-val58)));
  data0[(alu33+256)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val65+(alu30*val63*(acc2-val62)));
  data0[(alu33+512)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val69+(alu31*val67*(acc3-val66)));
  data0[(alu33+768)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val57+(alu32*val55*(acc4-val54)));
  data0[(alu33+1)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val61+(alu29*val59*(acc5-val58)));
  data0[(alu33+257)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val65+(alu30*val63*(acc6-val62)));
  data0[(alu33+513)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val69+(alu31*val67*(acc7-val66)));
  data0[(alu33+769)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val57+(alu32*val55*(acc8-val54)));
  data0[(alu33+2)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val61+(alu29*val59*(acc9-val58)));
  data0[(alu33+258)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val65+(alu30*val63*(acc10-val62)));
  data0[(alu33+514)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val69+(alu31*val67*(acc11-val66)));
  data0[(alu33+770)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val57+(alu32*val55*(acc12-val54)));
  data0[(alu33+3)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val61+(alu29*val59*(acc13-val58)));
  data0[(alu33+259)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val65+(alu30*val63*(acc14-val62)));
  data0[(alu33+515)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
  var alu64 = (val69+(alu31*val67*(acc15-val66)));
  data0[(alu33+771)] = ((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64);
}`;

const r_8_2_16_4_64_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu6 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data3[alu6];
    var val1 = data3[(alu6+1)];
    var val2 = data3[(alu6+2)];
    var val3 = data3[(alu6+3)];
    var val4 = data3[(alu6+4)];
    var val5 = data3[(alu6+5)];
    var val6 = data3[(alu6+6)];
    var val7 = data3[(alu6+7)];
    var val8 = data3[(alu6+8)];
    var val9 = data3[(alu6+576)];
    var val10 = data3[(alu6+577)];
    var val11 = data3[(alu6+578)];
    var val12 = data3[(alu6+579)];
    var val13 = data3[(alu6+580)];
    var val14 = data3[(alu6+581)];
    var val15 = data3[(alu6+582)];
    var val16 = data3[(alu6+583)];
    var val17 = data3[(alu6+584)];
    var val18 = data3[(alu6+1152)];
    var val19 = data3[(alu6+1153)];
    var val20 = data3[(alu6+1154)];
    var val21 = data3[(alu6+1155)];
    var val22 = data3[(alu6+1156)];
    var val23 = data3[(alu6+1157)];
    var val24 = data3[(alu6+1158)];
    var val25 = data3[(alu6+1159)];
    var val26 = data3[(alu6+1160)];
    var val27 = data3[(alu6+1728)];
    var val28 = data3[(alu6+1729)];
    var val29 = data3[(alu6+1730)];
    var val30 = data3[(alu6+1731)];
    var val31 = data3[(alu6+1732)];
    var val32 = data3[(alu6+1733)];
    var val33 = data3[(alu6+1734)];
    var val34 = data3[(alu6+1735)];
    var val35 = data3[(alu6+1736)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data2[alu7];
    var val37 = select(0.0f, data2[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data2[(alu7+-16)], alu2);
    var val39 = select(0.0f, data2[(alu7+-15)], alu2);
    var val40 = select(0.0f, data2[(alu7+-14)], alu2);
    var val41 = select(0.0f, data2[(alu7+-13)], alu2);
    var val42 = select(0.0f, data2[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data2[(alu7+-1)], alu3);
    var val44 = data2[(alu7+1)];
    var val45 = data2[(alu7+2)];
    var val46 = data2[(alu7+3)];
    var val47 = select(0.0f, data2[(alu7+4)], alu5);
    var val48 = select(0.0f, data2[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data2[(alu7+16)], alu4);
    var val50 = select(0.0f, data2[(alu7+17)], alu4);
    var val51 = select(0.0f, data2[(alu7+18)], alu4);
    var val52 = select(0.0f, data2[(alu7+19)], alu4);
    var val53 = select(0.0f, data2[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data4[alu25];
  var val55 = data5[alu25];
  var val56 = data6[alu25];
  var val57 = data7[alu25];
  var alu26 = (alu25+1);
  var val58 = data4[alu26];
  var val59 = data5[alu26];
  var val60 = data6[alu26];
  var val61 = data7[alu26];
  var alu27 = (alu25+2);
  var val62 = data4[alu27];
  var val63 = data5[alu27];
  var val64 = data6[alu27];
  var val65 = data7[alu27];
  var alu28 = (alu25+3);
  var val66 = data4[alu28];
  var val67 = data5[alu28];
  var val68 = data6[alu28];
  var val69 = data7[alu28];
  var alu29 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var val70 = data1[alu29];
  var alu30 = (alu29+1);
  var val71 = data1[alu30];
  var alu31 = (alu29+2);
  var val72 = data1[alu31];
  var alu32 = (alu29+3);
  var val73 = data1[alu32];
  var alu33 = (alu29+256);
  var val74 = data1[alu33];
  var alu34 = (alu29+257);
  var val75 = data1[alu34];
  var alu35 = (alu29+258);
  var val76 = data1[alu35];
  var alu36 = (alu29+259);
  var val77 = data1[alu36];
  var alu37 = (alu29+512);
  var val78 = data1[alu37];
  var alu38 = (alu29+513);
  var val79 = data1[alu38];
  var alu39 = (alu29+514);
  var val80 = data1[alu39];
  var alu40 = (alu29+515);
  var val81 = data1[alu40];
  var alu41 = (alu29+768);
  var val82 = data1[alu41];
  var alu42 = (alu29+769);
  var val83 = data1[alu42];
  var alu43 = (alu29+770);
  var val84 = data1[alu43];
  var alu44 = (alu29+771);
  var val85 = data1[alu44];
  var alu45 = sqrt((1/(val60+0.001f)));
  var alu46 = sqrt((1/(val64+0.001f)));
  var alu47 = sqrt((1/(val68+0.001f)));
  var alu48 = sqrt((1/(val56+0.001f)));
  var alu49 = (val57+(alu48*val55*(acc0-val54)));
  data0[alu29] = (val70+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  var alu51 = (val61+(alu45*val59*(acc1-val58)));
  data0[alu33] = (val74+((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51));
  var alu53 = (val65+(alu46*val63*(acc2-val62)));
  data0[alu37] = (val78+((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53));
  var alu55 = (val69+(alu47*val67*(acc3-val66)));
  data0[alu41] = (val82+((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55));
  var alu57 = (val57+(alu48*val55*(acc4-val54)));
  data0[alu30] = (val71+((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57));
  var alu59 = (val61+(alu45*val59*(acc5-val58)));
  data0[alu34] = (val75+((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59));
  var alu61 = (val65+(alu46*val63*(acc6-val62)));
  data0[alu38] = (val79+((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61));
  var alu63 = (val69+(alu47*val67*(acc7-val66)));
  data0[alu42] = (val83+((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63));
  var alu65 = (val57+(alu48*val55*(acc8-val54)));
  data0[alu31] = (val72+((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65));
  var alu67 = (val61+(alu45*val59*(acc9-val58)));
  data0[alu35] = (val76+((1/(exp2((alu67*-1.4426950408889634f))+1.0f))*alu67));
  var alu69 = (val65+(alu46*val63*(acc10-val62)));
  data0[alu39] = (val80+((1/(exp2((alu69*-1.4426950408889634f))+1.0f))*alu69));
  var alu71 = (val69+(alu47*val67*(acc11-val66)));
  data0[alu43] = (val84+((1/(exp2((alu71*-1.4426950408889634f))+1.0f))*alu71));
  var alu73 = (val57+(alu48*val55*(acc12-val54)));
  data0[alu32] = (val73+((1/(exp2((alu73*-1.4426950408889634f))+1.0f))*alu73));
  var alu75 = (val61+(alu45*val59*(acc13-val58)));
  data0[alu36] = (val77+((1/(exp2((alu75*-1.4426950408889634f))+1.0f))*alu75));
  var alu77 = (val65+(alu46*val63*(acc14-val62)));
  data0[alu40] = (val81+((1/(exp2((alu77*-1.4426950408889634f))+1.0f))*alu77));
  var alu79 = (val69+(alu47*val67*(acc15-val66)));
  data0[alu44] = (val85+((1/(exp2((alu79*-1.4426950408889634f))+1.0f))*alu79));
}`;

const E_32_4_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 32 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<8);
  var alu1 = (gidx1<16);
  var alu2 = (gidx1<24);
  var alu3 = (alu2!=true);
  var alu4 = ((gidx0<<6)+(gidx1<<11)+(lidx0<<8)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu4], alu0);
  var val1 = select(0.0f, data3[(alu4+-49152)], alu3);
  var val2 = select(0.0f, data3[(alu4+-49151)], alu3);
  var val3 = select(0.0f, data3[(alu4+-49150)], alu3);
  var val4 = select(0.0f, data3[(alu4+-49149)], alu3);
  var alu5 = (alu4+1);
  var val5 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu4+2);
  var val6 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu4+3);
  var val7 = select(0.0f, data1[alu7], alu0);
  var alu8 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu5], alu8);
  var val9 = select(0.0f, data1[alu6], alu8);
  var val10 = select(0.0f, data1[alu7], alu8);
  var val11 = select(0.0f, data1[alu4], alu8);
  var alu9 = (alu2&(alu1!=true));
  var val12 = select(0.0f, data2[(alu4+-32768)], alu9);
  var val13 = select(0.0f, data2[(alu4+-32767)], alu9);
  var val14 = select(0.0f, data2[(alu4+-32766)], alu9);
  var val15 = select(0.0f, data2[(alu4+-32765)], alu9);
  data0[alu4] = (val1+val12+val0+val11);
  data0[alu5] = (val2+val13+val5+val8);
  data0[alu6] = (val3+val14+val6+val9);
  data0[alu7] = (val4+val15+val7+val10);
}`;

const r_4_4_8_16_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (gidx1<<13);
  var alu2 = (lidx0<<10);
  var alu3 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu4 = (alu1+alu2+(ridx0<<2));
    var val0 = data2[alu4];
    var val1 = data2[(alu4+1)];
    var val2 = data2[(alu4+2)];
    var val3 = data2[(alu4+3)];
    var val4 = data2[(alu4+256)];
    var val5 = data2[(alu4+257)];
    var val6 = data2[(alu4+258)];
    var val7 = data2[(alu4+259)];
    var val8 = data2[(alu4+512)];
    var val9 = data2[(alu4+513)];
    var val10 = data2[(alu4+514)];
    var val11 = data2[(alu4+515)];
    var val12 = data2[(alu4+768)];
    var val13 = data2[(alu4+769)];
    var val14 = data2[(alu4+770)];
    var val15 = data2[(alu4+771)];
    var alu5 = (alu0+alu3+(ridx0<<10));
    var val16 = data1[alu5];
    var val17 = data1[(alu5+1)];
    var val18 = data1[(alu5+2)];
    var val19 = data1[(alu5+3)];
    var val20 = data1[(alu5+256)];
    var val21 = data1[(alu5+257)];
    var val22 = data1[(alu5+258)];
    var val23 = data1[(alu5+259)];
    var val24 = data1[(alu5+512)];
    var val25 = data1[(alu5+513)];
    var val26 = data1[(alu5+514)];
    var val27 = data1[(alu5+515)];
    var val28 = data1[(alu5+768)];
    var val29 = data1[(alu5+769)];
    var val30 = data1[(alu5+770)];
    var val31 = data1[(alu5+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu23 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu23];
  var val33 = data4[alu23];
  var val34 = data5[alu23];
  var val35 = data6[alu23];
  var alu24 = (alu23+1);
  var val36 = data3[alu24];
  var val37 = data4[alu24];
  var val38 = data5[alu24];
  var val39 = data6[alu24];
  var alu25 = (alu23+2);
  var val40 = data3[alu25];
  var val41 = data4[alu25];
  var val42 = data5[alu25];
  var val43 = data6[alu25];
  var alu26 = (alu23+3);
  var val44 = data3[alu26];
  var val45 = data4[alu26];
  var val46 = data5[alu26];
  var val47 = data6[alu26];
  var alu27 = (alu0+alu1+alu2+alu3);
  var alu28 = sqrt((1/(val38+0.001f)));
  var alu29 = sqrt((1/(val42+0.001f)));
  var alu30 = sqrt((1/(val46+0.001f)));
  var alu31 = sqrt((1/(val34+0.001f)));
  var alu32 = (val35+(alu31*val33*(acc0-val32)));
  data0[alu27] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val39+(alu28*val37*(acc1-val36)));
  data0[(alu27+256)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val43+(alu29*val41*(acc2-val40)));
  data0[(alu27+512)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val47+(alu30*val45*(acc3-val44)));
  data0[(alu27+768)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val35+(alu31*val33*(acc4-val32)));
  data0[(alu27+1)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val39+(alu28*val37*(acc5-val36)));
  data0[(alu27+257)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val43+(alu29*val41*(acc6-val40)));
  data0[(alu27+513)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val47+(alu30*val45*(acc7-val44)));
  data0[(alu27+769)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val35+(alu31*val33*(acc8-val32)));
  data0[(alu27+2)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val39+(alu28*val37*(acc9-val36)));
  data0[(alu27+258)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val43+(alu29*val41*(acc10-val40)));
  data0[(alu27+514)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val47+(alu30*val45*(acc11-val44)));
  data0[(alu27+770)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val35+(alu31*val33*(acc12-val32)));
  data0[(alu27+3)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val39+(alu28*val37*(acc13-val36)));
  data0[(alu27+259)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val43+(alu29*val41*(acc14-val40)));
  data0[(alu27+515)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val47+(alu30*val45*(acc15-val44)));
  data0[(alu27+771)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
}`;

const r_8_8_8_2_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = ((lidx2<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu2 = ((gidx0*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+1152)];
    var val10 = data2[(alu2+1153)];
    var val11 = data2[(alu2+1154)];
    var val12 = data2[(alu2+1155)];
    var val13 = data2[(alu2+1156)];
    var val14 = data2[(alu2+1157)];
    var val15 = data2[(alu2+1158)];
    var val16 = data2[(alu2+1159)];
    var val17 = data2[(alu2+1160)];
    var val18 = data2[(alu2+2304)];
    var val19 = data2[(alu2+2305)];
    var val20 = data2[(alu2+2306)];
    var val21 = data2[(alu2+2307)];
    var val22 = data2[(alu2+2308)];
    var val23 = data2[(alu2+2309)];
    var val24 = data2[(alu2+2310)];
    var val25 = data2[(alu2+2311)];
    var val26 = data2[(alu2+2312)];
    var val27 = data2[(alu2+3456)];
    var val28 = data2[(alu2+3457)];
    var val29 = data2[(alu2+3458)];
    var val30 = data2[(alu2+3459)];
    var val31 = data2[(alu2+3460)];
    var val32 = data2[(alu2+3461)];
    var val33 = data2[(alu2+3462)];
    var val34 = data2[(alu2+3463)];
    var val35 = data2[(alu2+3464)];
    var alu3 = ((lidx1<<5)+(ridx0<<8));
    var alu4 = (alu3+(lidx2<<3));
    var val36 = data1[alu4];
    var val37 = select(0.0f, data1[(alu4+-16)], alu0);
    var val38 = select(0.0f, data1[(alu4+-15)], alu0);
    var val39 = select(0.0f, data1[(alu4+-14)], alu0);
    var val40 = select(0.0f, data1[(alu4+-13)], alu0);
    var val41 = select(0.0f, data1[(alu4+-12)], alu0);
    var val42 = select(0.0f, data1[(alu4+-11)], alu0);
    var val43 = select(0.0f, data1[(alu4+-10)], alu0);
    var val44 = select(0.0f, data1[(alu4+-9)], alu0);
    var val45 = data1[(alu4+1)];
    var val46 = data1[(alu4+2)];
    var val47 = data1[(alu4+3)];
    var val48 = data1[(alu4+4)];
    var val49 = data1[(alu4+5)];
    var val50 = data1[(alu4+6)];
    var val51 = data1[(alu4+7)];
    var val52 = data1[(alu4+16)];
    var val53 = data1[(alu4+17)];
    var val54 = data1[(alu4+18)];
    var val55 = data1[(alu4+19)];
    var val56 = data1[(alu4+20)];
    var val57 = data1[(alu4+21)];
    var val58 = data1[(alu4+22)];
    var val59 = data1[(alu4+23)];
    var val60 = select(0.0f, data1[(alu3+-9)], (alu0&alu1));
    var val61 = select(0.0f, data1[(alu3+7)], alu1);
    var val62 = select(0.0f, data1[(alu3+23)], alu1);
    acc0 = (acc0+(val60*val0)+(val61*val3)+(val62*val6)+(val37*val1)+(val36*val4)+(val52*val7)+(val38*val2)+(val45*val5)+(val53*val8));
    acc1 = (acc1+(val60*val9)+(val61*val12)+(val62*val15)+(val37*val10)+(val36*val13)+(val52*val16)+(val38*val11)+(val45*val14)+(val53*val17));
    acc2 = (acc2+(val60*val18)+(val61*val21)+(val62*val24)+(val37*val19)+(val36*val22)+(val52*val25)+(val38*val20)+(val45*val23)+(val53*val26));
    acc3 = (acc3+(val60*val27)+(val61*val30)+(val62*val33)+(val37*val28)+(val36*val31)+(val52*val34)+(val38*val29)+(val45*val32)+(val53*val35));
    acc4 = (acc4+(val38*val0)+(val45*val3)+(val53*val6)+(val39*val1)+(val46*val4)+(val54*val7)+(val40*val2)+(val47*val5)+(val55*val8));
    acc5 = (acc5+(val38*val9)+(val45*val12)+(val53*val15)+(val39*val10)+(val46*val13)+(val54*val16)+(val40*val11)+(val47*val14)+(val55*val17));
    acc6 = (acc6+(val38*val18)+(val45*val21)+(val53*val24)+(val39*val19)+(val46*val22)+(val54*val25)+(val40*val20)+(val47*val23)+(val55*val26));
    acc7 = (acc7+(val38*val27)+(val45*val30)+(val53*val33)+(val39*val28)+(val46*val31)+(val54*val34)+(val40*val29)+(val47*val32)+(val55*val35));
    acc8 = (acc8+(val40*val0)+(val47*val3)+(val55*val6)+(val41*val1)+(val48*val4)+(val56*val7)+(val42*val2)+(val49*val5)+(val57*val8));
    acc9 = (acc9+(val40*val9)+(val47*val12)+(val55*val15)+(val41*val10)+(val48*val13)+(val56*val16)+(val42*val11)+(val49*val14)+(val57*val17));
    acc10 = (acc10+(val40*val18)+(val47*val21)+(val55*val24)+(val41*val19)+(val48*val22)+(val56*val25)+(val42*val20)+(val49*val23)+(val57*val26));
    acc11 = (acc11+(val40*val27)+(val47*val30)+(val55*val33)+(val41*val28)+(val48*val31)+(val56*val34)+(val42*val29)+(val49*val32)+(val57*val35));
    acc12 = (acc12+(val42*val0)+(val49*val3)+(val57*val6)+(val43*val1)+(val50*val4)+(val58*val7)+(val44*val2)+(val51*val5)+(val59*val8));
    acc13 = (acc13+(val42*val9)+(val49*val12)+(val57*val15)+(val43*val10)+(val50*val13)+(val58*val16)+(val44*val11)+(val51*val14)+(val59*val17));
    acc14 = (acc14+(val42*val18)+(val49*val21)+(val57*val24)+(val43*val19)+(val50*val22)+(val58*val25)+(val44*val20)+(val51*val23)+(val59*val26));
    acc15 = (acc15+(val42*val27)+(val49*val30)+(val57*val33)+(val43*val28)+(val50*val31)+(val58*val34)+(val44*val29)+(val51*val32)+(val59*val35));
  }
  var alu22 = ((gidx0<<5)+(lidx0<<2));
  var val63 = data3[alu22];
  var val64 = data4[alu22];
  var val65 = data5[alu22];
  var val66 = data6[alu22];
  var alu23 = (alu22+1);
  var val67 = data3[alu23];
  var val68 = data4[alu23];
  var val69 = data5[alu23];
  var val70 = data6[alu23];
  var alu24 = (alu22+2);
  var val71 = data3[alu24];
  var val72 = data4[alu24];
  var val73 = data5[alu24];
  var val74 = data6[alu24];
  var alu25 = (alu22+3);
  var val75 = data3[alu25];
  var val76 = data4[alu25];
  var val77 = data5[alu25];
  var val78 = data6[alu25];
  var alu26 = sqrt((1/(val69+0.001f)));
  var alu27 = sqrt((1/(val73+0.001f)));
  var alu28 = sqrt((1/(val77+0.001f)));
  var alu29 = sqrt((1/(val65+0.001f)));
  var alu30 = ((gidx0<<11)+(lidx0<<8)+(lidx1<<3)+(lidx2<<2));
  var alu31 = (val66+(alu29*val64*(acc0-val63)));
  data0[alu30] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val70+(alu26*val68*(acc1-val67)));
  data0[(alu30+64)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val74+(alu27*val72*(acc2-val71)));
  data0[(alu30+128)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val78+(alu28*val76*(acc3-val75)));
  data0[(alu30+192)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val66+(alu29*val64*(acc4-val63)));
  data0[(alu30+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val70+(alu26*val68*(acc5-val67)));
  data0[(alu30+65)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val74+(alu27*val72*(acc6-val71)));
  data0[(alu30+129)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val78+(alu28*val76*(acc7-val75)));
  data0[(alu30+193)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val66+(alu29*val64*(acc8-val63)));
  data0[(alu30+2)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val70+(alu26*val68*(acc9-val67)));
  data0[(alu30+66)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val74+(alu27*val72*(acc10-val71)));
  data0[(alu30+130)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val78+(alu28*val76*(acc11-val75)));
  data0[(alu30+194)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val66+(alu29*val64*(acc12-val63)));
  data0[(alu30+3)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val70+(alu26*val68*(acc13-val67)));
  data0[(alu30+67)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val74+(alu27*val72*(acc14-val71)));
  data0[(alu30+131)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val78+(alu28*val76*(acc15-val75)));
  data0[(alu30+195)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
}`;

const r_8_8_16_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu1 = ((gidx0<<13)+(lidx0<<10)+(ridx0<<2));
    var val0 = data2[alu1];
    var val1 = data2[(alu1+1)];
    var val2 = data2[(alu1+2)];
    var val3 = data2[(alu1+3)];
    var val4 = data2[(alu1+256)];
    var val5 = data2[(alu1+257)];
    var val6 = data2[(alu1+258)];
    var val7 = data2[(alu1+259)];
    var val8 = data2[(alu1+512)];
    var val9 = data2[(alu1+513)];
    var val10 = data2[(alu1+514)];
    var val11 = data2[(alu1+515)];
    var val12 = data2[(alu1+768)];
    var val13 = data2[(alu1+769)];
    var val14 = data2[(alu1+770)];
    var val15 = data2[(alu1+771)];
    var alu2 = (alu0+(ridx0<<8));
    var val16 = data1[alu2];
    var val17 = data1[(alu2+1)];
    var val18 = data1[(alu2+2)];
    var val19 = data1[(alu2+3)];
    var val20 = data1[(alu2+64)];
    var val21 = data1[(alu2+65)];
    var val22 = data1[(alu2+66)];
    var val23 = data1[(alu2+67)];
    var val24 = data1[(alu2+128)];
    var val25 = data1[(alu2+129)];
    var val26 = data1[(alu2+130)];
    var val27 = data1[(alu2+131)];
    var val28 = data1[(alu2+192)];
    var val29 = data1[(alu2+193)];
    var val30 = data1[(alu2+194)];
    var val31 = data1[(alu2+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu20 = ((gidx0<<5)+(lidx0<<2));
  var val32 = data3[alu20];
  var val33 = data4[alu20];
  var val34 = data5[alu20];
  var val35 = data6[alu20];
  var alu21 = (alu20+1);
  var val36 = data3[alu21];
  var val37 = data4[alu21];
  var val38 = data5[alu21];
  var val39 = data6[alu21];
  var alu22 = (alu20+2);
  var val40 = data3[alu22];
  var val41 = data4[alu22];
  var val42 = data5[alu22];
  var val43 = data6[alu22];
  var alu23 = (alu20+3);
  var val44 = data3[alu23];
  var val45 = data4[alu23];
  var val46 = data5[alu23];
  var val47 = data6[alu23];
  var alu24 = sqrt((1/(val38+0.001f)));
  var alu25 = sqrt((1/(val42+0.001f)));
  var alu26 = sqrt((1/(val46+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = ((gidx0<<11)+(lidx0<<8)+alu0);
  var alu29 = (val35+(alu27*val33*(acc0-val32)));
  data0[alu28] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  var alu31 = (val39+(alu24*val37*(acc1-val36)));
  data0[(alu28+64)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val43+(alu25*val41*(acc2-val40)));
  data0[(alu28+128)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val47+(alu26*val45*(acc3-val44)));
  data0[(alu28+192)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val35+(alu27*val33*(acc4-val32)));
  data0[(alu28+1)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val39+(alu24*val37*(acc5-val36)));
  data0[(alu28+65)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val43+(alu25*val41*(acc6-val40)));
  data0[(alu28+129)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val47+(alu26*val45*(acc7-val44)));
  data0[(alu28+193)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val35+(alu27*val33*(acc8-val32)));
  data0[(alu28+2)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val39+(alu24*val37*(acc9-val36)));
  data0[(alu28+66)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val43+(alu25*val41*(acc10-val40)));
  data0[(alu28+130)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val47+(alu26*val45*(acc11-val44)));
  data0[(alu28+194)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val35+(alu27*val33*(acc12-val32)));
  data0[(alu28+3)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val39+(alu24*val37*(acc13-val36)));
  data0[(alu28+67)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val43+(alu25*val41*(acc14-val40)));
  data0[(alu28+131)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val47+(alu26*val45*(acc15-val44)));
  data0[(alu28+195)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
}`;

const r_4_8_8_2_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu6 = ((gidx0*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+1152)];
    var val10 = data2[(alu6+1153)];
    var val11 = data2[(alu6+1154)];
    var val12 = data2[(alu6+1155)];
    var val13 = data2[(alu6+1156)];
    var val14 = data2[(alu6+1157)];
    var val15 = data2[(alu6+1158)];
    var val16 = data2[(alu6+1159)];
    var val17 = data2[(alu6+1160)];
    var val18 = data2[(alu6+2304)];
    var val19 = data2[(alu6+2305)];
    var val20 = data2[(alu6+2306)];
    var val21 = data2[(alu6+2307)];
    var val22 = data2[(alu6+2308)];
    var val23 = data2[(alu6+2309)];
    var val24 = data2[(alu6+2310)];
    var val25 = data2[(alu6+2311)];
    var val26 = data2[(alu6+2312)];
    var val27 = data2[(alu6+3456)];
    var val28 = data2[(alu6+3457)];
    var val29 = data2[(alu6+3458)];
    var val30 = data2[(alu6+3459)];
    var val31 = data2[(alu6+3460)];
    var val32 = data2[(alu6+3461)];
    var val33 = data2[(alu6+3462)];
    var val34 = data2[(alu6+3463)];
    var val35 = data2[(alu6+3464)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = select(0.0f, data1[(alu8+8184)], alu3);
    var val37 = select(0.0f, data1[(alu8+8185)], alu3);
    var val38 = select(0.0f, data1[(alu8+8186)], alu3);
    var val39 = select(0.0f, data1[(alu8+8187)], alu3);
    var val40 = data1[(alu8+8192)];
    var val41 = data1[(alu8+8193)];
    var val42 = data1[(alu8+8194)];
    var val43 = data1[(alu8+8195)];
    var val44 = select(0.0f, data1[(alu8+8200)], alu5);
    var val45 = select(0.0f, data1[(alu8+8201)], alu5);
    var val46 = select(0.0f, data1[(alu8+8202)], alu5);
    var val47 = select(0.0f, data1[(alu8+8203)], alu5);
    var val48 = select(0.0f, data1[(alu7+8187)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+8188)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+8195)], alu4);
    var val51 = select(0.0f, data1[(alu7+8196)], alu2);
    var val52 = select(0.0f, data1[(alu7+8203)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+8204)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val36*val1)+(val40*val4)+(val44*val7)+(val37*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val36*val10)+(val40*val13)+(val44*val16)+(val37*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val36*val19)+(val40*val22)+(val44*val25)+(val37*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val36*val28)+(val40*val31)+(val44*val34)+(val37*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val36*val0)+(val40*val3)+(val44*val6)+(val37*val1)+(val41*val4)+(val45*val7)+(val38*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val36*val9)+(val40*val12)+(val44*val15)+(val37*val10)+(val41*val13)+(val45*val16)+(val38*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val36*val18)+(val40*val21)+(val44*val24)+(val37*val19)+(val41*val22)+(val45*val25)+(val38*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val36*val27)+(val40*val30)+(val44*val33)+(val37*val28)+(val41*val31)+(val45*val34)+(val38*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val37*val0)+(val41*val3)+(val45*val6)+(val38*val1)+(val42*val4)+(val46*val7)+(val39*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val37*val9)+(val41*val12)+(val45*val15)+(val38*val10)+(val42*val13)+(val46*val16)+(val39*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val37*val18)+(val41*val21)+(val45*val24)+(val38*val19)+(val42*val22)+(val46*val25)+(val39*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val37*val27)+(val41*val30)+(val45*val33)+(val38*val28)+(val42*val31)+(val46*val34)+(val39*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val38*val0)+(val42*val3)+(val46*val6)+(val39*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val38*val9)+(val42*val12)+(val46*val15)+(val39*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val38*val18)+(val42*val21)+(val46*val24)+(val39*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val38*val27)+(val42*val30)+(val46*val33)+(val39*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<5)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<11)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_4_8_8_2_128_4_4_3_3n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@group(0) @binding(8)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu6 = ((gidx0*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = data3[alu6];
    var val1 = data3[(alu6+1)];
    var val2 = data3[(alu6+2)];
    var val3 = data3[(alu6+3)];
    var val4 = data3[(alu6+4)];
    var val5 = data3[(alu6+5)];
    var val6 = data3[(alu6+6)];
    var val7 = data3[(alu6+7)];
    var val8 = data3[(alu6+8)];
    var val9 = data3[(alu6+1152)];
    var val10 = data3[(alu6+1153)];
    var val11 = data3[(alu6+1154)];
    var val12 = data3[(alu6+1155)];
    var val13 = data3[(alu6+1156)];
    var val14 = data3[(alu6+1157)];
    var val15 = data3[(alu6+1158)];
    var val16 = data3[(alu6+1159)];
    var val17 = data3[(alu6+1160)];
    var val18 = data3[(alu6+2304)];
    var val19 = data3[(alu6+2305)];
    var val20 = data3[(alu6+2306)];
    var val21 = data3[(alu6+2307)];
    var val22 = data3[(alu6+2308)];
    var val23 = data3[(alu6+2309)];
    var val24 = data3[(alu6+2310)];
    var val25 = data3[(alu6+2311)];
    var val26 = data3[(alu6+2312)];
    var val27 = data3[(alu6+3456)];
    var val28 = data3[(alu6+3457)];
    var val29 = data3[(alu6+3458)];
    var val30 = data3[(alu6+3459)];
    var val31 = data3[(alu6+3460)];
    var val32 = data3[(alu6+3461)];
    var val33 = data3[(alu6+3462)];
    var val34 = data3[(alu6+3463)];
    var val35 = data3[(alu6+3464)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data2[alu8];
    var val37 = select(0.0f, data2[(alu8+-8)], alu3);
    var val38 = select(0.0f, data2[(alu8+-7)], alu3);
    var val39 = select(0.0f, data2[(alu8+-6)], alu3);
    var val40 = select(0.0f, data2[(alu8+-5)], alu3);
    var val41 = data2[(alu8+1)];
    var val42 = data2[(alu8+2)];
    var val43 = data2[(alu8+3)];
    var val44 = select(0.0f, data2[(alu8+8)], alu5);
    var val45 = select(0.0f, data2[(alu8+9)], alu5);
    var val46 = select(0.0f, data2[(alu8+10)], alu5);
    var val47 = select(0.0f, data2[(alu8+11)], alu5);
    var val48 = select(0.0f, data2[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data2[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data2[(alu7+3)], alu4);
    var val51 = select(0.0f, data2[(alu7+4)], alu2);
    var val52 = select(0.0f, data2[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data2[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<5)+(lidx0<<2));
  var val54 = data4[alu26];
  var val55 = data5[alu26];
  var val56 = data6[alu26];
  var val57 = data7[alu26];
  var alu27 = (alu26+1);
  var val58 = data4[alu27];
  var val59 = data5[alu27];
  var val60 = data6[alu27];
  var val61 = data7[alu27];
  var alu28 = (alu26+2);
  var val62 = data4[alu28];
  var val63 = data5[alu28];
  var val64 = data6[alu28];
  var val65 = data7[alu28];
  var alu29 = (alu26+3);
  var val66 = data4[alu29];
  var val67 = data5[alu29];
  var val68 = data6[alu29];
  var val69 = data7[alu29];
  var alu30 = ((gidx0<<11)+(lidx0<<8)+alu0+alu1);
  var val70 = data1[(alu30+8192)];
  var val71 = data1[(alu30+8193)];
  var val72 = data1[(alu30+8194)];
  var val73 = data1[(alu30+8195)];
  var val74 = data1[(alu30+8256)];
  var val75 = data1[(alu30+8257)];
  var val76 = data1[(alu30+8258)];
  var val77 = data1[(alu30+8259)];
  var val78 = data1[(alu30+8320)];
  var val79 = data1[(alu30+8321)];
  var val80 = data1[(alu30+8322)];
  var val81 = data1[(alu30+8323)];
  var val82 = data1[(alu30+8384)];
  var val83 = data1[(alu30+8385)];
  var val84 = data1[(alu30+8386)];
  var val85 = data1[(alu30+8387)];
  var alu31 = sqrt((1/(val60+0.001f)));
  var alu32 = sqrt((1/(val64+0.001f)));
  var alu33 = sqrt((1/(val68+0.001f)));
  var alu34 = sqrt((1/(val56+0.001f)));
  var alu35 = (val57+(alu34*val55*(acc0-val54)));
  data0[alu30] = (val70+((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35));
  var alu37 = (val61+(alu31*val59*(acc1-val58)));
  data0[(alu30+64)] = (val74+((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37));
  var alu39 = (val65+(alu32*val63*(acc2-val62)));
  data0[(alu30+128)] = (val78+((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39));
  var alu41 = (val69+(alu33*val67*(acc3-val66)));
  data0[(alu30+192)] = (val82+((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41));
  var alu43 = (val57+(alu34*val55*(acc4-val54)));
  data0[(alu30+1)] = (val71+((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43));
  var alu45 = (val61+(alu31*val59*(acc5-val58)));
  data0[(alu30+65)] = (val75+((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45));
  var alu47 = (val65+(alu32*val63*(acc6-val62)));
  data0[(alu30+129)] = (val79+((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47));
  var alu49 = (val69+(alu33*val67*(acc7-val66)));
  data0[(alu30+193)] = (val83+((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49));
  var alu51 = (val57+(alu34*val55*(acc8-val54)));
  data0[(alu30+2)] = (val72+((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51));
  var alu53 = (val61+(alu31*val59*(acc9-val58)));
  data0[(alu30+66)] = (val76+((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53));
  var alu55 = (val65+(alu32*val63*(acc10-val62)));
  data0[(alu30+130)] = (val80+((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55));
  var alu57 = (val69+(alu33*val67*(acc11-val66)));
  data0[(alu30+194)] = (val84+((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57));
  var alu59 = (val57+(alu34*val55*(acc12-val54)));
  data0[(alu30+3)] = (val73+((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59));
  var alu61 = (val61+(alu31*val59*(acc13-val58)));
  data0[(alu30+67)] = (val77+((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61));
  var alu63 = (val65+(alu32*val63*(acc14-val62)));
  data0[(alu30+131)] = (val81+((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63));
  var alu65 = (val69+(alu33*val67*(acc15-val66)));
  data0[(alu30+195)] = (val85+((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65));
}`;

const E_48_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 48 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<16);
  var alu1 = (gidx0<32);
  var alu2 = (alu1!=true);
  var alu3 = ((gidx0<<9)+(lidx0<<6)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu3], alu0);
  var val1 = select(0.0f, data2[(alu3+-16384)], alu2);
  var val2 = select(0.0f, data2[(alu3+-16383)], alu2);
  var val3 = select(0.0f, data2[(alu3+-16382)], alu2);
  var val4 = select(0.0f, data2[(alu3+-16381)], alu2);
  var alu4 = (alu3+1);
  var val5 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu3+2);
  var val6 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu3+3);
  var val7 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu4], alu7);
  var val9 = select(0.0f, data1[alu5], alu7);
  var val10 = select(0.0f, data1[alu6], alu7);
  var val11 = select(0.0f, data1[alu3], alu7);
  data0[alu3] = (val1+val0+val11);
  data0[alu4] = (val2+val5+val8);
  data0[alu5] = (val3+val6+val9);
  data0[alu6] = (val4+val7+val10);
}`;

const r_8_8_16_96_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 96; ridx0++) {
    var alu1 = ((gidx0*12288)+(lidx0*1536)+(ridx0<<2));
    var val0 = data2[alu1];
    var val1 = data2[(alu1+1)];
    var val2 = data2[(alu1+2)];
    var val3 = data2[(alu1+3)];
    var val4 = data2[(alu1+384)];
    var val5 = data2[(alu1+385)];
    var val6 = data2[(alu1+386)];
    var val7 = data2[(alu1+387)];
    var val8 = data2[(alu1+768)];
    var val9 = data2[(alu1+769)];
    var val10 = data2[(alu1+770)];
    var val11 = data2[(alu1+771)];
    var val12 = data2[(alu1+1152)];
    var val13 = data2[(alu1+1153)];
    var val14 = data2[(alu1+1154)];
    var val15 = data2[(alu1+1155)];
    var alu2 = (alu0+(ridx0<<8));
    var val16 = data1[alu2];
    var val17 = data1[(alu2+1)];
    var val18 = data1[(alu2+2)];
    var val19 = data1[(alu2+3)];
    var val20 = data1[(alu2+64)];
    var val21 = data1[(alu2+65)];
    var val22 = data1[(alu2+66)];
    var val23 = data1[(alu2+67)];
    var val24 = data1[(alu2+128)];
    var val25 = data1[(alu2+129)];
    var val26 = data1[(alu2+130)];
    var val27 = data1[(alu2+131)];
    var val28 = data1[(alu2+192)];
    var val29 = data1[(alu2+193)];
    var val30 = data1[(alu2+194)];
    var val31 = data1[(alu2+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu20 = ((gidx0<<5)+(lidx0<<2));
  var val32 = data3[alu20];
  var val33 = data4[alu20];
  var val34 = data5[alu20];
  var val35 = data6[alu20];
  var alu21 = (alu20+1);
  var val36 = data3[alu21];
  var val37 = data4[alu21];
  var val38 = data5[alu21];
  var val39 = data6[alu21];
  var alu22 = (alu20+2);
  var val40 = data3[alu22];
  var val41 = data4[alu22];
  var val42 = data5[alu22];
  var val43 = data6[alu22];
  var alu23 = (alu20+3);
  var val44 = data3[alu23];
  var val45 = data4[alu23];
  var val46 = data5[alu23];
  var val47 = data6[alu23];
  var alu24 = sqrt((1/(val38+0.001f)));
  var alu25 = sqrt((1/(val42+0.001f)));
  var alu26 = sqrt((1/(val46+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = ((gidx0<<11)+(lidx0<<8)+alu0);
  var alu29 = (val35+(alu27*val33*(acc0-val32)));
  data0[alu28] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  var alu31 = (val39+(alu24*val37*(acc1-val36)));
  data0[(alu28+64)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val43+(alu25*val41*(acc2-val40)));
  data0[(alu28+128)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val47+(alu26*val45*(acc3-val44)));
  data0[(alu28+192)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val35+(alu27*val33*(acc4-val32)));
  data0[(alu28+1)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val39+(alu24*val37*(acc5-val36)));
  data0[(alu28+65)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val43+(alu25*val41*(acc6-val40)));
  data0[(alu28+129)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val47+(alu26*val45*(acc7-val44)));
  data0[(alu28+193)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val35+(alu27*val33*(acc8-val32)));
  data0[(alu28+2)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val39+(alu24*val37*(acc9-val36)));
  data0[(alu28+66)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val43+(alu25*val41*(acc10-val40)));
  data0[(alu28+130)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val47+(alu26*val45*(acc11-val44)));
  data0[(alu28+194)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val35+(alu27*val33*(acc12-val32)));
  data0[(alu28+3)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val39+(alu24*val37*(acc13-val36)));
  data0[(alu28+67)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val43+(alu25*val41*(acc14-val40)));
  data0[(alu28+131)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val47+(alu26*val45*(acc15-val44)));
  data0[(alu28+195)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
}`;

const r_4_8_16_64_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu1 = ((gidx0<<13)+(lidx0<<10)+(ridx0<<2));
    var val0 = data2[alu1];
    var val1 = data2[(alu1+1)];
    var val2 = data2[(alu1+2)];
    var val3 = data2[(alu1+3)];
    var val4 = data2[(alu1+256)];
    var val5 = data2[(alu1+257)];
    var val6 = data2[(alu1+258)];
    var val7 = data2[(alu1+259)];
    var val8 = data2[(alu1+512)];
    var val9 = data2[(alu1+513)];
    var val10 = data2[(alu1+514)];
    var val11 = data2[(alu1+515)];
    var val12 = data2[(alu1+768)];
    var val13 = data2[(alu1+769)];
    var val14 = data2[(alu1+770)];
    var val15 = data2[(alu1+771)];
    var alu2 = (alu0+(ridx0<<8));
    var val16 = data1[alu2];
    var val17 = data1[(alu2+1)];
    var val18 = data1[(alu2+2)];
    var val19 = data1[(alu2+3)];
    var val20 = data1[(alu2+64)];
    var val21 = data1[(alu2+65)];
    var val22 = data1[(alu2+66)];
    var val23 = data1[(alu2+67)];
    var val24 = data1[(alu2+128)];
    var val25 = data1[(alu2+129)];
    var val26 = data1[(alu2+130)];
    var val27 = data1[(alu2+131)];
    var val28 = data1[(alu2+192)];
    var val29 = data1[(alu2+193)];
    var val30 = data1[(alu2+194)];
    var val31 = data1[(alu2+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu20 = ((gidx0<<5)+(lidx0<<2));
  var val32 = data3[alu20];
  var val33 = data4[alu20];
  var val34 = data5[alu20];
  var val35 = data6[alu20];
  var alu21 = (alu20+1);
  var val36 = data3[alu21];
  var val37 = data4[alu21];
  var val38 = data5[alu21];
  var val39 = data6[alu21];
  var alu22 = (alu20+2);
  var val40 = data3[alu22];
  var val41 = data4[alu22];
  var val42 = data5[alu22];
  var val43 = data6[alu22];
  var alu23 = (alu20+3);
  var val44 = data3[alu23];
  var val45 = data4[alu23];
  var val46 = data5[alu23];
  var val47 = data6[alu23];
  var alu24 = sqrt((1/(val38+0.001f)));
  var alu25 = sqrt((1/(val42+0.001f)));
  var alu26 = sqrt((1/(val46+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = ((gidx0<<11)+(lidx0<<8)+alu0);
  var alu29 = (val35+(alu27*val33*(acc0-val32)));
  data0[alu28] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  var alu31 = (val39+(alu24*val37*(acc1-val36)));
  data0[(alu28+64)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val43+(alu25*val41*(acc2-val40)));
  data0[(alu28+128)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val47+(alu26*val45*(acc3-val44)));
  data0[(alu28+192)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val35+(alu27*val33*(acc4-val32)));
  data0[(alu28+1)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val39+(alu24*val37*(acc5-val36)));
  data0[(alu28+65)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val43+(alu25*val41*(acc6-val40)));
  data0[(alu28+129)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val47+(alu26*val45*(acc7-val44)));
  data0[(alu28+193)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val35+(alu27*val33*(acc8-val32)));
  data0[(alu28+2)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val39+(alu24*val37*(acc9-val36)));
  data0[(alu28+66)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val43+(alu25*val41*(acc10-val40)));
  data0[(alu28+130)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val47+(alu26*val45*(acc11-val44)));
  data0[(alu28+194)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val35+(alu27*val33*(acc12-val32)));
  data0[(alu28+3)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val39+(alu24*val37*(acc13-val36)));
  data0[(alu28+67)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val43+(alu25*val41*(acc14-val40)));
  data0[(alu28+131)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val47+(alu26*val45*(acc15-val44)));
  data0[(alu28+195)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
}`;

const r_64_2_8_8_5_5 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@compute @workgroup_size(2,8,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 64 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 8 */
  var alu0 = ((gidx0<<7)+(lidx0<<6));
  var alu1 = (lidx1<<3);
  var acc0 = (f32(-INFINITY));
  for (var ridx0 = 0; ridx0 < 5; ridx0++) {
    var alu2 = (lidx1+ridx0);
    var alu3 = (lidx2+alu0+alu1+(ridx0<<3));
    var alu4 = ((alu2<10)&((alu2<2)!=true));
    var val0 = select(0.0f, data1[(alu3+-16)], alu4);
    var val1 = select(0.0f, data1[(alu3+-14)], ((lidx2<6)&alu4));
    var val2 = select(0.0f, data1[(alu3+-15)], ((lidx2<7)&alu4));
    var val3 = select(0.0f, data1[(alu3+-17)], (((lidx2<1)!=true)&alu4));
    var val4 = select(0.0f, data1[(alu3+-18)], (((lidx2<2)!=true)&alu4));
    var alu5 = select(val4,val3,(val4<val3));
    var alu6 = select(val0,alu5,(val0<alu5));
    var alu7 = select(val2,alu6,(val2<alu6));
    var alu8 = select(val1,alu7,(val1<alu7));
    acc0 = select(acc0,alu8,(acc0<alu8));
  }
  data0[(lidx2+alu0+alu1)] = acc0;
}`;

const E_64_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 64 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<16);
  var alu1 = (gidx0<32);
  var alu2 = (gidx0<48);
  var alu3 = (alu2!=true);
  var alu4 = ((gidx0<<9)+(lidx0<<6)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu4], alu0);
  var val1 = select(0.0f, data4[(alu4+-24576)], alu3);
  var val2 = select(0.0f, data4[(alu4+-24575)], alu3);
  var val3 = select(0.0f, data4[(alu4+-24574)], alu3);
  var val4 = select(0.0f, data4[(alu4+-24573)], alu3);
  var alu5 = (alu4+1);
  var val5 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu4+2);
  var val6 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu4+3);
  var val7 = select(0.0f, data1[alu7], alu0);
  var alu8 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data2[(alu4+-8192)], alu8);
  var val9 = select(0.0f, data2[(alu4+-8191)], alu8);
  var val10 = select(0.0f, data2[(alu4+-8190)], alu8);
  var val11 = select(0.0f, data2[(alu4+-8189)], alu8);
  var alu9 = (alu2&(alu1!=true));
  var val12 = select(0.0f, data3[(alu4+-16384)], alu9);
  var val13 = select(0.0f, data3[(alu4+-16383)], alu9);
  var val14 = select(0.0f, data3[(alu4+-16382)], alu9);
  var val15 = select(0.0f, data3[(alu4+-16381)], alu9);
  data0[alu4] = (val1+val12+val0+val8);
  data0[alu5] = (val2+val13+val5+val9);
  data0[alu6] = (val3+val14+val6+val10);
  data0[alu7] = (val4+val15+val7+val11);
}`;

const r_8_8_16_128_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu1 = ((gidx0<<14)+(lidx0<<11)+(ridx0<<2));
    var val0 = data2[alu1];
    var val1 = data2[(alu1+1)];
    var val2 = data2[(alu1+2)];
    var val3 = data2[(alu1+3)];
    var val4 = data2[(alu1+512)];
    var val5 = data2[(alu1+513)];
    var val6 = data2[(alu1+514)];
    var val7 = data2[(alu1+515)];
    var val8 = data2[(alu1+1024)];
    var val9 = data2[(alu1+1025)];
    var val10 = data2[(alu1+1026)];
    var val11 = data2[(alu1+1027)];
    var val12 = data2[(alu1+1536)];
    var val13 = data2[(alu1+1537)];
    var val14 = data2[(alu1+1538)];
    var val15 = data2[(alu1+1539)];
    var alu2 = (alu0+(ridx0<<8));
    var val16 = data1[alu2];
    var val17 = data1[(alu2+1)];
    var val18 = data1[(alu2+2)];
    var val19 = data1[(alu2+3)];
    var val20 = data1[(alu2+64)];
    var val21 = data1[(alu2+65)];
    var val22 = data1[(alu2+66)];
    var val23 = data1[(alu2+67)];
    var val24 = data1[(alu2+128)];
    var val25 = data1[(alu2+129)];
    var val26 = data1[(alu2+130)];
    var val27 = data1[(alu2+131)];
    var val28 = data1[(alu2+192)];
    var val29 = data1[(alu2+193)];
    var val30 = data1[(alu2+194)];
    var val31 = data1[(alu2+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu20 = ((gidx0<<5)+(lidx0<<2));
  var val32 = data3[alu20];
  var val33 = data4[alu20];
  var val34 = data5[alu20];
  var val35 = data6[alu20];
  var alu21 = (alu20+1);
  var val36 = data3[alu21];
  var val37 = data4[alu21];
  var val38 = data5[alu21];
  var val39 = data6[alu21];
  var alu22 = (alu20+2);
  var val40 = data3[alu22];
  var val41 = data4[alu22];
  var val42 = data5[alu22];
  var val43 = data6[alu22];
  var alu23 = (alu20+3);
  var val44 = data3[alu23];
  var val45 = data4[alu23];
  var val46 = data5[alu23];
  var val47 = data6[alu23];
  var alu24 = sqrt((1/(val38+0.001f)));
  var alu25 = sqrt((1/(val42+0.001f)));
  var alu26 = sqrt((1/(val46+0.001f)));
  var alu27 = sqrt((1/(val34+0.001f)));
  var alu28 = ((gidx0<<11)+(lidx0<<8)+alu0);
  var alu29 = (val35+(alu27*val33*(acc0-val32)));
  data0[alu28] = ((1/(exp2((alu29*-1.4426950408889634f))+1.0f))*alu29);
  var alu31 = (val39+(alu24*val37*(acc1-val36)));
  data0[(alu28+64)] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val43+(alu25*val41*(acc2-val40)));
  data0[(alu28+128)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val47+(alu26*val45*(acc3-val44)));
  data0[(alu28+192)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val35+(alu27*val33*(acc4-val32)));
  data0[(alu28+1)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val39+(alu24*val37*(acc5-val36)));
  data0[(alu28+65)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val43+(alu25*val41*(acc6-val40)));
  data0[(alu28+129)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val47+(alu26*val45*(acc7-val44)));
  data0[(alu28+193)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val35+(alu27*val33*(acc8-val32)));
  data0[(alu28+2)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val39+(alu24*val37*(acc9-val36)));
  data0[(alu28+66)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val43+(alu25*val41*(acc10-val40)));
  data0[(alu28+130)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val47+(alu26*val45*(acc11-val44)));
  data0[(alu28+194)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val35+(alu27*val33*(acc12-val32)));
  data0[(alu28+3)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val39+(alu24*val37*(acc13-val36)));
  data0[(alu28+67)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val43+(alu25*val41*(acc14-val40)));
  data0[(alu28+131)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val47+(alu26*val45*(acc15-val44)));
  data0[(alu28+195)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
}`;

const E_192_2_16_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 192 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (gidx0<128);
  var alu1 = (alu0!=true);
  var alu2 = ((gidx0<<9)+(lidx0<<8)+(lidx1<<4)+(lidx2<<2));
  var val0 = select(0.0f, data2[(alu2+-65536)], alu1);
  var val1 = select(0.0f, data2[(alu2+-65535)], alu1);
  var val2 = select(0.0f, data2[(alu2+-65534)], alu1);
  var val3 = select(0.0f, data2[(alu2+-65533)], alu1);
  var alu3 = ((gidx0<<7)+(lidx0<<6)+((lidx1>>1)<<3)+(lidx2<<1));
  var val4 = select(0.0f, data1[alu3], alu0);
  var val5 = select(0.0f, data1[(alu3+1)], alu0);
  data0[(alu2+2)] = (val5+val2);
  data0[(alu2+3)] = (val5+val3);
  data0[alu2] = (val4+val0);
  data0[(alu2+1)] = (val4+val1);
}`;

const r_4_4_8_16_96_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 96; ridx0++) {
    var alu2 = ((gidx1*12288)+(lidx0*1536)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+384)];
    var val5 = data2[(alu2+385)];
    var val6 = data2[(alu2+386)];
    var val7 = data2[(alu2+387)];
    var val8 = data2[(alu2+768)];
    var val9 = data2[(alu2+769)];
    var val10 = data2[(alu2+770)];
    var val11 = data2[(alu2+771)];
    var val12 = data2[(alu2+1152)];
    var val13 = data2[(alu2+1153)];
    var val14 = data2[(alu2+1154)];
    var val15 = data2[(alu2+1155)];
    var alu3 = (alu0+alu1+(ridx0<<10));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+256)];
    var val21 = data1[(alu3+257)];
    var val22 = data1[(alu3+258)];
    var val23 = data1[(alu3+259)];
    var val24 = data1[(alu3+512)];
    var val25 = data1[(alu3+513)];
    var val26 = data1[(alu3+514)];
    var val27 = data1[(alu3+515)];
    var val28 = data1[(alu3+768)];
    var val29 = data1[(alu3+769)];
    var val30 = data1[(alu3+770)];
    var val31 = data1[(alu3+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<13)+(lidx0<<10)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+256)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+512)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+768)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+257)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+513)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+769)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+258)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+514)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+770)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+259)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+515)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+771)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const E_24_4_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 24 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<8);
  var alu1 = (gidx1<16);
  var alu2 = (alu1!=true);
  var alu3 = ((gidx0<<6)+(gidx1<<11)+(lidx0<<8)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu3], alu0);
  var val1 = select(0.0f, data2[(alu3+-32768)], alu2);
  var val2 = select(0.0f, data2[(alu3+-32767)], alu2);
  var val3 = select(0.0f, data2[(alu3+-32766)], alu2);
  var val4 = select(0.0f, data2[(alu3+-32765)], alu2);
  var alu4 = (alu3+1);
  var val5 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu3+2);
  var val6 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu3+3);
  var val7 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu4], alu7);
  var val9 = select(0.0f, data1[alu5], alu7);
  var val10 = select(0.0f, data1[alu6], alu7);
  var val11 = select(0.0f, data1[alu3], alu7);
  data0[alu3] = (val1+val0+val11);
  data0[alu4] = (val2+val5+val8);
  data0[alu5] = (val3+val6+val9);
  data0[alu6] = (val4+val7+val10);
}`;

const r_4_4_8_16_48_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 48; ridx0++) {
    var alu2 = ((gidx1*6144)+(lidx0*768)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+192)];
    var val5 = data2[(alu2+193)];
    var val6 = data2[(alu2+194)];
    var val7 = data2[(alu2+195)];
    var val8 = data2[(alu2+384)];
    var val9 = data2[(alu2+385)];
    var val10 = data2[(alu2+386)];
    var val11 = data2[(alu2+387)];
    var val12 = data2[(alu2+576)];
    var val13 = data2[(alu2+577)];
    var val14 = data2[(alu2+578)];
    var val15 = data2[(alu2+579)];
    var alu3 = (alu0+alu1+(ridx0<<10));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+256)];
    var val21 = data1[(alu3+257)];
    var val22 = data1[(alu3+258)];
    var val23 = data1[(alu3+259)];
    var val24 = data1[(alu3+512)];
    var val25 = data1[(alu3+513)];
    var val26 = data1[(alu3+514)];
    var val27 = data1[(alu3+515)];
    var val28 = data1[(alu3+768)];
    var val29 = data1[(alu3+769)];
    var val30 = data1[(alu3+770)];
    var val31 = data1[(alu3+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<13)+(lidx0<<10)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+256)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+512)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+768)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+257)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+513)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+769)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+258)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+514)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+770)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+259)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+515)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+771)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const E_192_2_16_8_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 192 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx1<128);
  var alu1 = (alu0!=true);
  var alu2 = ((gidx0<<9)+(gidx1<<10)+(lidx0<<5)+(lidx1<<2));
  var val0 = select(0.0f, data2[(alu2+-131072)], alu1);
  var val1 = select(0.0f, data2[(alu2+-131071)], alu1);
  var val2 = select(0.0f, data2[(alu2+-131070)], alu1);
  var val3 = select(0.0f, data2[(alu2+-131069)], alu1);
  var alu3 = ((gidx0<<7)+(gidx1<<8)+((lidx0>>1)<<4)+(lidx1<<1));
  var val4 = select(0.0f, data1[alu3], alu0);
  var val5 = select(0.0f, data1[(alu3+1)], alu0);
  data0[(alu2+2)] = (val5+val2);
  data0[(alu2+3)] = (val5+val3);
  data0[alu2] = (val4+val0);
  data0[(alu2+1)] = (val4+val1);
}`;

const r_2_16_8_16_48_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 48; ridx0++) {
    var alu2 = ((gidx1*6144)+(lidx0*768)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+192)];
    var val5 = data2[(alu2+193)];
    var val6 = data2[(alu2+194)];
    var val7 = data2[(alu2+195)];
    var val8 = data2[(alu2+384)];
    var val9 = data2[(alu2+385)];
    var val10 = data2[(alu2+386)];
    var val11 = data2[(alu2+387)];
    var val12 = data2[(alu2+576)];
    var val13 = data2[(alu2+577)];
    var val14 = data2[(alu2+578)];
    var val15 = data2[(alu2+579)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<15)+(lidx0<<12)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+1024)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+2048)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+3072)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+1025)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+2049)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+3073)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+1026)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+2050)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+3074)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+1027)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+2051)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+3075)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const E_12_16_8_16_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 12 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<4);
  var alu1 = (gidx1<8);
  var alu2 = (alu1!=true);
  var alu3 = ((gidx0<<6)+(gidx1<<13)+(lidx0<<10)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu3], alu0);
  var val1 = select(0.0f, data2[(alu3+-65536)], alu2);
  var val2 = select(0.0f, data2[(alu3+-65535)], alu2);
  var val3 = select(0.0f, data2[(alu3+-65534)], alu2);
  var val4 = select(0.0f, data2[(alu3+-65533)], alu2);
  var alu4 = (alu3+1);
  var val5 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu3+2);
  var val6 = select(0.0f, data1[alu5], alu0);
  var alu6 = (alu3+3);
  var val7 = select(0.0f, data1[alu6], alu0);
  var alu7 = (alu1&(alu0!=true));
  var val8 = select(0.0f, data1[alu4], alu7);
  var val9 = select(0.0f, data1[alu5], alu7);
  var val10 = select(0.0f, data1[alu6], alu7);
  var val11 = select(0.0f, data1[alu3], alu7);
  data0[alu3] = (val1+val0+val11);
  data0[alu4] = (val2+val5+val8);
  data0[alu5] = (val3+val6+val9);
  data0[alu6] = (val4+val7+val10);
}`;

const r_2_16_8_16_24_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 24; ridx0++) {
    var alu2 = ((gidx1*3072)+(lidx0*384)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+96)];
    var val5 = data2[(alu2+97)];
    var val6 = data2[(alu2+98)];
    var val7 = data2[(alu2+99)];
    var val8 = data2[(alu2+192)];
    var val9 = data2[(alu2+193)];
    var val10 = data2[(alu2+194)];
    var val11 = data2[(alu2+195)];
    var val12 = data2[(alu2+288)];
    var val13 = data2[(alu2+289)];
    var val14 = data2[(alu2+290)];
    var val15 = data2[(alu2+291)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data4[alu21];
  var val34 = data5[alu21];
  var val35 = data6[alu21];
  var alu22 = (alu21+1);
  var val36 = data3[alu22];
  var val37 = data4[alu22];
  var val38 = data5[alu22];
  var val39 = data6[alu22];
  var alu23 = (alu21+2);
  var val40 = data3[alu23];
  var val41 = data4[alu23];
  var val42 = data5[alu23];
  var val43 = data6[alu23];
  var alu24 = (alu21+3);
  var val44 = data3[alu24];
  var val45 = data4[alu24];
  var val46 = data5[alu24];
  var val47 = data6[alu24];
  var alu25 = sqrt((1/(val38+0.001f)));
  var alu26 = sqrt((1/(val42+0.001f)));
  var alu27 = sqrt((1/(val46+0.001f)));
  var alu28 = sqrt((1/(val34+0.001f)));
  var alu29 = (alu0+(gidx1<<15)+(lidx0<<12)+alu1);
  var alu30 = (val35+(alu28*val33*(acc0-val32)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val39+(alu25*val37*(acc1-val36)));
  data0[(alu29+1024)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val43+(alu26*val41*(acc2-val40)));
  data0[(alu29+2048)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val47+(alu27*val45*(acc3-val44)));
  data0[(alu29+3072)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val35+(alu28*val33*(acc4-val32)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val39+(alu25*val37*(acc5-val36)));
  data0[(alu29+1025)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val43+(alu26*val41*(acc6-val40)));
  data0[(alu29+2049)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val47+(alu27*val45*(acc7-val44)));
  data0[(alu29+3073)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val35+(alu28*val33*(acc8-val32)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val39+(alu25*val37*(acc9-val36)));
  data0[(alu29+1026)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val43+(alu26*val41*(acc10-val40)));
  data0[(alu29+2050)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val47+(alu27*val45*(acc11-val44)));
  data0[(alu29+3074)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val35+(alu28*val33*(acc12-val32)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val39+(alu25*val37*(acc13-val36)));
  data0[(alu29+1027)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val43+(alu26*val41*(acc14-val40)));
  data0[(alu29+2051)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val47+(alu27*val45*(acc15-val44)));
  data0[(alu29+3075)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_16_2_16_8_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 16 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu7 = ((gidx1*2304)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+576)];
    var val10 = data2[(alu7+577)];
    var val11 = data2[(alu7+578)];
    var val12 = data2[(alu7+579)];
    var val13 = data2[(alu7+580)];
    var val14 = data2[(alu7+581)];
    var val15 = data2[(alu7+582)];
    var val16 = data2[(alu7+583)];
    var val17 = data2[(alu7+584)];
    var val18 = data2[(alu7+1152)];
    var val19 = data2[(alu7+1153)];
    var val20 = data2[(alu7+1154)];
    var val21 = data2[(alu7+1155)];
    var val22 = data2[(alu7+1156)];
    var val23 = data2[(alu7+1157)];
    var val24 = data2[(alu7+1158)];
    var val25 = data2[(alu7+1159)];
    var val26 = data2[(alu7+1160)];
    var val27 = data2[(alu7+1728)];
    var val28 = data2[(alu7+1729)];
    var val29 = data2[(alu7+1730)];
    var val30 = data2[(alu7+1731)];
    var val31 = data2[(alu7+1732)];
    var val32 = data2[(alu7+1733)];
    var val33 = data2[(alu7+1734)];
    var val34 = data2[(alu7+1735)];
    var val35 = data2[(alu7+1736)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data1[(alu8+-32)], alu4);
    var val39 = select(0.0f, data1[(alu8+-31)], alu4);
    var val40 = select(0.0f, data1[(alu8+-30)], alu4);
    var val41 = select(0.0f, data1[(alu8+-29)], alu4);
    var val42 = select(0.0f, data1[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data1[(alu8+-1)], alu3);
    var val44 = data1[(alu8+1)];
    var val45 = data1[(alu8+2)];
    var val46 = data1[(alu8+3)];
    var val47 = select(0.0f, data1[(alu8+4)], alu6);
    var val48 = select(0.0f, data1[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+32)], alu5);
    var val50 = select(0.0f, data1[(alu8+33)], alu5);
    var val51 = select(0.0f, data1[(alu8+34)], alu5);
    var val52 = select(0.0f, data1[(alu8+35)], alu5);
    var val53 = select(0.0f, data1[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<12)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+1024)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+2048)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+3072)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+1025)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+2049)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+3073)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+1026)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+2050)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+3074)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+1027)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+2051)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+3075)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_20_2_16_8_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 20 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu7 = ((gidx1*2304)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+576)];
    var val10 = data2[(alu7+577)];
    var val11 = data2[(alu7+578)];
    var val12 = data2[(alu7+579)];
    var val13 = data2[(alu7+580)];
    var val14 = data2[(alu7+581)];
    var val15 = data2[(alu7+582)];
    var val16 = data2[(alu7+583)];
    var val17 = data2[(alu7+584)];
    var val18 = data2[(alu7+1152)];
    var val19 = data2[(alu7+1153)];
    var val20 = data2[(alu7+1154)];
    var val21 = data2[(alu7+1155)];
    var val22 = data2[(alu7+1156)];
    var val23 = data2[(alu7+1157)];
    var val24 = data2[(alu7+1158)];
    var val25 = data2[(alu7+1159)];
    var val26 = data2[(alu7+1160)];
    var val27 = data2[(alu7+1728)];
    var val28 = data2[(alu7+1729)];
    var val29 = data2[(alu7+1730)];
    var val30 = data2[(alu7+1731)];
    var val31 = data2[(alu7+1732)];
    var val32 = data2[(alu7+1733)];
    var val33 = data2[(alu7+1734)];
    var val34 = data2[(alu7+1735)];
    var val35 = data2[(alu7+1736)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data1[(alu8+-32)], alu4);
    var val39 = select(0.0f, data1[(alu8+-31)], alu4);
    var val40 = select(0.0f, data1[(alu8+-30)], alu4);
    var val41 = select(0.0f, data1[(alu8+-29)], alu4);
    var val42 = select(0.0f, data1[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data1[(alu8+-1)], alu3);
    var val44 = data1[(alu8+1)];
    var val45 = data1[(alu8+2)];
    var val46 = data1[(alu8+3)];
    var val47 = select(0.0f, data1[(alu8+4)], alu6);
    var val48 = select(0.0f, data1[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+32)], alu5);
    var val50 = select(0.0f, data1[(alu8+33)], alu5);
    var val51 = select(0.0f, data1[(alu8+34)], alu5);
    var val52 = select(0.0f, data1[(alu8+35)], alu5);
    var val53 = select(0.0f, data1[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<12)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+1024)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+2048)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+3072)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+1025)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+2049)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+3073)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+1026)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+2050)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+3074)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+1027)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+2051)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+3075)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_8_2_16_4_64_4_4_3_3n4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = ((lidx2<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu2 = ((gidx0*4608)+(lidx0*2304)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+576)];
    var val10 = data2[(alu2+577)];
    var val11 = data2[(alu2+578)];
    var val12 = data2[(alu2+579)];
    var val13 = data2[(alu2+580)];
    var val14 = data2[(alu2+581)];
    var val15 = data2[(alu2+582)];
    var val16 = data2[(alu2+583)];
    var val17 = data2[(alu2+584)];
    var val18 = data2[(alu2+1152)];
    var val19 = data2[(alu2+1153)];
    var val20 = data2[(alu2+1154)];
    var val21 = data2[(alu2+1155)];
    var val22 = data2[(alu2+1156)];
    var val23 = data2[(alu2+1157)];
    var val24 = data2[(alu2+1158)];
    var val25 = data2[(alu2+1159)];
    var val26 = data2[(alu2+1160)];
    var val27 = data2[(alu2+1728)];
    var val28 = data2[(alu2+1729)];
    var val29 = data2[(alu2+1730)];
    var val30 = data2[(alu2+1731)];
    var val31 = data2[(alu2+1732)];
    var val32 = data2[(alu2+1733)];
    var val33 = data2[(alu2+1734)];
    var val34 = data2[(alu2+1735)];
    var val35 = data2[(alu2+1736)];
    var alu3 = ((lidx1<<6)+(ridx0<<10)+(lidx2<<3));
    var val36 = data1[alu3];
    var val37 = select(0.0f, data1[(alu3+-33)], (alu0&alu1));
    var val38 = select(0.0f, data1[(alu3+-32)], alu0);
    var val39 = select(0.0f, data1[(alu3+-31)], alu0);
    var val40 = select(0.0f, data1[(alu3+-30)], alu0);
    var val41 = select(0.0f, data1[(alu3+-29)], alu0);
    var val42 = select(0.0f, data1[(alu3+-28)], alu0);
    var val43 = select(0.0f, data1[(alu3+-27)], alu0);
    var val44 = select(0.0f, data1[(alu3+-26)], alu0);
    var val45 = select(0.0f, data1[(alu3+-25)], alu0);
    var val46 = select(0.0f, data1[(alu3+-1)], alu1);
    var val47 = data1[(alu3+1)];
    var val48 = data1[(alu3+2)];
    var val49 = data1[(alu3+3)];
    var val50 = data1[(alu3+4)];
    var val51 = data1[(alu3+5)];
    var val52 = data1[(alu3+6)];
    var val53 = data1[(alu3+7)];
    var val54 = select(0.0f, data1[(alu3+31)], alu1);
    var val55 = data1[(alu3+32)];
    var val56 = data1[(alu3+33)];
    var val57 = data1[(alu3+34)];
    var val58 = data1[(alu3+35)];
    var val59 = data1[(alu3+36)];
    var val60 = data1[(alu3+37)];
    var val61 = data1[(alu3+38)];
    var val62 = data1[(alu3+39)];
    acc0 = (acc0+(val37*val0)+(val46*val3)+(val54*val6)+(val38*val1)+(val36*val4)+(val55*val7)+(val39*val2)+(val47*val5)+(val56*val8));
    acc1 = (acc1+(val37*val9)+(val46*val12)+(val54*val15)+(val38*val10)+(val36*val13)+(val55*val16)+(val39*val11)+(val47*val14)+(val56*val17));
    acc2 = (acc2+(val37*val18)+(val46*val21)+(val54*val24)+(val38*val19)+(val36*val22)+(val55*val25)+(val39*val20)+(val47*val23)+(val56*val26));
    acc3 = (acc3+(val37*val27)+(val46*val30)+(val54*val33)+(val38*val28)+(val36*val31)+(val55*val34)+(val39*val29)+(val47*val32)+(val56*val35));
    acc4 = (acc4+(val39*val0)+(val47*val3)+(val56*val6)+(val40*val1)+(val48*val4)+(val57*val7)+(val41*val2)+(val49*val5)+(val58*val8));
    acc5 = (acc5+(val39*val9)+(val47*val12)+(val56*val15)+(val40*val10)+(val48*val13)+(val57*val16)+(val41*val11)+(val49*val14)+(val58*val17));
    acc6 = (acc6+(val39*val18)+(val47*val21)+(val56*val24)+(val40*val19)+(val48*val22)+(val57*val25)+(val41*val20)+(val49*val23)+(val58*val26));
    acc7 = (acc7+(val39*val27)+(val47*val30)+(val56*val33)+(val40*val28)+(val48*val31)+(val57*val34)+(val41*val29)+(val49*val32)+(val58*val35));
    acc8 = (acc8+(val41*val0)+(val49*val3)+(val58*val6)+(val42*val1)+(val50*val4)+(val59*val7)+(val43*val2)+(val51*val5)+(val60*val8));
    acc9 = (acc9+(val41*val9)+(val49*val12)+(val58*val15)+(val42*val10)+(val50*val13)+(val59*val16)+(val43*val11)+(val51*val14)+(val60*val17));
    acc10 = (acc10+(val41*val18)+(val49*val21)+(val58*val24)+(val42*val19)+(val50*val22)+(val59*val25)+(val43*val20)+(val51*val23)+(val60*val26));
    acc11 = (acc11+(val41*val27)+(val49*val30)+(val58*val33)+(val42*val28)+(val50*val31)+(val59*val34)+(val43*val29)+(val51*val32)+(val60*val35));
    acc12 = (acc12+(val43*val0)+(val51*val3)+(val60*val6)+(val44*val1)+(val52*val4)+(val61*val7)+(val45*val2)+(val53*val5)+(val62*val8));
    acc13 = (acc13+(val43*val9)+(val51*val12)+(val60*val15)+(val44*val10)+(val52*val13)+(val61*val16)+(val45*val11)+(val53*val14)+(val62*val17));
    acc14 = (acc14+(val43*val18)+(val51*val21)+(val60*val24)+(val44*val19)+(val52*val22)+(val61*val25)+(val45*val20)+(val53*val23)+(val62*val26));
    acc15 = (acc15+(val43*val27)+(val51*val30)+(val60*val33)+(val44*val28)+(val52*val31)+(val61*val34)+(val45*val29)+(val53*val32)+(val62*val35));
  }
  var alu21 = ((gidx0<<3)+(lidx0<<2));
  var val63 = data3[alu21];
  var val64 = data4[alu21];
  var val65 = data5[alu21];
  var val66 = data6[alu21];
  var alu22 = (alu21+1);
  var val67 = data3[alu22];
  var val68 = data4[alu22];
  var val69 = data5[alu22];
  var val70 = data6[alu22];
  var alu23 = (alu21+2);
  var val71 = data3[alu23];
  var val72 = data4[alu23];
  var val73 = data5[alu23];
  var val74 = data6[alu23];
  var alu24 = (alu21+3);
  var val75 = data3[alu24];
  var val76 = data4[alu24];
  var val77 = data5[alu24];
  var val78 = data6[alu24];
  var alu25 = sqrt((1/(val69+0.001f)));
  var alu26 = sqrt((1/(val73+0.001f)));
  var alu27 = sqrt((1/(val77+0.001f)));
  var alu28 = sqrt((1/(val65+0.001f)));
  var alu29 = ((gidx0<<11)+(lidx0<<10)+(lidx1<<4)+(lidx2<<2));
  var alu30 = (val66+(alu28*val64*(acc0-val63)));
  data0[alu29] = ((1/(exp2((alu30*-1.4426950408889634f))+1.0f))*alu30);
  var alu32 = (val70+(alu25*val68*(acc1-val67)));
  data0[(alu29+256)] = ((1/(exp2((alu32*-1.4426950408889634f))+1.0f))*alu32);
  var alu34 = (val74+(alu26*val72*(acc2-val71)));
  data0[(alu29+512)] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val78+(alu27*val76*(acc3-val75)));
  data0[(alu29+768)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val66+(alu28*val64*(acc4-val63)));
  data0[(alu29+1)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val70+(alu25*val68*(acc5-val67)));
  data0[(alu29+257)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val74+(alu26*val72*(acc6-val71)));
  data0[(alu29+513)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val78+(alu27*val76*(acc7-val75)));
  data0[(alu29+769)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val66+(alu28*val64*(acc8-val63)));
  data0[(alu29+2)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val70+(alu25*val68*(acc9-val67)));
  data0[(alu29+258)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val74+(alu26*val72*(acc10-val71)));
  data0[(alu29+514)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val78+(alu27*val76*(acc11-val75)));
  data0[(alu29+770)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val66+(alu28*val64*(acc12-val63)));
  data0[(alu29+3)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val70+(alu25*val68*(acc13-val67)));
  data0[(alu29+259)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val74+(alu26*val72*(acc14-val71)));
  data0[(alu29+515)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val78+(alu27*val76*(acc15-val75)));
  data0[(alu29+771)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
}`;

const r_20_2_16_8_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(16,8) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var gidx1 = i32(gindex.y); /* 20 */
  var lidx0 = i32(lindex.x); /* 16 */
  var lidx1 = i32(lindex.y); /* 8 */
  var alu0 = (gidx0<<9);
  var alu1 = (lidx0<<5);
  var alu2 = (lidx1<<2);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (((gidx0+lidx0)<1)!=true);
  var alu5 = ((lidx0+(gidx0<<4))<31);
  var alu6 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu7 = ((gidx1*2880)+(ridx0*9));
    var val0 = data2[alu7];
    var val1 = data2[(alu7+1)];
    var val2 = data2[(alu7+2)];
    var val3 = data2[(alu7+3)];
    var val4 = data2[(alu7+4)];
    var val5 = data2[(alu7+5)];
    var val6 = data2[(alu7+6)];
    var val7 = data2[(alu7+7)];
    var val8 = data2[(alu7+8)];
    var val9 = data2[(alu7+720)];
    var val10 = data2[(alu7+721)];
    var val11 = data2[(alu7+722)];
    var val12 = data2[(alu7+723)];
    var val13 = data2[(alu7+724)];
    var val14 = data2[(alu7+725)];
    var val15 = data2[(alu7+726)];
    var val16 = data2[(alu7+727)];
    var val17 = data2[(alu7+728)];
    var val18 = data2[(alu7+1440)];
    var val19 = data2[(alu7+1441)];
    var val20 = data2[(alu7+1442)];
    var val21 = data2[(alu7+1443)];
    var val22 = data2[(alu7+1444)];
    var val23 = data2[(alu7+1445)];
    var val24 = data2[(alu7+1446)];
    var val25 = data2[(alu7+1447)];
    var val26 = data2[(alu7+1448)];
    var val27 = data2[(alu7+2160)];
    var val28 = data2[(alu7+2161)];
    var val29 = data2[(alu7+2162)];
    var val30 = data2[(alu7+2163)];
    var val31 = data2[(alu7+2164)];
    var val32 = data2[(alu7+2165)];
    var val33 = data2[(alu7+2166)];
    var val34 = data2[(alu7+2167)];
    var val35 = data2[(alu7+2168)];
    var alu8 = (alu0+alu1+(ridx0<<10)+alu2);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-33)], (alu3&alu4));
    var val38 = select(0.0f, data1[(alu8+-32)], alu4);
    var val39 = select(0.0f, data1[(alu8+-31)], alu4);
    var val40 = select(0.0f, data1[(alu8+-30)], alu4);
    var val41 = select(0.0f, data1[(alu8+-29)], alu4);
    var val42 = select(0.0f, data1[(alu8+-28)], (alu6&alu4));
    var val43 = select(0.0f, data1[(alu8+-1)], alu3);
    var val44 = data1[(alu8+1)];
    var val45 = data1[(alu8+2)];
    var val46 = data1[(alu8+3)];
    var val47 = select(0.0f, data1[(alu8+4)], alu6);
    var val48 = select(0.0f, data1[(alu8+31)], (alu5&alu3));
    var val49 = select(0.0f, data1[(alu8+32)], alu5);
    var val50 = select(0.0f, data1[(alu8+33)], alu5);
    var val51 = select(0.0f, data1[(alu8+34)], alu5);
    var val52 = select(0.0f, data1[(alu8+35)], alu5);
    var val53 = select(0.0f, data1[(alu8+36)], (alu6&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu26 = (gidx1<<2);
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = (alu0+(gidx1<<12)+alu1+alu2);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+1024)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+2048)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+3072)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+1025)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+2049)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+3073)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+1026)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+2050)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+3074)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+1027)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+2051)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+3075)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const E_24_4_8_16_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 24 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx1<8);
  var alu1 = (alu0!=true);
  var alu2 = ((gidx0<<6)+(gidx1<<11)+(lidx0<<8)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu2], alu0);
  var val1 = select(0.0f, data2[(alu2+-16384)], alu1);
  var val2 = select(0.0f, data2[(alu2+-16383)], alu1);
  var val3 = select(0.0f, data2[(alu2+-16382)], alu1);
  var val4 = select(0.0f, data2[(alu2+-16381)], alu1);
  var alu3 = (alu2+1);
  var val5 = select(0.0f, data1[alu3], alu0);
  var alu4 = (alu2+2);
  var val6 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu2+3);
  var val7 = select(0.0f, data1[alu5], alu0);
  data0[alu3] = (val5+val2);
  data0[alu4] = (val6+val3);
  data0[alu5] = (val7+val4);
  data0[alu2] = (val0+val1);
}`;

const r_2_16_8_16_16_4_4_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+64)];
    var val5 = data2[(alu2+65)];
    var val6 = data2[(alu2+66)];
    var val7 = data2[(alu2+67)];
    var val8 = data2[(alu2+128)];
    var val9 = data2[(alu2+129)];
    var val10 = data2[(alu2+130)];
    var val11 = data2[(alu2+131)];
    var val12 = data2[(alu2+192)];
    var val13 = data2[(alu2+193)];
    var val14 = data2[(alu2+194)];
    var val15 = data2[(alu2+195)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  var alu22 = (alu0+(gidx1<<15)+(lidx0<<12)+alu1);
  data0[alu22] = (val32+acc0);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+1024)] = (val33+acc1);
  data0[(alu22+1025)] = (val33+acc5);
  data0[(alu22+1026)] = (val33+acc9);
  data0[(alu22+1027)] = (val33+acc13);
  data0[(alu22+2048)] = (val34+acc2);
  data0[(alu22+2049)] = (val34+acc6);
  data0[(alu22+2050)] = (val34+acc10);
  data0[(alu22+2051)] = (val34+acc14);
  data0[(alu22+3072)] = (val35+acc3);
  data0[(alu22+3073)] = (val35+acc7);
  data0[(alu22+3074)] = (val35+acc11);
  data0[(alu22+3075)] = (val35+acc15);
}`;

const r_5_16_4_16_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 16 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu2 = ((gidx1*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+80)];
    var val5 = data2[(alu2+81)];
    var val6 = data2[(alu2+82)];
    var val7 = data2[(alu2+83)];
    var val8 = data2[(alu2+160)];
    var val9 = data2[(alu2+161)];
    var val10 = data2[(alu2+162)];
    var val11 = data2[(alu2+163)];
    var val12 = data2[(alu2+240)];
    var val13 = data2[(alu2+241)];
    var val14 = data2[(alu2+242)];
    var val15 = data2[(alu2+243)];
    var alu3 = (alu0+alu1+(ridx0<<12));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+1024)];
    var val21 = data1[(alu3+1025)];
    var val22 = data1[(alu3+1026)];
    var val23 = data1[(alu3+1027)];
    var val24 = data1[(alu3+2048)];
    var val25 = data1[(alu3+2049)];
    var val26 = data1[(alu3+2050)];
    var val27 = data1[(alu3+2051)];
    var val28 = data1[(alu3+3072)];
    var val29 = data1[(alu3+3073)];
    var val30 = data1[(alu3+3074)];
    var val31 = data1[(alu3+3075)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<4)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  var alu22 = (alu0+(gidx1<<14)+(lidx0<<12)+alu1);
  data0[alu22] = (val32+acc0);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+1024)] = (val33+acc1);
  data0[(alu22+1025)] = (val33+acc5);
  data0[(alu22+1026)] = (val33+acc9);
  data0[(alu22+1027)] = (val33+acc13);
  data0[(alu22+2048)] = (val34+acc2);
  data0[(alu22+2049)] = (val34+acc6);
  data0[(alu22+2050)] = (val34+acc10);
  data0[(alu22+2051)] = (val34+acc14);
  data0[(alu22+3072)] = (val35+acc3);
  data0[(alu22+3073)] = (val35+acc7);
  data0[(alu22+3074)] = (val35+acc11);
  data0[(alu22+3075)] = (val35+acc15);
}`;

const r_8_2_16_4_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 8 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu6 = ((gidx0*9216)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+1152)];
    var val10 = data2[(alu6+1153)];
    var val11 = data2[(alu6+1154)];
    var val12 = data2[(alu6+1155)];
    var val13 = data2[(alu6+1156)];
    var val14 = data2[(alu6+1157)];
    var val15 = data2[(alu6+1158)];
    var val16 = data2[(alu6+1159)];
    var val17 = data2[(alu6+1160)];
    var val18 = data2[(alu6+2304)];
    var val19 = data2[(alu6+2305)];
    var val20 = data2[(alu6+2306)];
    var val21 = data2[(alu6+2307)];
    var val22 = data2[(alu6+2308)];
    var val23 = data2[(alu6+2309)];
    var val24 = data2[(alu6+2310)];
    var val25 = data2[(alu6+2311)];
    var val26 = data2[(alu6+2312)];
    var val27 = data2[(alu6+3456)];
    var val28 = data2[(alu6+3457)];
    var val29 = data2[(alu6+3458)];
    var val30 = data2[(alu6+3459)];
    var val31 = data2[(alu6+3460)];
    var val32 = data2[(alu6+3461)];
    var val33 = data2[(alu6+3462)];
    var val34 = data2[(alu6+3463)];
    var val35 = data2[(alu6+3464)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data1[alu7];
    var val37 = select(0.0f, data1[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data1[(alu7+-16)], alu2);
    var val39 = select(0.0f, data1[(alu7+-15)], alu2);
    var val40 = select(0.0f, data1[(alu7+-14)], alu2);
    var val41 = select(0.0f, data1[(alu7+-13)], alu2);
    var val42 = select(0.0f, data1[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data1[(alu7+-1)], alu3);
    var val44 = data1[(alu7+1)];
    var val45 = data1[(alu7+2)];
    var val46 = data1[(alu7+3)];
    var val47 = select(0.0f, data1[(alu7+4)], alu5);
    var val48 = select(0.0f, data1[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data1[(alu7+16)], alu4);
    var val50 = select(0.0f, data1[(alu7+17)], alu4);
    var val51 = select(0.0f, data1[(alu7+18)], alu4);
    var val52 = select(0.0f, data1[(alu7+19)], alu4);
    var val53 = select(0.0f, data1[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data3[alu25];
  var val55 = data4[alu25];
  var val56 = data5[alu25];
  var val57 = data6[alu25];
  var alu26 = (alu25+1);
  var val58 = data3[alu26];
  var val59 = data4[alu26];
  var val60 = data5[alu26];
  var val61 = data6[alu26];
  var alu27 = (alu25+2);
  var val62 = data3[alu27];
  var val63 = data4[alu27];
  var val64 = data5[alu27];
  var val65 = data6[alu27];
  var alu28 = (alu25+3);
  var val66 = data3[alu28];
  var val67 = data4[alu28];
  var val68 = data5[alu28];
  var val69 = data6[alu28];
  var alu29 = sqrt((1/(val60+0.001f)));
  var alu30 = sqrt((1/(val64+0.001f)));
  var alu31 = sqrt((1/(val68+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var alu34 = (val57+(alu32*val55*(acc0-val54)));
  data0[alu33] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val61+(alu29*val59*(acc1-val58)));
  data0[(alu33+256)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val65+(alu30*val63*(acc2-val62)));
  data0[(alu33+512)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val69+(alu31*val67*(acc3-val66)));
  data0[(alu33+768)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val57+(alu32*val55*(acc4-val54)));
  data0[(alu33+1)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val61+(alu29*val59*(acc5-val58)));
  data0[(alu33+257)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val65+(alu30*val63*(acc6-val62)));
  data0[(alu33+513)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val69+(alu31*val67*(acc7-val66)));
  data0[(alu33+769)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val57+(alu32*val55*(acc8-val54)));
  data0[(alu33+2)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val61+(alu29*val59*(acc9-val58)));
  data0[(alu33+258)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val65+(alu30*val63*(acc10-val62)));
  data0[(alu33+514)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val69+(alu31*val67*(acc11-val66)));
  data0[(alu33+770)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val57+(alu32*val55*(acc12-val54)));
  data0[(alu33+3)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val61+(alu29*val59*(acc13-val58)));
  data0[(alu33+259)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val65+(alu30*val63*(acc14-val62)));
  data0[(alu33+515)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
  var alu64 = (val69+(alu31*val67*(acc15-val66)));
  data0[(alu33+771)] = ((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64);
}`;

const r_10_2_16_4_128_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 10 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu6 = ((gidx0*9216)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+1152)];
    var val10 = data2[(alu6+1153)];
    var val11 = data2[(alu6+1154)];
    var val12 = data2[(alu6+1155)];
    var val13 = data2[(alu6+1156)];
    var val14 = data2[(alu6+1157)];
    var val15 = data2[(alu6+1158)];
    var val16 = data2[(alu6+1159)];
    var val17 = data2[(alu6+1160)];
    var val18 = data2[(alu6+2304)];
    var val19 = data2[(alu6+2305)];
    var val20 = data2[(alu6+2306)];
    var val21 = data2[(alu6+2307)];
    var val22 = data2[(alu6+2308)];
    var val23 = data2[(alu6+2309)];
    var val24 = data2[(alu6+2310)];
    var val25 = data2[(alu6+2311)];
    var val26 = data2[(alu6+2312)];
    var val27 = data2[(alu6+3456)];
    var val28 = data2[(alu6+3457)];
    var val29 = data2[(alu6+3458)];
    var val30 = data2[(alu6+3459)];
    var val31 = data2[(alu6+3460)];
    var val32 = data2[(alu6+3461)];
    var val33 = data2[(alu6+3462)];
    var val34 = data2[(alu6+3463)];
    var val35 = data2[(alu6+3464)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data1[alu7];
    var val37 = select(0.0f, data1[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data1[(alu7+-16)], alu2);
    var val39 = select(0.0f, data1[(alu7+-15)], alu2);
    var val40 = select(0.0f, data1[(alu7+-14)], alu2);
    var val41 = select(0.0f, data1[(alu7+-13)], alu2);
    var val42 = select(0.0f, data1[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data1[(alu7+-1)], alu3);
    var val44 = data1[(alu7+1)];
    var val45 = data1[(alu7+2)];
    var val46 = data1[(alu7+3)];
    var val47 = select(0.0f, data1[(alu7+4)], alu5);
    var val48 = select(0.0f, data1[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data1[(alu7+16)], alu4);
    var val50 = select(0.0f, data1[(alu7+17)], alu4);
    var val51 = select(0.0f, data1[(alu7+18)], alu4);
    var val52 = select(0.0f, data1[(alu7+19)], alu4);
    var val53 = select(0.0f, data1[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data3[alu25];
  var val55 = data4[alu25];
  var val56 = data5[alu25];
  var val57 = data6[alu25];
  var alu26 = (alu25+1);
  var val58 = data3[alu26];
  var val59 = data4[alu26];
  var val60 = data5[alu26];
  var val61 = data6[alu26];
  var alu27 = (alu25+2);
  var val62 = data3[alu27];
  var val63 = data4[alu27];
  var val64 = data5[alu27];
  var val65 = data6[alu27];
  var alu28 = (alu25+3);
  var val66 = data3[alu28];
  var val67 = data4[alu28];
  var val68 = data5[alu28];
  var val69 = data6[alu28];
  var alu29 = sqrt((1/(val60+0.001f)));
  var alu30 = sqrt((1/(val64+0.001f)));
  var alu31 = sqrt((1/(val68+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var alu34 = (val57+(alu32*val55*(acc0-val54)));
  data0[alu33] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val61+(alu29*val59*(acc1-val58)));
  data0[(alu33+256)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val65+(alu30*val63*(acc2-val62)));
  data0[(alu33+512)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val69+(alu31*val67*(acc3-val66)));
  data0[(alu33+768)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val57+(alu32*val55*(acc4-val54)));
  data0[(alu33+1)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val61+(alu29*val59*(acc5-val58)));
  data0[(alu33+257)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val65+(alu30*val63*(acc6-val62)));
  data0[(alu33+513)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val69+(alu31*val67*(acc7-val66)));
  data0[(alu33+769)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val57+(alu32*val55*(acc8-val54)));
  data0[(alu33+2)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val61+(alu29*val59*(acc9-val58)));
  data0[(alu33+258)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val65+(alu30*val63*(acc10-val62)));
  data0[(alu33+514)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val69+(alu31*val67*(acc11-val66)));
  data0[(alu33+770)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val57+(alu32*val55*(acc12-val54)));
  data0[(alu33+3)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val61+(alu29*val59*(acc13-val58)));
  data0[(alu33+259)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val65+(alu30*val63*(acc14-val62)));
  data0[(alu33+515)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
  var alu64 = (val69+(alu31*val67*(acc15-val66)));
  data0[(alu33+771)] = ((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64);
}`;

const r_4_8_8_2_128_4_4_3_3n2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = ((lidx1<1)!=true);
  var alu1 = ((lidx2<1)!=true);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu2 = ((gidx0*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+4)];
    var val5 = data2[(alu2+5)];
    var val6 = data2[(alu2+6)];
    var val7 = data2[(alu2+7)];
    var val8 = data2[(alu2+8)];
    var val9 = data2[(alu2+1152)];
    var val10 = data2[(alu2+1153)];
    var val11 = data2[(alu2+1154)];
    var val12 = data2[(alu2+1155)];
    var val13 = data2[(alu2+1156)];
    var val14 = data2[(alu2+1157)];
    var val15 = data2[(alu2+1158)];
    var val16 = data2[(alu2+1159)];
    var val17 = data2[(alu2+1160)];
    var val18 = data2[(alu2+2304)];
    var val19 = data2[(alu2+2305)];
    var val20 = data2[(alu2+2306)];
    var val21 = data2[(alu2+2307)];
    var val22 = data2[(alu2+2308)];
    var val23 = data2[(alu2+2309)];
    var val24 = data2[(alu2+2310)];
    var val25 = data2[(alu2+2311)];
    var val26 = data2[(alu2+2312)];
    var val27 = data2[(alu2+3456)];
    var val28 = data2[(alu2+3457)];
    var val29 = data2[(alu2+3458)];
    var val30 = data2[(alu2+3459)];
    var val31 = data2[(alu2+3460)];
    var val32 = data2[(alu2+3461)];
    var val33 = data2[(alu2+3462)];
    var val34 = data2[(alu2+3463)];
    var val35 = data2[(alu2+3464)];
    var alu3 = ((lidx1<<5)+(ridx0<<8));
    var alu4 = (alu3+(lidx2<<3));
    var val36 = data1[alu4];
    var val37 = select(0.0f, data1[(alu4+-16)], alu0);
    var val38 = select(0.0f, data1[(alu4+-15)], alu0);
    var val39 = select(0.0f, data1[(alu4+-14)], alu0);
    var val40 = select(0.0f, data1[(alu4+-13)], alu0);
    var val41 = select(0.0f, data1[(alu4+-12)], alu0);
    var val42 = select(0.0f, data1[(alu4+-11)], alu0);
    var val43 = select(0.0f, data1[(alu4+-10)], alu0);
    var val44 = select(0.0f, data1[(alu4+-9)], alu0);
    var val45 = data1[(alu4+1)];
    var val46 = data1[(alu4+2)];
    var val47 = data1[(alu4+3)];
    var val48 = data1[(alu4+4)];
    var val49 = data1[(alu4+5)];
    var val50 = data1[(alu4+6)];
    var val51 = data1[(alu4+7)];
    var val52 = data1[(alu4+16)];
    var val53 = data1[(alu4+17)];
    var val54 = data1[(alu4+18)];
    var val55 = data1[(alu4+19)];
    var val56 = data1[(alu4+20)];
    var val57 = data1[(alu4+21)];
    var val58 = data1[(alu4+22)];
    var val59 = data1[(alu4+23)];
    var val60 = select(0.0f, data1[(alu3+-9)], (alu0&alu1));
    var val61 = select(0.0f, data1[(alu3+7)], alu1);
    var val62 = select(0.0f, data1[(alu3+23)], alu1);
    acc0 = (acc0+(val60*val0)+(val61*val3)+(val62*val6)+(val37*val1)+(val36*val4)+(val52*val7)+(val38*val2)+(val45*val5)+(val53*val8));
    acc1 = (acc1+(val60*val9)+(val61*val12)+(val62*val15)+(val37*val10)+(val36*val13)+(val52*val16)+(val38*val11)+(val45*val14)+(val53*val17));
    acc2 = (acc2+(val60*val18)+(val61*val21)+(val62*val24)+(val37*val19)+(val36*val22)+(val52*val25)+(val38*val20)+(val45*val23)+(val53*val26));
    acc3 = (acc3+(val60*val27)+(val61*val30)+(val62*val33)+(val37*val28)+(val36*val31)+(val52*val34)+(val38*val29)+(val45*val32)+(val53*val35));
    acc4 = (acc4+(val38*val0)+(val45*val3)+(val53*val6)+(val39*val1)+(val46*val4)+(val54*val7)+(val40*val2)+(val47*val5)+(val55*val8));
    acc5 = (acc5+(val38*val9)+(val45*val12)+(val53*val15)+(val39*val10)+(val46*val13)+(val54*val16)+(val40*val11)+(val47*val14)+(val55*val17));
    acc6 = (acc6+(val38*val18)+(val45*val21)+(val53*val24)+(val39*val19)+(val46*val22)+(val54*val25)+(val40*val20)+(val47*val23)+(val55*val26));
    acc7 = (acc7+(val38*val27)+(val45*val30)+(val53*val33)+(val39*val28)+(val46*val31)+(val54*val34)+(val40*val29)+(val47*val32)+(val55*val35));
    acc8 = (acc8+(val40*val0)+(val47*val3)+(val55*val6)+(val41*val1)+(val48*val4)+(val56*val7)+(val42*val2)+(val49*val5)+(val57*val8));
    acc9 = (acc9+(val40*val9)+(val47*val12)+(val55*val15)+(val41*val10)+(val48*val13)+(val56*val16)+(val42*val11)+(val49*val14)+(val57*val17));
    acc10 = (acc10+(val40*val18)+(val47*val21)+(val55*val24)+(val41*val19)+(val48*val22)+(val56*val25)+(val42*val20)+(val49*val23)+(val57*val26));
    acc11 = (acc11+(val40*val27)+(val47*val30)+(val55*val33)+(val41*val28)+(val48*val31)+(val56*val34)+(val42*val29)+(val49*val32)+(val57*val35));
    acc12 = (acc12+(val42*val0)+(val49*val3)+(val57*val6)+(val43*val1)+(val50*val4)+(val58*val7)+(val44*val2)+(val51*val5)+(val59*val8));
    acc13 = (acc13+(val42*val9)+(val49*val12)+(val57*val15)+(val43*val10)+(val50*val13)+(val58*val16)+(val44*val11)+(val51*val14)+(val59*val17));
    acc14 = (acc14+(val42*val18)+(val49*val21)+(val57*val24)+(val43*val19)+(val50*val22)+(val58*val25)+(val44*val20)+(val51*val23)+(val59*val26));
    acc15 = (acc15+(val42*val27)+(val49*val30)+(val57*val33)+(val43*val28)+(val50*val31)+(val58*val34)+(val44*val29)+(val51*val32)+(val59*val35));
  }
  var alu22 = ((gidx0<<5)+(lidx0<<2));
  var val63 = data3[alu22];
  var val64 = data4[alu22];
  var val65 = data5[alu22];
  var val66 = data6[alu22];
  var alu23 = (alu22+1);
  var val67 = data3[alu23];
  var val68 = data4[alu23];
  var val69 = data5[alu23];
  var val70 = data6[alu23];
  var alu24 = (alu22+2);
  var val71 = data3[alu24];
  var val72 = data4[alu24];
  var val73 = data5[alu24];
  var val74 = data6[alu24];
  var alu25 = (alu22+3);
  var val75 = data3[alu25];
  var val76 = data4[alu25];
  var val77 = data5[alu25];
  var val78 = data6[alu25];
  var alu26 = sqrt((1/(val69+0.001f)));
  var alu27 = sqrt((1/(val73+0.001f)));
  var alu28 = sqrt((1/(val77+0.001f)));
  var alu29 = sqrt((1/(val65+0.001f)));
  var alu30 = ((gidx0<<11)+(lidx0<<8)+(lidx1<<3)+(lidx2<<2));
  var alu31 = (val66+(alu29*val64*(acc0-val63)));
  data0[alu30] = ((1/(exp2((alu31*-1.4426950408889634f))+1.0f))*alu31);
  var alu33 = (val70+(alu26*val68*(acc1-val67)));
  data0[(alu30+64)] = ((1/(exp2((alu33*-1.4426950408889634f))+1.0f))*alu33);
  var alu35 = (val74+(alu27*val72*(acc2-val71)));
  data0[(alu30+128)] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val78+(alu28*val76*(acc3-val75)));
  data0[(alu30+192)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val66+(alu29*val64*(acc4-val63)));
  data0[(alu30+1)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val70+(alu26*val68*(acc5-val67)));
  data0[(alu30+65)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val74+(alu27*val72*(acc6-val71)));
  data0[(alu30+129)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val78+(alu28*val76*(acc7-val75)));
  data0[(alu30+193)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val66+(alu29*val64*(acc8-val63)));
  data0[(alu30+2)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val70+(alu26*val68*(acc9-val67)));
  data0[(alu30+66)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val74+(alu27*val72*(acc10-val71)));
  data0[(alu30+130)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val78+(alu28*val76*(acc11-val75)));
  data0[(alu30+194)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val66+(alu29*val64*(acc12-val63)));
  data0[(alu30+3)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val70+(alu26*val68*(acc13-val67)));
  data0[(alu30+67)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val74+(alu27*val72*(acc14-val71)));
  data0[(alu30+131)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val78+(alu28*val76*(acc15-val75)));
  data0[(alu30+195)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
}`;

const r_10_2_16_4_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(2,16,4) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 10 */
  var lidx0 = i32(lindex.x); /* 2 */
  var lidx1 = i32(lindex.y); /* 16 */
  var lidx2 = i32(lindex.z); /* 4 */
  var alu0 = (lidx1<<4);
  var alu1 = (lidx2<<2);
  var alu2 = ((lidx1<1)!=true);
  var alu3 = ((lidx2<1)!=true);
  var alu4 = (lidx1<15);
  var alu5 = (lidx2<3);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu6 = ((gidx0*5760)+(lidx0*2880)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+720)];
    var val10 = data2[(alu6+721)];
    var val11 = data2[(alu6+722)];
    var val12 = data2[(alu6+723)];
    var val13 = data2[(alu6+724)];
    var val14 = data2[(alu6+725)];
    var val15 = data2[(alu6+726)];
    var val16 = data2[(alu6+727)];
    var val17 = data2[(alu6+728)];
    var val18 = data2[(alu6+1440)];
    var val19 = data2[(alu6+1441)];
    var val20 = data2[(alu6+1442)];
    var val21 = data2[(alu6+1443)];
    var val22 = data2[(alu6+1444)];
    var val23 = data2[(alu6+1445)];
    var val24 = data2[(alu6+1446)];
    var val25 = data2[(alu6+1447)];
    var val26 = data2[(alu6+1448)];
    var val27 = data2[(alu6+2160)];
    var val28 = data2[(alu6+2161)];
    var val29 = data2[(alu6+2162)];
    var val30 = data2[(alu6+2163)];
    var val31 = data2[(alu6+2164)];
    var val32 = data2[(alu6+2165)];
    var val33 = data2[(alu6+2166)];
    var val34 = data2[(alu6+2167)];
    var val35 = data2[(alu6+2168)];
    var alu7 = (alu0+(ridx0<<8)+alu1);
    var val36 = data1[alu7];
    var val37 = select(0.0f, data1[(alu7+-17)], (alu2&alu3));
    var val38 = select(0.0f, data1[(alu7+-16)], alu2);
    var val39 = select(0.0f, data1[(alu7+-15)], alu2);
    var val40 = select(0.0f, data1[(alu7+-14)], alu2);
    var val41 = select(0.0f, data1[(alu7+-13)], alu2);
    var val42 = select(0.0f, data1[(alu7+-12)], (alu5&alu2));
    var val43 = select(0.0f, data1[(alu7+-1)], alu3);
    var val44 = data1[(alu7+1)];
    var val45 = data1[(alu7+2)];
    var val46 = data1[(alu7+3)];
    var val47 = select(0.0f, data1[(alu7+4)], alu5);
    var val48 = select(0.0f, data1[(alu7+15)], (alu4&alu3));
    var val49 = select(0.0f, data1[(alu7+16)], alu4);
    var val50 = select(0.0f, data1[(alu7+17)], alu4);
    var val51 = select(0.0f, data1[(alu7+18)], alu4);
    var val52 = select(0.0f, data1[(alu7+19)], alu4);
    var val53 = select(0.0f, data1[(alu7+20)], (alu4&alu5));
    acc0 = (acc0+(val37*val0)+(val43*val3)+(val48*val6)+(val38*val1)+(val36*val4)+(val49*val7)+(val39*val2)+(val44*val5)+(val50*val8));
    acc1 = (acc1+(val37*val9)+(val43*val12)+(val48*val15)+(val38*val10)+(val36*val13)+(val49*val16)+(val39*val11)+(val44*val14)+(val50*val17));
    acc2 = (acc2+(val37*val18)+(val43*val21)+(val48*val24)+(val38*val19)+(val36*val22)+(val49*val25)+(val39*val20)+(val44*val23)+(val50*val26));
    acc3 = (acc3+(val37*val27)+(val43*val30)+(val48*val33)+(val38*val28)+(val36*val31)+(val49*val34)+(val39*val29)+(val44*val32)+(val50*val35));
    acc4 = (acc4+(val38*val0)+(val36*val3)+(val49*val6)+(val39*val1)+(val44*val4)+(val50*val7)+(val40*val2)+(val45*val5)+(val51*val8));
    acc5 = (acc5+(val38*val9)+(val36*val12)+(val49*val15)+(val39*val10)+(val44*val13)+(val50*val16)+(val40*val11)+(val45*val14)+(val51*val17));
    acc6 = (acc6+(val38*val18)+(val36*val21)+(val49*val24)+(val39*val19)+(val44*val22)+(val50*val25)+(val40*val20)+(val45*val23)+(val51*val26));
    acc7 = (acc7+(val38*val27)+(val36*val30)+(val49*val33)+(val39*val28)+(val44*val31)+(val50*val34)+(val40*val29)+(val45*val32)+(val51*val35));
    acc8 = (acc8+(val39*val0)+(val44*val3)+(val50*val6)+(val40*val1)+(val45*val4)+(val51*val7)+(val41*val2)+(val46*val5)+(val52*val8));
    acc9 = (acc9+(val39*val9)+(val44*val12)+(val50*val15)+(val40*val10)+(val45*val13)+(val51*val16)+(val41*val11)+(val46*val14)+(val52*val17));
    acc10 = (acc10+(val39*val18)+(val44*val21)+(val50*val24)+(val40*val19)+(val45*val22)+(val51*val25)+(val41*val20)+(val46*val23)+(val52*val26));
    acc11 = (acc11+(val39*val27)+(val44*val30)+(val50*val33)+(val40*val28)+(val45*val31)+(val51*val34)+(val41*val29)+(val46*val32)+(val52*val35));
    acc12 = (acc12+(val40*val0)+(val45*val3)+(val51*val6)+(val41*val1)+(val46*val4)+(val52*val7)+(val42*val2)+(val47*val5)+(val53*val8));
    acc13 = (acc13+(val40*val9)+(val45*val12)+(val51*val15)+(val41*val10)+(val46*val13)+(val52*val16)+(val42*val11)+(val47*val14)+(val53*val17));
    acc14 = (acc14+(val40*val18)+(val45*val21)+(val51*val24)+(val41*val19)+(val46*val22)+(val52*val25)+(val42*val20)+(val47*val23)+(val53*val26));
    acc15 = (acc15+(val40*val27)+(val45*val30)+(val51*val33)+(val41*val28)+(val46*val31)+(val52*val34)+(val42*val29)+(val47*val32)+(val53*val35));
  }
  var alu25 = ((gidx0<<3)+(lidx0<<2));
  var val54 = data3[alu25];
  var val55 = data4[alu25];
  var val56 = data5[alu25];
  var val57 = data6[alu25];
  var alu26 = (alu25+1);
  var val58 = data3[alu26];
  var val59 = data4[alu26];
  var val60 = data5[alu26];
  var val61 = data6[alu26];
  var alu27 = (alu25+2);
  var val62 = data3[alu27];
  var val63 = data4[alu27];
  var val64 = data5[alu27];
  var val65 = data6[alu27];
  var alu28 = (alu25+3);
  var val66 = data3[alu28];
  var val67 = data4[alu28];
  var val68 = data5[alu28];
  var val69 = data6[alu28];
  var alu29 = sqrt((1/(val60+0.001f)));
  var alu30 = sqrt((1/(val64+0.001f)));
  var alu31 = sqrt((1/(val68+0.001f)));
  var alu32 = sqrt((1/(val56+0.001f)));
  var alu33 = ((gidx0<<11)+(lidx0<<10)+alu0+alu1);
  var alu34 = (val57+(alu32*val55*(acc0-val54)));
  data0[alu33] = ((1/(exp2((alu34*-1.4426950408889634f))+1.0f))*alu34);
  var alu36 = (val61+(alu29*val59*(acc1-val58)));
  data0[(alu33+256)] = ((1/(exp2((alu36*-1.4426950408889634f))+1.0f))*alu36);
  var alu38 = (val65+(alu30*val63*(acc2-val62)));
  data0[(alu33+512)] = ((1/(exp2((alu38*-1.4426950408889634f))+1.0f))*alu38);
  var alu40 = (val69+(alu31*val67*(acc3-val66)));
  data0[(alu33+768)] = ((1/(exp2((alu40*-1.4426950408889634f))+1.0f))*alu40);
  var alu42 = (val57+(alu32*val55*(acc4-val54)));
  data0[(alu33+1)] = ((1/(exp2((alu42*-1.4426950408889634f))+1.0f))*alu42);
  var alu44 = (val61+(alu29*val59*(acc5-val58)));
  data0[(alu33+257)] = ((1/(exp2((alu44*-1.4426950408889634f))+1.0f))*alu44);
  var alu46 = (val65+(alu30*val63*(acc6-val62)));
  data0[(alu33+513)] = ((1/(exp2((alu46*-1.4426950408889634f))+1.0f))*alu46);
  var alu48 = (val69+(alu31*val67*(acc7-val66)));
  data0[(alu33+769)] = ((1/(exp2((alu48*-1.4426950408889634f))+1.0f))*alu48);
  var alu50 = (val57+(alu32*val55*(acc8-val54)));
  data0[(alu33+2)] = ((1/(exp2((alu50*-1.4426950408889634f))+1.0f))*alu50);
  var alu52 = (val61+(alu29*val59*(acc9-val58)));
  data0[(alu33+258)] = ((1/(exp2((alu52*-1.4426950408889634f))+1.0f))*alu52);
  var alu54 = (val65+(alu30*val63*(acc10-val62)));
  data0[(alu33+514)] = ((1/(exp2((alu54*-1.4426950408889634f))+1.0f))*alu54);
  var alu56 = (val69+(alu31*val67*(acc11-val66)));
  data0[(alu33+770)] = ((1/(exp2((alu56*-1.4426950408889634f))+1.0f))*alu56);
  var alu58 = (val57+(alu32*val55*(acc12-val54)));
  data0[(alu33+3)] = ((1/(exp2((alu58*-1.4426950408889634f))+1.0f))*alu58);
  var alu60 = (val61+(alu29*val59*(acc13-val58)));
  data0[(alu33+259)] = ((1/(exp2((alu60*-1.4426950408889634f))+1.0f))*alu60);
  var alu62 = (val65+(alu30*val63*(acc14-val62)));
  data0[(alu33+515)] = ((1/(exp2((alu62*-1.4426950408889634f))+1.0f))*alu62);
  var alu64 = (val69+(alu31*val67*(acc15-val66)));
  data0[(alu33+771)] = ((1/(exp2((alu64*-1.4426950408889634f))+1.0f))*alu64);
}`;

const E_48_8_16_4n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 48 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<16);
  var alu1 = (alu0!=true);
  var alu2 = ((gidx0<<9)+(lidx0<<6)+(lidx1<<2));
  var val0 = select(0.0f, data1[alu2], alu0);
  var val1 = select(0.0f, data2[(alu2+-8192)], alu1);
  var val2 = select(0.0f, data2[(alu2+-8191)], alu1);
  var val3 = select(0.0f, data2[(alu2+-8190)], alu1);
  var val4 = select(0.0f, data2[(alu2+-8189)], alu1);
  var alu3 = (alu2+1);
  var val5 = select(0.0f, data1[alu3], alu0);
  var alu4 = (alu2+2);
  var val6 = select(0.0f, data1[alu4], alu0);
  var alu5 = (alu2+3);
  var val7 = select(0.0f, data1[alu5], alu0);
  data0[alu3] = (val5+val2);
  data0[alu4] = (val6+val3);
  data0[alu5] = (val7+val4);
  data0[alu2] = (val0+val1);
}`;

const r_2_4_8_16_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = ((gidx1<<11)+(lidx0<<8)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+64)];
    var val5 = data2[(alu2+65)];
    var val6 = data2[(alu2+66)];
    var val7 = data2[(alu2+67)];
    var val8 = data2[(alu2+128)];
    var val9 = data2[(alu2+129)];
    var val10 = data2[(alu2+130)];
    var val11 = data2[(alu2+131)];
    var val12 = data2[(alu2+192)];
    var val13 = data2[(alu2+193)];
    var val14 = data2[(alu2+194)];
    var val15 = data2[(alu2+195)];
    var alu3 = (alu0+alu1+(ridx0<<10));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+256)];
    var val21 = data1[(alu3+257)];
    var val22 = data1[(alu3+258)];
    var val23 = data1[(alu3+259)];
    var val24 = data1[(alu3+512)];
    var val25 = data1[(alu3+513)];
    var val26 = data1[(alu3+514)];
    var val27 = data1[(alu3+515)];
    var val28 = data1[(alu3+768)];
    var val29 = data1[(alu3+769)];
    var val30 = data1[(alu3+770)];
    var val31 = data1[(alu3+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  var alu22 = (alu0+(gidx1<<13)+(lidx0<<10)+alu1);
  data0[alu22] = (val32+acc0);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+256)] = (val33+acc1);
  data0[(alu22+257)] = (val33+acc5);
  data0[(alu22+258)] = (val33+acc9);
  data0[(alu22+259)] = (val33+acc13);
  data0[(alu22+512)] = (val34+acc2);
  data0[(alu22+513)] = (val34+acc6);
  data0[(alu22+514)] = (val34+acc10);
  data0[(alu22+515)] = (val34+acc14);
  data0[(alu22+768)] = (val35+acc3);
  data0[(alu22+769)] = (val35+acc7);
  data0[(alu22+770)] = (val35+acc11);
  data0[(alu22+771)] = (val35+acc15);
}`;

const r_5_4_4_16_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var gidx1 = i32(gindex.y); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<<6);
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu2 = ((gidx1*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+80)];
    var val5 = data2[(alu2+81)];
    var val6 = data2[(alu2+82)];
    var val7 = data2[(alu2+83)];
    var val8 = data2[(alu2+160)];
    var val9 = data2[(alu2+161)];
    var val10 = data2[(alu2+162)];
    var val11 = data2[(alu2+163)];
    var val12 = data2[(alu2+240)];
    var val13 = data2[(alu2+241)];
    var val14 = data2[(alu2+242)];
    var val15 = data2[(alu2+243)];
    var alu3 = (alu0+alu1+(ridx0<<10));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+256)];
    var val21 = data1[(alu3+257)];
    var val22 = data1[(alu3+258)];
    var val23 = data1[(alu3+259)];
    var val24 = data1[(alu3+512)];
    var val25 = data1[(alu3+513)];
    var val26 = data1[(alu3+514)];
    var val27 = data1[(alu3+515)];
    var val28 = data1[(alu3+768)];
    var val29 = data1[(alu3+769)];
    var val30 = data1[(alu3+770)];
    var val31 = data1[(alu3+771)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx1<<4)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  var alu22 = (alu0+(gidx1<<12)+(lidx0<<10)+alu1);
  data0[alu22] = (val32+acc0);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+3)] = (val32+acc12);
  data0[(alu22+256)] = (val33+acc1);
  data0[(alu22+257)] = (val33+acc5);
  data0[(alu22+258)] = (val33+acc9);
  data0[(alu22+259)] = (val33+acc13);
  data0[(alu22+512)] = (val34+acc2);
  data0[(alu22+513)] = (val34+acc6);
  data0[(alu22+514)] = (val34+acc10);
  data0[(alu22+515)] = (val34+acc14);
  data0[(alu22+768)] = (val35+acc3);
  data0[(alu22+769)] = (val35+acc7);
  data0[(alu22+770)] = (val35+acc11);
  data0[(alu22+771)] = (val35+acc15);
}`;

const r_4_8_8_2_128_4_4_3_3n3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 4 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 128; ridx0++) {
    var alu6 = ((gidx0*36864)+(lidx0*4608)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+1152)];
    var val10 = data2[(alu6+1153)];
    var val11 = data2[(alu6+1154)];
    var val12 = data2[(alu6+1155)];
    var val13 = data2[(alu6+1156)];
    var val14 = data2[(alu6+1157)];
    var val15 = data2[(alu6+1158)];
    var val16 = data2[(alu6+1159)];
    var val17 = data2[(alu6+1160)];
    var val18 = data2[(alu6+2304)];
    var val19 = data2[(alu6+2305)];
    var val20 = data2[(alu6+2306)];
    var val21 = data2[(alu6+2307)];
    var val22 = data2[(alu6+2308)];
    var val23 = data2[(alu6+2309)];
    var val24 = data2[(alu6+2310)];
    var val25 = data2[(alu6+2311)];
    var val26 = data2[(alu6+2312)];
    var val27 = data2[(alu6+3456)];
    var val28 = data2[(alu6+3457)];
    var val29 = data2[(alu6+3458)];
    var val30 = data2[(alu6+3459)];
    var val31 = data2[(alu6+3460)];
    var val32 = data2[(alu6+3461)];
    var val33 = data2[(alu6+3462)];
    var val34 = data2[(alu6+3463)];
    var val35 = data2[(alu6+3464)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-8)], alu3);
    var val38 = select(0.0f, data1[(alu8+-7)], alu3);
    var val39 = select(0.0f, data1[(alu8+-6)], alu3);
    var val40 = select(0.0f, data1[(alu8+-5)], alu3);
    var val41 = data1[(alu8+1)];
    var val42 = data1[(alu8+2)];
    var val43 = data1[(alu8+3)];
    var val44 = select(0.0f, data1[(alu8+8)], alu5);
    var val45 = select(0.0f, data1[(alu8+9)], alu5);
    var val46 = select(0.0f, data1[(alu8+10)], alu5);
    var val47 = select(0.0f, data1[(alu8+11)], alu5);
    var val48 = select(0.0f, data1[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+3)], alu4);
    var val51 = select(0.0f, data1[(alu7+4)], alu2);
    var val52 = select(0.0f, data1[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<5)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<11)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_2_8_8_2_256_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 256; ridx0++) {
    var alu6 = ((gidx0*73728)+(lidx0*9216)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+2304)];
    var val10 = data2[(alu6+2305)];
    var val11 = data2[(alu6+2306)];
    var val12 = data2[(alu6+2307)];
    var val13 = data2[(alu6+2308)];
    var val14 = data2[(alu6+2309)];
    var val15 = data2[(alu6+2310)];
    var val16 = data2[(alu6+2311)];
    var val17 = data2[(alu6+2312)];
    var val18 = data2[(alu6+4608)];
    var val19 = data2[(alu6+4609)];
    var val20 = data2[(alu6+4610)];
    var val21 = data2[(alu6+4611)];
    var val22 = data2[(alu6+4612)];
    var val23 = data2[(alu6+4613)];
    var val24 = data2[(alu6+4614)];
    var val25 = data2[(alu6+4615)];
    var val26 = data2[(alu6+4616)];
    var val27 = data2[(alu6+6912)];
    var val28 = data2[(alu6+6913)];
    var val29 = data2[(alu6+6914)];
    var val30 = data2[(alu6+6915)];
    var val31 = data2[(alu6+6916)];
    var val32 = data2[(alu6+6917)];
    var val33 = data2[(alu6+6918)];
    var val34 = data2[(alu6+6919)];
    var val35 = data2[(alu6+6920)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-8)], alu3);
    var val38 = select(0.0f, data1[(alu8+-7)], alu3);
    var val39 = select(0.0f, data1[(alu8+-6)], alu3);
    var val40 = select(0.0f, data1[(alu8+-5)], alu3);
    var val41 = data1[(alu8+1)];
    var val42 = data1[(alu8+2)];
    var val43 = data1[(alu8+3)];
    var val44 = select(0.0f, data1[(alu8+8)], alu5);
    var val45 = select(0.0f, data1[(alu8+9)], alu5);
    var val46 = select(0.0f, data1[(alu8+10)], alu5);
    var val47 = select(0.0f, data1[(alu8+11)], alu5);
    var val48 = select(0.0f, data1[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+3)], alu4);
    var val51 = select(0.0f, data1[(alu7+4)], alu2);
    var val52 = select(0.0f, data1[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<5)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<11)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_5_4_8_2_256_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 256; ridx0++) {
    var alu6 = ((gidx0*36864)+(lidx0*9216)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+2304)];
    var val10 = data2[(alu6+2305)];
    var val11 = data2[(alu6+2306)];
    var val12 = data2[(alu6+2307)];
    var val13 = data2[(alu6+2308)];
    var val14 = data2[(alu6+2309)];
    var val15 = data2[(alu6+2310)];
    var val16 = data2[(alu6+2311)];
    var val17 = data2[(alu6+2312)];
    var val18 = data2[(alu6+4608)];
    var val19 = data2[(alu6+4609)];
    var val20 = data2[(alu6+4610)];
    var val21 = data2[(alu6+4611)];
    var val22 = data2[(alu6+4612)];
    var val23 = data2[(alu6+4613)];
    var val24 = data2[(alu6+4614)];
    var val25 = data2[(alu6+4615)];
    var val26 = data2[(alu6+4616)];
    var val27 = data2[(alu6+6912)];
    var val28 = data2[(alu6+6913)];
    var val29 = data2[(alu6+6914)];
    var val30 = data2[(alu6+6915)];
    var val31 = data2[(alu6+6916)];
    var val32 = data2[(alu6+6917)];
    var val33 = data2[(alu6+6918)];
    var val34 = data2[(alu6+6919)];
    var val35 = data2[(alu6+6920)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-8)], alu3);
    var val38 = select(0.0f, data1[(alu8+-7)], alu3);
    var val39 = select(0.0f, data1[(alu8+-6)], alu3);
    var val40 = select(0.0f, data1[(alu8+-5)], alu3);
    var val41 = data1[(alu8+1)];
    var val42 = data1[(alu8+2)];
    var val43 = data1[(alu8+3)];
    var val44 = select(0.0f, data1[(alu8+8)], alu5);
    var val45 = select(0.0f, data1[(alu8+9)], alu5);
    var val46 = select(0.0f, data1[(alu8+10)], alu5);
    var val47 = select(0.0f, data1[(alu8+11)], alu5);
    var val48 = select(0.0f, data1[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+3)], alu4);
    var val51 = select(0.0f, data1[(alu7+4)], alu2);
    var val52 = select(0.0f, data1[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<4)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<10)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_2_8_8_2_64_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 64; ridx0++) {
    var alu6 = ((gidx0*18432)+(lidx0*2304)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+576)];
    var val10 = data2[(alu6+577)];
    var val11 = data2[(alu6+578)];
    var val12 = data2[(alu6+579)];
    var val13 = data2[(alu6+580)];
    var val14 = data2[(alu6+581)];
    var val15 = data2[(alu6+582)];
    var val16 = data2[(alu6+583)];
    var val17 = data2[(alu6+584)];
    var val18 = data2[(alu6+1152)];
    var val19 = data2[(alu6+1153)];
    var val20 = data2[(alu6+1154)];
    var val21 = data2[(alu6+1155)];
    var val22 = data2[(alu6+1156)];
    var val23 = data2[(alu6+1157)];
    var val24 = data2[(alu6+1158)];
    var val25 = data2[(alu6+1159)];
    var val26 = data2[(alu6+1160)];
    var val27 = data2[(alu6+1728)];
    var val28 = data2[(alu6+1729)];
    var val29 = data2[(alu6+1730)];
    var val30 = data2[(alu6+1731)];
    var val31 = data2[(alu6+1732)];
    var val32 = data2[(alu6+1733)];
    var val33 = data2[(alu6+1734)];
    var val34 = data2[(alu6+1735)];
    var val35 = data2[(alu6+1736)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-8)], alu3);
    var val38 = select(0.0f, data1[(alu8+-7)], alu3);
    var val39 = select(0.0f, data1[(alu8+-6)], alu3);
    var val40 = select(0.0f, data1[(alu8+-5)], alu3);
    var val41 = data1[(alu8+1)];
    var val42 = data1[(alu8+2)];
    var val43 = data1[(alu8+3)];
    var val44 = select(0.0f, data1[(alu8+8)], alu5);
    var val45 = select(0.0f, data1[(alu8+9)], alu5);
    var val46 = select(0.0f, data1[(alu8+10)], alu5);
    var val47 = select(0.0f, data1[(alu8+11)], alu5);
    var val48 = select(0.0f, data1[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+3)], alu4);
    var val51 = select(0.0f, data1[(alu7+4)], alu2);
    var val52 = select(0.0f, data1[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<5)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<11)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_5_4_8_2_80_4_4_3_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@group(0) @binding(6)var<storage,read_write>data5:array<f32>;
@group(0) @binding(7)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(4,8,2) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 8 */
  var lidx2 = i32(lindex.z); /* 2 */
  var alu0 = (lidx1<<3);
  var alu1 = (lidx2<<2);
  var alu2 = (lidx2<1);
  var alu3 = ((lidx1<1)!=true);
  var alu4 = (alu2!=true);
  var alu5 = (lidx1<7);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 80; ridx0++) {
    var alu6 = ((gidx0*11520)+(lidx0*2880)+(ridx0*9));
    var val0 = data2[alu6];
    var val1 = data2[(alu6+1)];
    var val2 = data2[(alu6+2)];
    var val3 = data2[(alu6+3)];
    var val4 = data2[(alu6+4)];
    var val5 = data2[(alu6+5)];
    var val6 = data2[(alu6+6)];
    var val7 = data2[(alu6+7)];
    var val8 = data2[(alu6+8)];
    var val9 = data2[(alu6+720)];
    var val10 = data2[(alu6+721)];
    var val11 = data2[(alu6+722)];
    var val12 = data2[(alu6+723)];
    var val13 = data2[(alu6+724)];
    var val14 = data2[(alu6+725)];
    var val15 = data2[(alu6+726)];
    var val16 = data2[(alu6+727)];
    var val17 = data2[(alu6+728)];
    var val18 = data2[(alu6+1440)];
    var val19 = data2[(alu6+1441)];
    var val20 = data2[(alu6+1442)];
    var val21 = data2[(alu6+1443)];
    var val22 = data2[(alu6+1444)];
    var val23 = data2[(alu6+1445)];
    var val24 = data2[(alu6+1446)];
    var val25 = data2[(alu6+1447)];
    var val26 = data2[(alu6+1448)];
    var val27 = data2[(alu6+2160)];
    var val28 = data2[(alu6+2161)];
    var val29 = data2[(alu6+2162)];
    var val30 = data2[(alu6+2163)];
    var val31 = data2[(alu6+2164)];
    var val32 = data2[(alu6+2165)];
    var val33 = data2[(alu6+2166)];
    var val34 = data2[(alu6+2167)];
    var val35 = data2[(alu6+2168)];
    var alu7 = (alu0+(ridx0<<6));
    var alu8 = (alu7+alu1);
    var val36 = data1[alu8];
    var val37 = select(0.0f, data1[(alu8+-8)], alu3);
    var val38 = select(0.0f, data1[(alu8+-7)], alu3);
    var val39 = select(0.0f, data1[(alu8+-6)], alu3);
    var val40 = select(0.0f, data1[(alu8+-5)], alu3);
    var val41 = data1[(alu8+1)];
    var val42 = data1[(alu8+2)];
    var val43 = data1[(alu8+3)];
    var val44 = select(0.0f, data1[(alu8+8)], alu5);
    var val45 = select(0.0f, data1[(alu8+9)], alu5);
    var val46 = select(0.0f, data1[(alu8+10)], alu5);
    var val47 = select(0.0f, data1[(alu8+11)], alu5);
    var val48 = select(0.0f, data1[(alu7+-5)], (alu3&alu4));
    var val49 = select(0.0f, data1[(alu7+-4)], (alu2&alu3));
    var val50 = select(0.0f, data1[(alu7+3)], alu4);
    var val51 = select(0.0f, data1[(alu7+4)], alu2);
    var val52 = select(0.0f, data1[(alu7+11)], (alu5&alu4));
    var val53 = select(0.0f, data1[(alu7+12)], (alu5&alu2));
    acc0 = (acc0+(val48*val0)+(val50*val3)+(val52*val6)+(val37*val1)+(val36*val4)+(val44*val7)+(val38*val2)+(val41*val5)+(val45*val8));
    acc1 = (acc1+(val48*val9)+(val50*val12)+(val52*val15)+(val37*val10)+(val36*val13)+(val44*val16)+(val38*val11)+(val41*val14)+(val45*val17));
    acc2 = (acc2+(val48*val18)+(val50*val21)+(val52*val24)+(val37*val19)+(val36*val22)+(val44*val25)+(val38*val20)+(val41*val23)+(val45*val26));
    acc3 = (acc3+(val48*val27)+(val50*val30)+(val52*val33)+(val37*val28)+(val36*val31)+(val44*val34)+(val38*val29)+(val41*val32)+(val45*val35));
    acc4 = (acc4+(val37*val0)+(val36*val3)+(val44*val6)+(val38*val1)+(val41*val4)+(val45*val7)+(val39*val2)+(val42*val5)+(val46*val8));
    acc5 = (acc5+(val37*val9)+(val36*val12)+(val44*val15)+(val38*val10)+(val41*val13)+(val45*val16)+(val39*val11)+(val42*val14)+(val46*val17));
    acc6 = (acc6+(val37*val18)+(val36*val21)+(val44*val24)+(val38*val19)+(val41*val22)+(val45*val25)+(val39*val20)+(val42*val23)+(val46*val26));
    acc7 = (acc7+(val37*val27)+(val36*val30)+(val44*val33)+(val38*val28)+(val41*val31)+(val45*val34)+(val39*val29)+(val42*val32)+(val46*val35));
    acc8 = (acc8+(val38*val0)+(val41*val3)+(val45*val6)+(val39*val1)+(val42*val4)+(val46*val7)+(val40*val2)+(val43*val5)+(val47*val8));
    acc9 = (acc9+(val38*val9)+(val41*val12)+(val45*val15)+(val39*val10)+(val42*val13)+(val46*val16)+(val40*val11)+(val43*val14)+(val47*val17));
    acc10 = (acc10+(val38*val18)+(val41*val21)+(val45*val24)+(val39*val19)+(val42*val22)+(val46*val25)+(val40*val20)+(val43*val23)+(val47*val26));
    acc11 = (acc11+(val38*val27)+(val41*val30)+(val45*val33)+(val39*val28)+(val42*val31)+(val46*val34)+(val40*val29)+(val43*val32)+(val47*val35));
    acc12 = (acc12+(val39*val0)+(val42*val3)+(val46*val6)+(val40*val1)+(val43*val4)+(val47*val7)+(val49*val2)+(val51*val5)+(val53*val8));
    acc13 = (acc13+(val39*val9)+(val42*val12)+(val46*val15)+(val40*val10)+(val43*val13)+(val47*val16)+(val49*val11)+(val51*val14)+(val53*val17));
    acc14 = (acc14+(val39*val18)+(val42*val21)+(val46*val24)+(val40*val19)+(val43*val22)+(val47*val25)+(val49*val20)+(val51*val23)+(val53*val26));
    acc15 = (acc15+(val39*val27)+(val42*val30)+(val46*val33)+(val40*val28)+(val43*val31)+(val47*val34)+(val49*val29)+(val51*val32)+(val53*val35));
  }
  var alu26 = ((gidx0<<4)+(lidx0<<2));
  var val54 = data3[alu26];
  var val55 = data4[alu26];
  var val56 = data5[alu26];
  var val57 = data6[alu26];
  var alu27 = (alu26+1);
  var val58 = data3[alu27];
  var val59 = data4[alu27];
  var val60 = data5[alu27];
  var val61 = data6[alu27];
  var alu28 = (alu26+2);
  var val62 = data3[alu28];
  var val63 = data4[alu28];
  var val64 = data5[alu28];
  var val65 = data6[alu28];
  var alu29 = (alu26+3);
  var val66 = data3[alu29];
  var val67 = data4[alu29];
  var val68 = data5[alu29];
  var val69 = data6[alu29];
  var alu30 = sqrt((1/(val60+0.001f)));
  var alu31 = sqrt((1/(val64+0.001f)));
  var alu32 = sqrt((1/(val68+0.001f)));
  var alu33 = sqrt((1/(val56+0.001f)));
  var alu34 = ((gidx0<<10)+(lidx0<<8)+alu0+alu1);
  var alu35 = (val57+(alu33*val55*(acc0-val54)));
  data0[alu34] = ((1/(exp2((alu35*-1.4426950408889634f))+1.0f))*alu35);
  var alu37 = (val61+(alu30*val59*(acc1-val58)));
  data0[(alu34+64)] = ((1/(exp2((alu37*-1.4426950408889634f))+1.0f))*alu37);
  var alu39 = (val65+(alu31*val63*(acc2-val62)));
  data0[(alu34+128)] = ((1/(exp2((alu39*-1.4426950408889634f))+1.0f))*alu39);
  var alu41 = (val69+(alu32*val67*(acc3-val66)));
  data0[(alu34+192)] = ((1/(exp2((alu41*-1.4426950408889634f))+1.0f))*alu41);
  var alu43 = (val57+(alu33*val55*(acc4-val54)));
  data0[(alu34+1)] = ((1/(exp2((alu43*-1.4426950408889634f))+1.0f))*alu43);
  var alu45 = (val61+(alu30*val59*(acc5-val58)));
  data0[(alu34+65)] = ((1/(exp2((alu45*-1.4426950408889634f))+1.0f))*alu45);
  var alu47 = (val65+(alu31*val63*(acc6-val62)));
  data0[(alu34+129)] = ((1/(exp2((alu47*-1.4426950408889634f))+1.0f))*alu47);
  var alu49 = (val69+(alu32*val67*(acc7-val66)));
  data0[(alu34+193)] = ((1/(exp2((alu49*-1.4426950408889634f))+1.0f))*alu49);
  var alu51 = (val57+(alu33*val55*(acc8-val54)));
  data0[(alu34+2)] = ((1/(exp2((alu51*-1.4426950408889634f))+1.0f))*alu51);
  var alu53 = (val61+(alu30*val59*(acc9-val58)));
  data0[(alu34+66)] = ((1/(exp2((alu53*-1.4426950408889634f))+1.0f))*alu53);
  var alu55 = (val65+(alu31*val63*(acc10-val62)));
  data0[(alu34+130)] = ((1/(exp2((alu55*-1.4426950408889634f))+1.0f))*alu55);
  var alu57 = (val69+(alu32*val67*(acc11-val66)));
  data0[(alu34+194)] = ((1/(exp2((alu57*-1.4426950408889634f))+1.0f))*alu57);
  var alu59 = (val57+(alu33*val55*(acc12-val54)));
  data0[(alu34+3)] = ((1/(exp2((alu59*-1.4426950408889634f))+1.0f))*alu59);
  var alu61 = (val61+(alu30*val59*(acc13-val58)));
  data0[(alu34+67)] = ((1/(exp2((alu61*-1.4426950408889634f))+1.0f))*alu61);
  var alu63 = (val65+(alu31*val63*(acc14-val62)));
  data0[(alu34+131)] = ((1/(exp2((alu63*-1.4426950408889634f))+1.0f))*alu63);
  var alu65 = (val69+(alu32*val67*(acc15-val66)));
  data0[(alu34+195)] = ((1/(exp2((alu65*-1.4426950408889634f))+1.0f))*alu65);
}`;

const r_2_8_16_16_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 2 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx0<<11)+(lidx0<<8));
  var alu1 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 16; ridx0++) {
    var alu2 = (alu0+(ridx0<<2));
    var val0 = data2[alu2];
    var val1 = data2[(alu2+1)];
    var val2 = data2[(alu2+2)];
    var val3 = data2[(alu2+3)];
    var val4 = data2[(alu2+64)];
    var val5 = data2[(alu2+65)];
    var val6 = data2[(alu2+66)];
    var val7 = data2[(alu2+67)];
    var val8 = data2[(alu2+128)];
    var val9 = data2[(alu2+129)];
    var val10 = data2[(alu2+130)];
    var val11 = data2[(alu2+131)];
    var val12 = data2[(alu2+192)];
    var val13 = data2[(alu2+193)];
    var val14 = data2[(alu2+194)];
    var val15 = data2[(alu2+195)];
    var alu3 = (alu1+(ridx0<<8));
    var val16 = data1[alu3];
    var val17 = data1[(alu3+1)];
    var val18 = data1[(alu3+2)];
    var val19 = data1[(alu3+3)];
    var val20 = data1[(alu3+64)];
    var val21 = data1[(alu3+65)];
    var val22 = data1[(alu3+66)];
    var val23 = data1[(alu3+67)];
    var val24 = data1[(alu3+128)];
    var val25 = data1[(alu3+129)];
    var val26 = data1[(alu3+130)];
    var val27 = data1[(alu3+131)];
    var val28 = data1[(alu3+192)];
    var val29 = data1[(alu3+193)];
    var val30 = data1[(alu3+194)];
    var val31 = data1[(alu3+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu21 = ((gidx0<<5)+(lidx0<<2));
  var val32 = data3[alu21];
  var val33 = data3[(alu21+1)];
  var val34 = data3[(alu21+2)];
  var val35 = data3[(alu21+3)];
  var alu22 = (alu0+alu1);
  data0[(alu22+64)] = (val33+acc1);
  data0[(alu22+65)] = (val33+acc5);
  data0[(alu22+66)] = (val33+acc9);
  data0[(alu22+67)] = (val33+acc13);
  data0[(alu22+128)] = (val34+acc2);
  data0[(alu22+129)] = (val34+acc6);
  data0[(alu22+130)] = (val34+acc10);
  data0[(alu22+131)] = (val34+acc14);
  data0[(alu22+192)] = (val35+acc3);
  data0[(alu22+193)] = (val35+acc7);
  data0[(alu22+194)] = (val35+acc11);
  data0[(alu22+195)] = (val35+acc15);
  data0[alu22] = (val32+acc0);
  data0[(alu22+1)] = (val32+acc4);
  data0[(alu22+2)] = (val32+acc8);
  data0[(alu22+3)] = (val32+acc12);
}`;

const r_5_4_16_20_4_4_4 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 5 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (lidx1<<2);
  var acc0 = 0.0f;
  var acc1 = 0.0f;
  var acc2 = 0.0f;
  var acc3 = 0.0f;
  var acc4 = 0.0f;
  var acc5 = 0.0f;
  var acc6 = 0.0f;
  var acc7 = 0.0f;
  var acc8 = 0.0f;
  var acc9 = 0.0f;
  var acc10 = 0.0f;
  var acc11 = 0.0f;
  var acc12 = 0.0f;
  var acc13 = 0.0f;
  var acc14 = 0.0f;
  var acc15 = 0.0f;
  for (var ridx0 = 0; ridx0 < 20; ridx0++) {
    var alu1 = ((gidx0*1280)+(lidx0*320)+(ridx0<<2));
    var val0 = data2[alu1];
    var val1 = data2[(alu1+1)];
    var val2 = data2[(alu1+2)];
    var val3 = data2[(alu1+3)];
    var val4 = data2[(alu1+80)];
    var val5 = data2[(alu1+81)];
    var val6 = data2[(alu1+82)];
    var val7 = data2[(alu1+83)];
    var val8 = data2[(alu1+160)];
    var val9 = data2[(alu1+161)];
    var val10 = data2[(alu1+162)];
    var val11 = data2[(alu1+163)];
    var val12 = data2[(alu1+240)];
    var val13 = data2[(alu1+241)];
    var val14 = data2[(alu1+242)];
    var val15 = data2[(alu1+243)];
    var alu2 = (alu0+(ridx0<<8));
    var val16 = data1[alu2];
    var val17 = data1[(alu2+1)];
    var val18 = data1[(alu2+2)];
    var val19 = data1[(alu2+3)];
    var val20 = data1[(alu2+64)];
    var val21 = data1[(alu2+65)];
    var val22 = data1[(alu2+66)];
    var val23 = data1[(alu2+67)];
    var val24 = data1[(alu2+128)];
    var val25 = data1[(alu2+129)];
    var val26 = data1[(alu2+130)];
    var val27 = data1[(alu2+131)];
    var val28 = data1[(alu2+192)];
    var val29 = data1[(alu2+193)];
    var val30 = data1[(alu2+194)];
    var val31 = data1[(alu2+195)];
    acc0 = (acc0+(val20*val1)+(val16*val0)+(val24*val2)+(val28*val3));
    acc1 = (acc1+(val20*val5)+(val16*val4)+(val24*val6)+(val28*val7));
    acc2 = (acc2+(val20*val9)+(val16*val8)+(val24*val10)+(val28*val11));
    acc3 = (acc3+(val20*val13)+(val16*val12)+(val24*val14)+(val28*val15));
    acc4 = (acc4+(val17*val0)+(val21*val1)+(val25*val2)+(val29*val3));
    acc5 = (acc5+(val17*val4)+(val21*val5)+(val25*val6)+(val29*val7));
    acc6 = (acc6+(val17*val8)+(val21*val9)+(val25*val10)+(val29*val11));
    acc7 = (acc7+(val17*val12)+(val21*val13)+(val25*val14)+(val29*val15));
    acc8 = (acc8+(val18*val0)+(val22*val1)+(val26*val2)+(val30*val3));
    acc9 = (acc9+(val18*val4)+(val22*val5)+(val26*val6)+(val30*val7));
    acc10 = (acc10+(val18*val8)+(val22*val9)+(val26*val10)+(val30*val11));
    acc11 = (acc11+(val18*val12)+(val22*val13)+(val26*val14)+(val30*val15));
    acc12 = (acc12+(val19*val0)+(val23*val1)+(val27*val2)+(val31*val3));
    acc13 = (acc13+(val19*val4)+(val23*val5)+(val27*val6)+(val31*val7));
    acc14 = (acc14+(val19*val8)+(val23*val9)+(val27*val10)+(val31*val11));
    acc15 = (acc15+(val19*val12)+(val23*val13)+(val27*val14)+(val31*val15));
  }
  var alu20 = ((gidx0<<4)+(lidx0<<2));
  var val32 = data3[alu20];
  var val33 = data3[(alu20+1)];
  var val34 = data3[(alu20+2)];
  var val35 = data3[(alu20+3)];
  var alu21 = ((gidx0<<10)+(lidx0<<8)+alu0);
  data0[alu21] = (val32+acc0);
  data0[(alu21+1)] = (val32+acc4);
  data0[(alu21+2)] = (val32+acc8);
  data0[(alu21+3)] = (val32+acc12);
  data0[(alu21+64)] = (val33+acc1);
  data0[(alu21+65)] = (val33+acc5);
  data0[(alu21+66)] = (val33+acc9);
  data0[(alu21+67)] = (val33+acc13);
  data0[(alu21+128)] = (val34+acc2);
  data0[(alu21+129)] = (val34+acc6);
  data0[(alu21+130)] = (val34+acc10);
  data0[(alu21+131)] = (val34+acc14);
  data0[(alu21+192)] = (val35+acc3);
  data0[(alu21+193)] = (val35+acc7);
  data0[(alu21+194)] = (val35+acc11);
  data0[(alu21+195)] = (val35+acc15);
}`;

const r_84_4_16_16 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 84 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0<64);
  var alu1 = (gidx0<80);
  var alu2 = (alu1!=true);
  var alu3 = (gidx0<<4);
  var alu4 = (lidx1+alu3+(lidx0<<10));
  var val0 = select(0.0f, data5[(alu4+-1280)], alu2);
  var val1 = select(0.0f, data5[(alu4+-1216)], alu2);
  var val2 = select(0.0f, data5[(alu4+-1152)], alu2);
  var val3 = select(0.0f, data5[(alu4+-1088)], alu2);
  var val4 = select(0.0f, data5[(alu4+-1024)], alu2);
  var val5 = select(0.0f, data5[(alu4+-960)], alu2);
  var val6 = select(0.0f, data5[(alu4+-896)], alu2);
  var val7 = select(0.0f, data5[(alu4+-832)], alu2);
  var val8 = select(0.0f, data5[(alu4+-768)], alu2);
  var val9 = select(0.0f, data5[(alu4+-704)], alu2);
  var val10 = select(0.0f, data5[(alu4+-640)], alu2);
  var val11 = select(0.0f, data5[(alu4+-576)], alu2);
  var val12 = select(0.0f, data5[(alu4+-512)], alu2);
  var val13 = select(0.0f, data5[(alu4+-448)], alu2);
  var val14 = select(0.0f, data5[(alu4+-384)], alu2);
  var val15 = select(0.0f, data5[(alu4+-320)], alu2);
  var alu5 = (lidx1+alu3+(lidx0<<12));
  var alu6 = (lidx1+alu3+(lidx0<<14));
  var val16 = select(0.0f, data1[alu6], alu0);
  var val17 = select(0.0f, data1[(alu6+1024)], alu0);
  var val18 = select(0.0f, data1[(alu6+2048)], alu0);
  var val19 = select(0.0f, data1[(alu6+3072)], alu0);
  var val20 = select(0.0f, data1[(alu6+4096)], alu0);
  var val21 = select(0.0f, data1[(alu6+5120)], alu0);
  var val22 = select(0.0f, data1[(alu6+6144)], alu0);
  var val23 = select(0.0f, data1[(alu6+7168)], alu0);
  var val24 = select(0.0f, data1[(alu6+8192)], alu0);
  var val25 = select(0.0f, data1[(alu6+9216)], alu0);
  var val26 = select(0.0f, data1[(alu6+10240)], alu0);
  var val27 = select(0.0f, data1[(alu6+11264)], alu0);
  var val28 = select(0.0f, data1[(alu6+12288)], alu0);
  var val29 = select(0.0f, data1[(alu6+13312)], alu0);
  var val30 = select(0.0f, data1[(alu6+14336)], alu0);
  var val31 = select(0.0f, data1[(alu6+15360)], alu0);
  var alu7 = (alu1&(alu0!=true));
  var val32 = select(0.0f, data3[alu5], alu7);
  var val33 = select(0.0f, data3[(alu5+-1024)], alu7);
  var val34 = select(0.0f, data3[(alu5+-768)], alu7);
  var val35 = select(0.0f, data3[(alu5+-512)], alu7);
  var val36 = select(0.0f, data3[(alu5+-256)], alu7);
  var val37 = select(0.0f, data3[(alu5+256)], alu7);
  var val38 = select(0.0f, data3[(alu5+512)], alu7);
  var val39 = select(0.0f, data3[(alu5+768)], alu7);
  var val40 = select(0.0f, data3[(alu5+1024)], alu7);
  var val41 = select(0.0f, data3[(alu5+1280)], alu7);
  var val42 = select(0.0f, data3[(alu5+1536)], alu7);
  var val43 = select(0.0f, data3[(alu5+1792)], alu7);
  var val44 = select(0.0f, data3[(alu5+2048)], alu7);
  var val45 = select(0.0f, data3[(alu5+2304)], alu7);
  var val46 = select(0.0f, data3[(alu5+2560)], alu7);
  var val47 = select(0.0f, data3[(alu5+2816)], alu7);
  var alu8 = (val0+val16+val33);
  var alu9 = (val1+val17+val34);
  var alu10 = (val2+val18+val35);
  var alu11 = (val3+val19+val36);
  var alu12 = (val4+val20+val32);
  var alu13 = (val5+val21+val37);
  var alu14 = (val6+val22+val38);
  var alu15 = (val7+val23+val39);
  var alu16 = (val8+val24+val40);
  var alu17 = (val9+val25+val41);
  var alu18 = (val10+val26+val42);
  var alu19 = (val11+val27+val43);
  var alu20 = (val12+val28+val44);
  var alu21 = (val13+val29+val45);
  var alu22 = (val14+val30+val46);
  var alu23 = (val15+val31+val47);
  var alu24 = select(alu8,alu9,(alu8<alu9));
  var alu25 = select(alu10,alu24,(alu10<alu24));
  var alu26 = select(alu11,alu25,(alu11<alu25));
  var alu27 = select(alu12,alu26,(alu12<alu26));
  var alu28 = select(alu13,alu27,(alu13<alu27));
  var alu29 = select(alu14,alu28,(alu14<alu28));
  var alu30 = select(alu15,alu29,(alu15<alu29));
  var alu31 = select(alu16,alu30,(alu16<alu30));
  var alu32 = select(alu17,alu31,(alu17<alu31));
  var alu33 = select(alu18,alu32,(alu18<alu32));
  var alu34 = select(alu19,alu33,(alu19<alu33));
  var alu35 = select(alu20,alu34,(alu20<alu34));
  var alu36 = select(alu21,alu35,(alu21<alu35));
  var alu37 = select(alu22,alu36,(alu22<alu36));
  data0[(lidx1+alu3+(lidx0*1344))] = select(alu23,alu37,(alu23<alu37));
}`;

const E_10_28_8_16_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data2:array<f32>;
@group(0) @binding(3)var<storage,read_write>data4:array<f32>;
@group(0) @binding(4)var<storage,read_write>data6:array<f32>;
@compute @workgroup_size(8,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 28 */
  var gidx1 = i32(gindex.y); /* 10 */
  var lidx0 = i32(lindex.x); /* 8 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+alu1);
  var alu3 = (alu2<1022);
  var alu4 = (alu2<1024);
  var alu5 = (alu2<1279);
  var alu6 = (alu2<1280);
  var alu7 = (lidx1+(gidx0<<4));
  var alu8 = (alu7<341);
  var alu9 = (alu7<426);
  var alu10 = (alu2+(gidx1<<9)+(lidx0<<6));
  var val0 = select(0.0f, data6[(alu10+-1280)], (alu6!=true));
  var val1 = select(0.0f, data6[(alu10+-1279)], (alu5!=true));
  var val2 = select(0.0f, data6[(alu10+-1278)], (alu9!=true));
  var alu11 = (alu2+(gidx1<<11)+(lidx0<<8));
  var alu12 = (alu2+(gidx1<<13)+(lidx0<<10));
  var val3 = select(0.0f, data2[alu12], alu4);
  var val4 = select(0.0f, data2[(alu12+1)], alu8);
  var val5 = select(0.0f, data2[(alu12+2)], alu3);
  var val6 = select(0.0f, data4[(alu11+-1022)], (alu9&(alu3!=true)));
  var val7 = select(0.0f, data4[(alu11+-1023)], (alu5&(alu8!=true)));
  var val8 = select(0.0f, data4[(alu11+-1024)], (alu6&(alu4!=true)));
  var alu13 = (alu0+(gidx1*10752)+(lidx0*1344)+alu1);
  data0[alu13] = (1/(exp2(((val0+val3+val8)*-1.4426950408889634f))+1.0f));
  data0[(alu13+1)] = (1/(exp2(((val1+val4+val7)*-1.4426950408889634f))+1.0f));
  data0[(alu13+2)] = (1/(exp2(((val2+val5+val6)*-1.4426950408889634f))+1.0f));
}`;

const r_28_4_16_3_16 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@group(0) @binding(5)var<storage,read_write>data7:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 28 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+(lidx0*1344)+alu1);
  var val0 = data7[alu2];
  var alu3 = (alu2+1);
  var val1 = data7[alu3];
  var alu4 = (alu2+2);
  var val2 = data7[alu4];
  var alu5 = (alu0+alu1);
  var alu6 = (alu5<1022);
  var alu7 = (alu5<1024);
  var alu8 = (alu5<1279);
  var alu9 = (alu5<1280);
  var alu10 = (alu8!=true);
  var alu11 = (alu9!=true);
  var alu12 = (lidx1+(gidx0<<4));
  var alu13 = (alu12<341);
  var alu14 = (alu12<426);
  var alu15 = (alu14!=true);
  var alu16 = (alu5+(lidx0<<10));
  var val3 = select(0.0f, data5[(alu16+-1280)], alu11);
  var val4 = select(0.0f, data5[(alu16+-1279)], alu10);
  var val5 = select(0.0f, data5[(alu16+-1278)], alu15);
  var val6 = select(0.0f, data5[(alu16+-1216)], alu11);
  var val7 = select(0.0f, data5[(alu16+-1215)], alu10);
  var val8 = select(0.0f, data5[(alu16+-1214)], alu15);
  var val9 = select(0.0f, data5[(alu16+-1152)], alu11);
  var val10 = select(0.0f, data5[(alu16+-1151)], alu10);
  var val11 = select(0.0f, data5[(alu16+-1150)], alu15);
  var val12 = select(0.0f, data5[(alu16+-1088)], alu11);
  var val13 = select(0.0f, data5[(alu16+-1087)], alu10);
  var val14 = select(0.0f, data5[(alu16+-1086)], alu15);
  var val15 = select(0.0f, data5[(alu16+-1024)], alu11);
  var val16 = select(0.0f, data5[(alu16+-1023)], alu10);
  var val17 = select(0.0f, data5[(alu16+-1022)], alu15);
  var val18 = select(0.0f, data5[(alu16+-960)], alu11);
  var val19 = select(0.0f, data5[(alu16+-959)], alu10);
  var val20 = select(0.0f, data5[(alu16+-958)], alu15);
  var val21 = select(0.0f, data5[(alu16+-896)], alu11);
  var val22 = select(0.0f, data5[(alu16+-895)], alu10);
  var val23 = select(0.0f, data5[(alu16+-894)], alu15);
  var val24 = select(0.0f, data5[(alu16+-832)], alu11);
  var val25 = select(0.0f, data5[(alu16+-831)], alu10);
  var val26 = select(0.0f, data5[(alu16+-830)], alu15);
  var val27 = select(0.0f, data5[(alu16+-768)], alu11);
  var val28 = select(0.0f, data5[(alu16+-767)], alu10);
  var val29 = select(0.0f, data5[(alu16+-766)], alu15);
  var val30 = select(0.0f, data5[(alu16+-704)], alu11);
  var val31 = select(0.0f, data5[(alu16+-703)], alu10);
  var val32 = select(0.0f, data5[(alu16+-702)], alu15);
  var val33 = select(0.0f, data5[(alu16+-640)], alu11);
  var val34 = select(0.0f, data5[(alu16+-639)], alu10);
  var val35 = select(0.0f, data5[(alu16+-638)], alu15);
  var val36 = select(0.0f, data5[(alu16+-576)], alu11);
  var val37 = select(0.0f, data5[(alu16+-575)], alu10);
  var val38 = select(0.0f, data5[(alu16+-574)], alu15);
  var val39 = select(0.0f, data5[(alu16+-512)], alu11);
  var val40 = select(0.0f, data5[(alu16+-511)], alu10);
  var val41 = select(0.0f, data5[(alu16+-510)], alu15);
  var val42 = select(0.0f, data5[(alu16+-448)], alu11);
  var val43 = select(0.0f, data5[(alu16+-447)], alu10);
  var val44 = select(0.0f, data5[(alu16+-446)], alu15);
  var val45 = select(0.0f, data5[(alu16+-384)], alu11);
  var val46 = select(0.0f, data5[(alu16+-383)], alu10);
  var val47 = select(0.0f, data5[(alu16+-382)], alu15);
  var val48 = select(0.0f, data5[(alu16+-320)], alu11);
  var val49 = select(0.0f, data5[(alu16+-319)], alu10);
  var val50 = select(0.0f, data5[(alu16+-318)], alu15);
  var alu17 = (alu5+(lidx0<<12));
  var alu18 = (alu5+(lidx0<<14));
  var val51 = select(0.0f, data1[alu18], alu7);
  var val52 = select(0.0f, data1[(alu18+1)], alu13);
  var val53 = select(0.0f, data1[(alu18+2)], alu6);
  var val54 = select(0.0f, data1[(alu18+1024)], alu7);
  var val55 = select(0.0f, data1[(alu18+1025)], alu13);
  var val56 = select(0.0f, data1[(alu18+1026)], alu6);
  var val57 = select(0.0f, data1[(alu18+2048)], alu7);
  var val58 = select(0.0f, data1[(alu18+2049)], alu13);
  var val59 = select(0.0f, data1[(alu18+2050)], alu6);
  var val60 = select(0.0f, data1[(alu18+3072)], alu7);
  var val61 = select(0.0f, data1[(alu18+3073)], alu13);
  var val62 = select(0.0f, data1[(alu18+3074)], alu6);
  var val63 = select(0.0f, data1[(alu18+4096)], alu7);
  var val64 = select(0.0f, data1[(alu18+4097)], alu13);
  var val65 = select(0.0f, data1[(alu18+4098)], alu6);
  var val66 = select(0.0f, data1[(alu18+5120)], alu7);
  var val67 = select(0.0f, data1[(alu18+5121)], alu13);
  var val68 = select(0.0f, data1[(alu18+5122)], alu6);
  var val69 = select(0.0f, data1[(alu18+6144)], alu7);
  var val70 = select(0.0f, data1[(alu18+6145)], alu13);
  var val71 = select(0.0f, data1[(alu18+6146)], alu6);
  var val72 = select(0.0f, data1[(alu18+7168)], alu7);
  var val73 = select(0.0f, data1[(alu18+7169)], alu13);
  var val74 = select(0.0f, data1[(alu18+7170)], alu6);
  var val75 = select(0.0f, data1[(alu18+8192)], alu7);
  var val76 = select(0.0f, data1[(alu18+8193)], alu13);
  var val77 = select(0.0f, data1[(alu18+8194)], alu6);
  var val78 = select(0.0f, data1[(alu18+9216)], alu7);
  var val79 = select(0.0f, data1[(alu18+9217)], alu13);
  var val80 = select(0.0f, data1[(alu18+9218)], alu6);
  var val81 = select(0.0f, data1[(alu18+10240)], alu7);
  var val82 = select(0.0f, data1[(alu18+10241)], alu13);
  var val83 = select(0.0f, data1[(alu18+10242)], alu6);
  var val84 = select(0.0f, data1[(alu18+11264)], alu7);
  var val85 = select(0.0f, data1[(alu18+11265)], alu13);
  var val86 = select(0.0f, data1[(alu18+11266)], alu6);
  var val87 = select(0.0f, data1[(alu18+12288)], alu7);
  var val88 = select(0.0f, data1[(alu18+12289)], alu13);
  var val89 = select(0.0f, data1[(alu18+12290)], alu6);
  var val90 = select(0.0f, data1[(alu18+13312)], alu7);
  var val91 = select(0.0f, data1[(alu18+13313)], alu13);
  var val92 = select(0.0f, data1[(alu18+13314)], alu6);
  var val93 = select(0.0f, data1[(alu18+14336)], alu7);
  var val94 = select(0.0f, data1[(alu18+14337)], alu13);
  var val95 = select(0.0f, data1[(alu18+14338)], alu6);
  var val96 = select(0.0f, data1[(alu18+15360)], alu7);
  var val97 = select(0.0f, data1[(alu18+15361)], alu13);
  var val98 = select(0.0f, data1[(alu18+15362)], alu6);
  var alu19 = (alu14&(alu6!=true));
  var val99 = select(0.0f, data3[(alu17+-1022)], alu19);
  var val100 = select(0.0f, data3[(alu17+-766)], alu19);
  var val101 = select(0.0f, data3[(alu17+-510)], alu19);
  var val102 = select(0.0f, data3[(alu17+-254)], alu19);
  var val103 = select(0.0f, data3[(alu17+2)], alu19);
  var val104 = select(0.0f, data3[(alu17+258)], alu19);
  var val105 = select(0.0f, data3[(alu17+514)], alu19);
  var val106 = select(0.0f, data3[(alu17+770)], alu19);
  var val107 = select(0.0f, data3[(alu17+1026)], alu19);
  var val108 = select(0.0f, data3[(alu17+1282)], alu19);
  var val109 = select(0.0f, data3[(alu17+1538)], alu19);
  var val110 = select(0.0f, data3[(alu17+1794)], alu19);
  var val111 = select(0.0f, data3[(alu17+2050)], alu19);
  var val112 = select(0.0f, data3[(alu17+2306)], alu19);
  var val113 = select(0.0f, data3[(alu17+2562)], alu19);
  var val114 = select(0.0f, data3[(alu17+2818)], alu19);
  var alu20 = (alu8&(alu13!=true));
  var val115 = select(0.0f, data3[(alu17+-1023)], alu20);
  var val116 = select(0.0f, data3[(alu17+-767)], alu20);
  var val117 = select(0.0f, data3[(alu17+-511)], alu20);
  var val118 = select(0.0f, data3[(alu17+-255)], alu20);
  var val119 = select(0.0f, data3[(alu17+1)], alu20);
  var val120 = select(0.0f, data3[(alu17+257)], alu20);
  var val121 = select(0.0f, data3[(alu17+513)], alu20);
  var val122 = select(0.0f, data3[(alu17+769)], alu20);
  var val123 = select(0.0f, data3[(alu17+1025)], alu20);
  var val124 = select(0.0f, data3[(alu17+1281)], alu20);
  var val125 = select(0.0f, data3[(alu17+1537)], alu20);
  var val126 = select(0.0f, data3[(alu17+1793)], alu20);
  var val127 = select(0.0f, data3[(alu17+2049)], alu20);
  var val128 = select(0.0f, data3[(alu17+2305)], alu20);
  var val129 = select(0.0f, data3[(alu17+2561)], alu20);
  var val130 = select(0.0f, data3[(alu17+2817)], alu20);
  var alu21 = (alu9&(alu7!=true));
  var val131 = select(0.0f, data3[(alu17+-1024)], alu21);
  var val132 = select(0.0f, data3[(alu17+-768)], alu21);
  var val133 = select(0.0f, data3[(alu17+-512)], alu21);
  var val134 = select(0.0f, data3[(alu17+-256)], alu21);
  var val135 = select(0.0f, data3[(alu17+256)], alu21);
  var val136 = select(0.0f, data3[(alu17+512)], alu21);
  var val137 = select(0.0f, data3[(alu17+768)], alu21);
  var val138 = select(0.0f, data3[(alu17+1024)], alu21);
  var val139 = select(0.0f, data3[(alu17+1280)], alu21);
  var val140 = select(0.0f, data3[(alu17+1536)], alu21);
  var val141 = select(0.0f, data3[(alu17+1792)], alu21);
  var val142 = select(0.0f, data3[(alu17+2048)], alu21);
  var val143 = select(0.0f, data3[(alu17+2304)], alu21);
  var val144 = select(0.0f, data3[(alu17+2560)], alu21);
  var val145 = select(0.0f, data3[(alu17+2816)], alu21);
  var val146 = select(0.0f, data3[alu17], alu21);
  data0[alu2] = (exp2((((val48+val96+val145)-val0)*1.4426950408889634f))+exp2((((val45+val93+val144)-val0)*1.4426950408889634f))+exp2((((val42+val90+val143)-val0)*1.4426950408889634f))+exp2((((val39+val87+val142)-val0)*1.4426950408889634f))+exp2((((val36+val84+val141)-val0)*1.4426950408889634f))+exp2((((val33+val81+val140)-val0)*1.4426950408889634f))+exp2((((val30+val78+val139)-val0)*1.4426950408889634f))+exp2((((val27+val75+val138)-val0)*1.4426950408889634f))+exp2((((val24+val72+val137)-val0)*1.4426950408889634f))+exp2((((val21+val69+val136)-val0)*1.4426950408889634f))+exp2((((val18+val66+val135)-val0)*1.4426950408889634f))+exp2((((val15+val63+val146)-val0)*1.4426950408889634f))+exp2((((val12+val60+val134)-val0)*1.4426950408889634f))+exp2((((val9+val57+val133)-val0)*1.4426950408889634f))+exp2((((val3+val51+val131)-val0)*1.4426950408889634f))+exp2((((val6+val54+val132)-val0)*1.4426950408889634f)));
  data0[alu3] = (exp2((((val49+val97+val130)-val1)*1.4426950408889634f))+exp2((((val46+val94+val129)-val1)*1.4426950408889634f))+exp2((((val43+val91+val128)-val1)*1.4426950408889634f))+exp2((((val40+val88+val127)-val1)*1.4426950408889634f))+exp2((((val37+val85+val126)-val1)*1.4426950408889634f))+exp2((((val34+val82+val125)-val1)*1.4426950408889634f))+exp2((((val31+val79+val124)-val1)*1.4426950408889634f))+exp2((((val28+val76+val123)-val1)*1.4426950408889634f))+exp2((((val25+val73+val122)-val1)*1.4426950408889634f))+exp2((((val22+val70+val121)-val1)*1.4426950408889634f))+exp2((((val19+val67+val120)-val1)*1.4426950408889634f))+exp2((((val16+val64+val119)-val1)*1.4426950408889634f))+exp2((((val13+val61+val118)-val1)*1.4426950408889634f))+exp2((((val10+val58+val117)-val1)*1.4426950408889634f))+exp2((((val4+val52+val115)-val1)*1.4426950408889634f))+exp2((((val7+val55+val116)-val1)*1.4426950408889634f)));
  data0[alu4] = (exp2((((val50+val98+val114)-val2)*1.4426950408889634f))+exp2((((val47+val95+val113)-val2)*1.4426950408889634f))+exp2((((val44+val92+val112)-val2)*1.4426950408889634f))+exp2((((val41+val89+val111)-val2)*1.4426950408889634f))+exp2((((val38+val86+val110)-val2)*1.4426950408889634f))+exp2((((val35+val83+val109)-val2)*1.4426950408889634f))+exp2((((val32+val80+val108)-val2)*1.4426950408889634f))+exp2((((val29+val77+val107)-val2)*1.4426950408889634f))+exp2((((val26+val74+val106)-val2)*1.4426950408889634f))+exp2((((val23+val71+val105)-val2)*1.4426950408889634f))+exp2((((val20+val68+val104)-val2)*1.4426950408889634f))+exp2((((val17+val65+val103)-val2)*1.4426950408889634f))+exp2((((val14+val62+val102)-val2)*1.4426950408889634f))+exp2((((val11+val59+val101)-val2)*1.4426950408889634f))+exp2((((val5+val53+val99)-val2)*1.4426950408889634f))+exp2((((val8+val56+val100)-val2)*1.4426950408889634f)));
}`;

const r_28_4_16_3_16n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data3:array<f32>;
@group(0) @binding(4)var<storage,read_write>data5:array<f32>;
@group(0) @binding(5)var<storage,read_write>data7:array<f32>;
@group(0) @binding(6)var<storage,read_write>data8:array<f32>;
@group(0) @binding(7)var<storage,read_write>data9:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 28 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var val0 = data9[0];
  var val1 = data9[1];
  var val2 = data9[2];
  var val3 = data9[3];
  var val4 = data9[4];
  var val5 = data9[5];
  var val6 = data9[6];
  var val7 = data9[7];
  var val8 = data9[8];
  var val9 = data9[9];
  var val10 = data9[10];
  var val11 = data9[11];
  var val12 = data9[12];
  var val13 = data9[13];
  var val14 = data9[14];
  var val15 = data9[15];
  var alu0 = (gidx0*48);
  var alu1 = (lidx1*3);
  var alu2 = (alu0+(lidx0*1344)+alu1);
  var val16 = data7[alu2];
  var val17 = data8[alu2];
  var alu3 = (alu2+1);
  var val18 = data7[alu3];
  var val19 = data8[alu3];
  var alu4 = (alu2+2);
  var val20 = data7[alu4];
  var val21 = data8[alu4];
  var alu5 = (alu0+alu1);
  var alu6 = (alu5<1022);
  var alu7 = (alu5<1024);
  var alu8 = (alu5<1279);
  var alu9 = (alu5<1280);
  var alu10 = (alu8!=true);
  var alu11 = (alu9!=true);
  var alu12 = (lidx1+(gidx0<<4));
  var alu13 = (alu12<341);
  var alu14 = (alu12<426);
  var alu15 = (alu14!=true);
  var alu16 = (alu5+(lidx0<<10));
  var val22 = select(0.0f, data5[(alu16+-1280)], alu11);
  var val23 = select(0.0f, data5[(alu16+-1279)], alu10);
  var val24 = select(0.0f, data5[(alu16+-1278)], alu15);
  var val25 = select(0.0f, data5[(alu16+-1216)], alu11);
  var val26 = select(0.0f, data5[(alu16+-1215)], alu10);
  var val27 = select(0.0f, data5[(alu16+-1214)], alu15);
  var val28 = select(0.0f, data5[(alu16+-1152)], alu11);
  var val29 = select(0.0f, data5[(alu16+-1151)], alu10);
  var val30 = select(0.0f, data5[(alu16+-1150)], alu15);
  var val31 = select(0.0f, data5[(alu16+-1088)], alu11);
  var val32 = select(0.0f, data5[(alu16+-1087)], alu10);
  var val33 = select(0.0f, data5[(alu16+-1086)], alu15);
  var val34 = select(0.0f, data5[(alu16+-1024)], alu11);
  var val35 = select(0.0f, data5[(alu16+-1023)], alu10);
  var val36 = select(0.0f, data5[(alu16+-1022)], alu15);
  var val37 = select(0.0f, data5[(alu16+-960)], alu11);
  var val38 = select(0.0f, data5[(alu16+-959)], alu10);
  var val39 = select(0.0f, data5[(alu16+-958)], alu15);
  var val40 = select(0.0f, data5[(alu16+-896)], alu11);
  var val41 = select(0.0f, data5[(alu16+-895)], alu10);
  var val42 = select(0.0f, data5[(alu16+-894)], alu15);
  var val43 = select(0.0f, data5[(alu16+-832)], alu11);
  var val44 = select(0.0f, data5[(alu16+-831)], alu10);
  var val45 = select(0.0f, data5[(alu16+-830)], alu15);
  var val46 = select(0.0f, data5[(alu16+-768)], alu11);
  var val47 = select(0.0f, data5[(alu16+-767)], alu10);
  var val48 = select(0.0f, data5[(alu16+-766)], alu15);
  var val49 = select(0.0f, data5[(alu16+-704)], alu11);
  var val50 = select(0.0f, data5[(alu16+-703)], alu10);
  var val51 = select(0.0f, data5[(alu16+-702)], alu15);
  var val52 = select(0.0f, data5[(alu16+-640)], alu11);
  var val53 = select(0.0f, data5[(alu16+-639)], alu10);
  var val54 = select(0.0f, data5[(alu16+-638)], alu15);
  var val55 = select(0.0f, data5[(alu16+-576)], alu11);
  var val56 = select(0.0f, data5[(alu16+-575)], alu10);
  var val57 = select(0.0f, data5[(alu16+-574)], alu15);
  var val58 = select(0.0f, data5[(alu16+-512)], alu11);
  var val59 = select(0.0f, data5[(alu16+-511)], alu10);
  var val60 = select(0.0f, data5[(alu16+-510)], alu15);
  var val61 = select(0.0f, data5[(alu16+-448)], alu11);
  var val62 = select(0.0f, data5[(alu16+-447)], alu10);
  var val63 = select(0.0f, data5[(alu16+-446)], alu15);
  var val64 = select(0.0f, data5[(alu16+-384)], alu11);
  var val65 = select(0.0f, data5[(alu16+-383)], alu10);
  var val66 = select(0.0f, data5[(alu16+-382)], alu15);
  var val67 = select(0.0f, data5[(alu16+-320)], alu11);
  var val68 = select(0.0f, data5[(alu16+-319)], alu10);
  var val69 = select(0.0f, data5[(alu16+-318)], alu15);
  var alu17 = (alu5+(lidx0<<12));
  var alu18 = (alu5+(lidx0<<14));
  var val70 = select(0.0f, data1[alu18], alu7);
  var val71 = select(0.0f, data1[(alu18+1)], alu13);
  var val72 = select(0.0f, data1[(alu18+2)], alu6);
  var val73 = select(0.0f, data1[(alu18+1024)], alu7);
  var val74 = select(0.0f, data1[(alu18+1025)], alu13);
  var val75 = select(0.0f, data1[(alu18+1026)], alu6);
  var val76 = select(0.0f, data1[(alu18+2048)], alu7);
  var val77 = select(0.0f, data1[(alu18+2049)], alu13);
  var val78 = select(0.0f, data1[(alu18+2050)], alu6);
  var val79 = select(0.0f, data1[(alu18+3072)], alu7);
  var val80 = select(0.0f, data1[(alu18+3073)], alu13);
  var val81 = select(0.0f, data1[(alu18+3074)], alu6);
  var val82 = select(0.0f, data1[(alu18+4096)], alu7);
  var val83 = select(0.0f, data1[(alu18+4097)], alu13);
  var val84 = select(0.0f, data1[(alu18+4098)], alu6);
  var val85 = select(0.0f, data1[(alu18+5120)], alu7);
  var val86 = select(0.0f, data1[(alu18+5121)], alu13);
  var val87 = select(0.0f, data1[(alu18+5122)], alu6);
  var val88 = select(0.0f, data1[(alu18+6144)], alu7);
  var val89 = select(0.0f, data1[(alu18+6145)], alu13);
  var val90 = select(0.0f, data1[(alu18+6146)], alu6);
  var val91 = select(0.0f, data1[(alu18+7168)], alu7);
  var val92 = select(0.0f, data1[(alu18+7169)], alu13);
  var val93 = select(0.0f, data1[(alu18+7170)], alu6);
  var val94 = select(0.0f, data1[(alu18+8192)], alu7);
  var val95 = select(0.0f, data1[(alu18+8193)], alu13);
  var val96 = select(0.0f, data1[(alu18+8194)], alu6);
  var val97 = select(0.0f, data1[(alu18+9216)], alu7);
  var val98 = select(0.0f, data1[(alu18+9217)], alu13);
  var val99 = select(0.0f, data1[(alu18+9218)], alu6);
  var val100 = select(0.0f, data1[(alu18+10240)], alu7);
  var val101 = select(0.0f, data1[(alu18+10241)], alu13);
  var val102 = select(0.0f, data1[(alu18+10242)], alu6);
  var val103 = select(0.0f, data1[(alu18+11264)], alu7);
  var val104 = select(0.0f, data1[(alu18+11265)], alu13);
  var val105 = select(0.0f, data1[(alu18+11266)], alu6);
  var val106 = select(0.0f, data1[(alu18+12288)], alu7);
  var val107 = select(0.0f, data1[(alu18+12289)], alu13);
  var val108 = select(0.0f, data1[(alu18+12290)], alu6);
  var val109 = select(0.0f, data1[(alu18+13312)], alu7);
  var val110 = select(0.0f, data1[(alu18+13313)], alu13);
  var val111 = select(0.0f, data1[(alu18+13314)], alu6);
  var val112 = select(0.0f, data1[(alu18+14336)], alu7);
  var val113 = select(0.0f, data1[(alu18+14337)], alu13);
  var val114 = select(0.0f, data1[(alu18+14338)], alu6);
  var val115 = select(0.0f, data1[(alu18+15360)], alu7);
  var val116 = select(0.0f, data1[(alu18+15361)], alu13);
  var val117 = select(0.0f, data1[(alu18+15362)], alu6);
  var alu19 = (alu14&(alu6!=true));
  var val118 = select(0.0f, data3[(alu17+-1022)], alu19);
  var val119 = select(0.0f, data3[(alu17+-766)], alu19);
  var val120 = select(0.0f, data3[(alu17+-510)], alu19);
  var val121 = select(0.0f, data3[(alu17+-254)], alu19);
  var val122 = select(0.0f, data3[(alu17+2)], alu19);
  var val123 = select(0.0f, data3[(alu17+258)], alu19);
  var val124 = select(0.0f, data3[(alu17+514)], alu19);
  var val125 = select(0.0f, data3[(alu17+770)], alu19);
  var val126 = select(0.0f, data3[(alu17+1026)], alu19);
  var val127 = select(0.0f, data3[(alu17+1282)], alu19);
  var val128 = select(0.0f, data3[(alu17+1538)], alu19);
  var val129 = select(0.0f, data3[(alu17+1794)], alu19);
  var val130 = select(0.0f, data3[(alu17+2050)], alu19);
  var val131 = select(0.0f, data3[(alu17+2306)], alu19);
  var val132 = select(0.0f, data3[(alu17+2562)], alu19);
  var val133 = select(0.0f, data3[(alu17+2818)], alu19);
  var alu20 = (alu8&(alu13!=true));
  var val134 = select(0.0f, data3[(alu17+-1023)], alu20);
  var val135 = select(0.0f, data3[(alu17+-767)], alu20);
  var val136 = select(0.0f, data3[(alu17+-511)], alu20);
  var val137 = select(0.0f, data3[(alu17+-255)], alu20);
  var val138 = select(0.0f, data3[(alu17+1)], alu20);
  var val139 = select(0.0f, data3[(alu17+257)], alu20);
  var val140 = select(0.0f, data3[(alu17+513)], alu20);
  var val141 = select(0.0f, data3[(alu17+769)], alu20);
  var val142 = select(0.0f, data3[(alu17+1025)], alu20);
  var val143 = select(0.0f, data3[(alu17+1281)], alu20);
  var val144 = select(0.0f, data3[(alu17+1537)], alu20);
  var val145 = select(0.0f, data3[(alu17+1793)], alu20);
  var val146 = select(0.0f, data3[(alu17+2049)], alu20);
  var val147 = select(0.0f, data3[(alu17+2305)], alu20);
  var val148 = select(0.0f, data3[(alu17+2561)], alu20);
  var val149 = select(0.0f, data3[(alu17+2817)], alu20);
  var alu21 = (alu9&(alu7!=true));
  var val150 = select(0.0f, data3[(alu17+-1024)], alu21);
  var val151 = select(0.0f, data3[(alu17+-768)], alu21);
  var val152 = select(0.0f, data3[(alu17+-512)], alu21);
  var val153 = select(0.0f, data3[(alu17+-256)], alu21);
  var val154 = select(0.0f, data3[(alu17+256)], alu21);
  var val155 = select(0.0f, data3[(alu17+512)], alu21);
  var val156 = select(0.0f, data3[(alu17+768)], alu21);
  var val157 = select(0.0f, data3[(alu17+1024)], alu21);
  var val158 = select(0.0f, data3[(alu17+1280)], alu21);
  var val159 = select(0.0f, data3[(alu17+1536)], alu21);
  var val160 = select(0.0f, data3[(alu17+1792)], alu21);
  var val161 = select(0.0f, data3[(alu17+2048)], alu21);
  var val162 = select(0.0f, data3[(alu17+2304)], alu21);
  var val163 = select(0.0f, data3[(alu17+2560)], alu21);
  var val164 = select(0.0f, data3[(alu17+2816)], alu21);
  var val165 = select(0.0f, data3[alu17], alu21);
  var alu22 = (1/val19);
  var alu23 = (1/val21);
  var alu24 = (1/val17);
  data0[alu2] = ((val0*exp2((((val22+val70+val150)-val16)*1.4426950408889634f))*alu24)+(val1*exp2((((val25+val73+val151)-val16)*1.4426950408889634f))*alu24)+(val2*exp2((((val28+val76+val152)-val16)*1.4426950408889634f))*alu24)+(val3*exp2((((val31+val79+val153)-val16)*1.4426950408889634f))*alu24)+(val4*exp2((((val34+val82+val165)-val16)*1.4426950408889634f))*alu24)+(val5*exp2((((val37+val85+val154)-val16)*1.4426950408889634f))*alu24)+(val6*exp2((((val40+val88+val155)-val16)*1.4426950408889634f))*alu24)+(val7*exp2((((val43+val91+val156)-val16)*1.4426950408889634f))*alu24)+(val8*exp2((((val46+val94+val157)-val16)*1.4426950408889634f))*alu24)+(val9*exp2((((val49+val97+val158)-val16)*1.4426950408889634f))*alu24)+(val10*exp2((((val52+val100+val159)-val16)*1.4426950408889634f))*alu24)+(val11*exp2((((val55+val103+val160)-val16)*1.4426950408889634f))*alu24)+(val12*exp2((((val58+val106+val161)-val16)*1.4426950408889634f))*alu24)+(val13*exp2((((val61+val109+val162)-val16)*1.4426950408889634f))*alu24)+(val14*exp2((((val64+val112+val163)-val16)*1.4426950408889634f))*alu24)+(val15*exp2((((val67+val115+val164)-val16)*1.4426950408889634f))*alu24));
  data0[alu3] = ((val0*exp2((((val23+val71+val134)-val18)*1.4426950408889634f))*alu22)+(val1*exp2((((val26+val74+val135)-val18)*1.4426950408889634f))*alu22)+(val2*exp2((((val29+val77+val136)-val18)*1.4426950408889634f))*alu22)+(val3*exp2((((val32+val80+val137)-val18)*1.4426950408889634f))*alu22)+(val4*exp2((((val35+val83+val138)-val18)*1.4426950408889634f))*alu22)+(val5*exp2((((val38+val86+val139)-val18)*1.4426950408889634f))*alu22)+(val6*exp2((((val41+val89+val140)-val18)*1.4426950408889634f))*alu22)+(val7*exp2((((val44+val92+val141)-val18)*1.4426950408889634f))*alu22)+(val8*exp2((((val47+val95+val142)-val18)*1.4426950408889634f))*alu22)+(val9*exp2((((val50+val98+val143)-val18)*1.4426950408889634f))*alu22)+(val10*exp2((((val53+val101+val144)-val18)*1.4426950408889634f))*alu22)+(val11*exp2((((val56+val104+val145)-val18)*1.4426950408889634f))*alu22)+(val12*exp2((((val59+val107+val146)-val18)*1.4426950408889634f))*alu22)+(val13*exp2((((val62+val110+val147)-val18)*1.4426950408889634f))*alu22)+(val14*exp2((((val65+val113+val148)-val18)*1.4426950408889634f))*alu22)+(val15*exp2((((val68+val116+val149)-val18)*1.4426950408889634f))*alu22));
  data0[alu4] = ((val0*exp2((((val24+val72+val118)-val20)*1.4426950408889634f))*alu23)+(val1*exp2((((val27+val75+val119)-val20)*1.4426950408889634f))*alu23)+(val2*exp2((((val30+val78+val120)-val20)*1.4426950408889634f))*alu23)+(val3*exp2((((val33+val81+val121)-val20)*1.4426950408889634f))*alu23)+(val4*exp2((((val36+val84+val122)-val20)*1.4426950408889634f))*alu23)+(val5*exp2((((val39+val87+val123)-val20)*1.4426950408889634f))*alu23)+(val6*exp2((((val42+val90+val124)-val20)*1.4426950408889634f))*alu23)+(val7*exp2((((val45+val93+val125)-val20)*1.4426950408889634f))*alu23)+(val8*exp2((((val48+val96+val126)-val20)*1.4426950408889634f))*alu23)+(val9*exp2((((val51+val99+val127)-val20)*1.4426950408889634f))*alu23)+(val10*exp2((((val54+val102+val128)-val20)*1.4426950408889634f))*alu23)+(val11*exp2((((val57+val105+val129)-val20)*1.4426950408889634f))*alu23)+(val12*exp2((((val60+val108+val130)-val20)*1.4426950408889634f))*alu23)+(val13*exp2((((val63+val111+val131)-val20)*1.4426950408889634f))*alu23)+(val14*exp2((((val66+val114+val132)-val20)*1.4426950408889634f))*alu23)+(val15*exp2((((val69+val117+val133)-val20)*1.4426950408889634f))*alu23));
}`;

const E_42_32_2 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 42 */
  var lidx0 = i32(lindex.x); /* 32 */
  var alu0 = (gidx0<32);
  var val0 = select(0.0f, data1[gidx0], alu0);
  var val1 = select(0.0f, data1[lidx0], alu0);
  var alu1 = (gidx0<40);
  var alu2 = (alu1!=true);
  var alu3 = (lidx0+(gidx0<<5));
  var val2 = data4[alu3];
  var alu4 = (alu3+1344);
  var val3 = data4[alu4];
  var val4 = data4[(alu3+2688)];
  var val5 = data4[(alu3+4032)];
  var val6 = select(0.0f, data3[((gidx0<<2)+(lidx0>>3)+-160)], alu2);
  var alu5 = (alu1&(alu0!=true));
  var val7 = select(0.0f, data2[((gidx0<<1)+(lidx0>>4)+-64)], alu5);
  var val8 = select(0.0f, data3[(lidx0&7)], alu2);
  var val9 = select(0.0f, data2[(lidx0&15)], alu5);
  var alu6 = (val6+val0+val7);
  var alu7 = (val8+val1+val9);
  data0[alu4] = ((val5+alu6+(alu6-val3))*0.5f);
  data0[alu3] = ((val4+alu7+(alu7-val2))*0.5f);
}`;

const E_42_32_2n1 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(32) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 42 */
  var lidx0 = i32(lindex.x); /* 32 */
  var alu0 = (gidx0<32);
  var val0 = select(0.0f, data1[gidx0], alu0);
  var val1 = select(0.0f, data1[lidx0], alu0);
  var alu1 = (gidx0<40);
  var alu2 = (alu1!=true);
  var alu3 = (lidx0+(gidx0<<5));
  var val2 = data4[alu3];
  var alu4 = (alu3+1344);
  var val3 = data4[alu4];
  var val4 = data4[(alu3+2688)];
  var val5 = data4[(alu3+4032)];
  var val6 = select(0.0f, data3[((gidx0<<2)+(lidx0>>3)+-160)], alu2);
  var alu5 = (alu1&(alu0!=true));
  var val7 = select(0.0f, data2[((gidx0<<1)+(lidx0>>4)+-64)], alu5);
  var val8 = select(0.0f, data3[(lidx0&7)], alu2);
  var val9 = select(0.0f, data2[(lidx0&15)], alu5);
  data0[alu4] = (val3+((-val0-val7)-val6)+val5+val6+val0+val7);
  data0[alu3] = (val2+((-val1-val9)-val8)+val4+val8+val1+val9);
}`;

const E_7_84_4_16_3 = `fn nan() -> f32 { let bits = 0xffffffffu; return bitcast<f32>(bits); }
fn is_nan(v:f32) -> bool { return min(v, 1.0) == 1.0 && max(v, -1.0) == -1.0; }
@group(0) @binding(0)
var<uniform> INFINITY : f32;
@group(0) @binding(1)var<storage,read_write>data0:array<f32>;
@group(0) @binding(2)var<storage,read_write>data1:array<f32>;
@group(0) @binding(3)var<storage,read_write>data2:array<f32>;
@group(0) @binding(4)var<storage,read_write>data3:array<f32>;
@group(0) @binding(5)var<storage,read_write>data4:array<f32>;
@compute @workgroup_size(4,16) fn main(@builtin(workgroup_id) gindex: vec3<u32>,@builtin(local_invocation_id) lindex: vec3<u32>) {
  var gidx0 = i32(gindex.x); /* 84 */
  var gidx1 = i32(gindex.y); /* 7 */
  var lidx0 = i32(lindex.x); /* 4 */
  var lidx1 = i32(lindex.y); /* 16 */
  var alu0 = ((gidx1*12)+(lidx0*3));
  var alu1 = (alu0<2);
  var alu2 = (alu0<4);
  var alu3 = (((gidx1+lidx0)<1)!=true);
  var alu4 = (alu1!=true);
  var alu5 = (gidx0<<4);
  var alu6 = (lidx1+alu5);
  var val0 = select(0.0f, data3[alu6], alu1);
  var val1 = select(0.0f, data3[alu6], alu2);
  var alu7 = (lidx1+alu5+(gidx1*16128)+(lidx0*4032));
  var val2 = select(0.0f, data2[alu7], alu1);
  var val3 = select(0.0f, data4[(alu7+-5376)], (alu2!=true));
  var val4 = select(0.0f, data4[(alu7+-4032)], alu3);
  var alu8 = (alu7+-2688);
  var val5 = select(0.0f, data4[alu8], alu4);
  var alu9 = ((lidx0+(gidx1<<2))<1);
  var val6 = select(0.0f, data3[alu6], alu9);
  var alu10 = ((gidx1<1)&(lidx0<1));
  var val7 = select(0.0f, data1[alu6], alu10);
  var val8 = select(0.0f, data1[(alu6+1344)], alu10);
  var val9 = select(0.0f, data2[(alu7+-1344)], (alu9&alu3));
  var val10 = select(0.0f, data2[alu8], (alu2&alu4));
  data0[(alu7+2688)] = (val5+(val2*val0));
  data0[(alu7+1344)] = (val4+(val6*(val8+val9)));
  data0[alu7] = (val3+(val1*(val7+val10)));
}`;

const setupNet = async (device, safetensor) => {
    const metadata = getTensorMetadata(safetensor);
    const infinityBuf = createInfinityUniformBuf(device);

    const layouts=[device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 8, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 6, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 7, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]}),device.createBindGroupLayout({entries: [{binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'uniform' }}, {binding: 1, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 2, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 3, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 4, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },{binding: 5, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]})]

    const buf_0 = createEmptyBuf(device, 128);;
    const buf_1 = createEmptyBuf(device, 64);;
    const buf_2 = createEmptyBuf(device, 32);;
    const buf_3 = createEmptyBuf(device, 1048576);;
    const input0 = createEmptyBuf(device, 786432);;
    const buf_4 = createWeightBuf(device, 1728, getTensorBuffer(safetensor, metadata['net.b1.0.conv.weight']));
    const buf_5 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.running_mean']));
    const buf_6 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.weight']));
    const buf_7 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.running_var']));
    const buf_8 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b1.0.bn.bias']));
    const buf_9 = createEmptyBuf(device, 5376);;
    const buf_10 = createEmptyBuf(device, 524288);;
    const buf_11 = createWeightBuf(device, 18432, getTensorBuffer(safetensor, metadata['net.b1.1.conv.weight']));
    const buf_12 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.running_mean']));
    const buf_13 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.weight']));
    const buf_14 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.running_var']));
    const buf_15 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b1.1.bn.bias']));
    const buf_16 = createEmptyBuf(device, 524288);;
    const buf_17 = createWeightBuf(device, 4096, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.conv.weight']));
    const buf_18 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.running_mean']));
    const buf_19 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.weight']));
    const buf_20 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.running_var']));
    const buf_21 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv1.bn.bias']));
    const buf_22 = createEmptyBuf(device, 262144);;
    const buf_23 = createWeightBuf(device, 9216, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.conv.weight']));
    const buf_24 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.running_mean']));
    const buf_25 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.weight']));
    const buf_26 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.running_var']));
    const buf_27 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv1.bn.bias']));
    const buf_28 = createEmptyBuf(device, 262144);;
    const buf_29 = createWeightBuf(device, 9216, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.conv.weight']));
    const buf_30 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.running_mean']));
    const buf_31 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.weight']));
    const buf_32 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.running_var']));
    const buf_33 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['net.b2.0.bottleneck.0.cv2.bn.bias']));
    const buf_34 = createEmptyBuf(device, 786432);;
    const buf_35 = createWeightBuf(device, 6144, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.conv.weight']));
    const buf_36 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.running_mean']));
    const buf_37 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.weight']));
    const buf_38 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.running_var']));
    const buf_39 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.0.cv2.bn.bias']));
    const buf_40 = createWeightBuf(device, 73728, getTensorBuffer(safetensor, metadata['net.b2.1.conv.weight']));
    const buf_41 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.running_mean']));
    const buf_42 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.weight']));
    const buf_43 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.running_var']));
    const buf_44 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.1.bn.bias']));
    const buf_45 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.conv.weight']));
    const buf_46 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.running_mean']));
    const buf_47 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.weight']));
    const buf_48 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.running_var']));
    const buf_49 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv1.bn.bias']));
    const buf_50 = createEmptyBuf(device, 131072);;
    const buf_51 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.conv.weight']));
    const buf_52 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.running_mean']));
    const buf_53 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.weight']));
    const buf_54 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.running_var']));
    const buf_55 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv1.bn.bias']));
    const buf_56 = createEmptyBuf(device, 131072);;
    const buf_57 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.conv.weight']));
    const buf_58 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.running_mean']));
    const buf_59 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.weight']));
    const buf_60 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.running_var']));
    const buf_61 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.0.cv2.bn.bias']));
    const buf_62 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.conv.weight']));
    const buf_63 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.running_mean']));
    const buf_64 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.weight']));
    const buf_65 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.running_var']));
    const buf_66 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv1.bn.bias']));
    const buf_67 = createEmptyBuf(device, 131072);;
    const buf_68 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.conv.weight']));
    const buf_69 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.running_mean']));
    const buf_70 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.weight']));
    const buf_71 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.running_var']));
    const buf_72 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['net.b2.2.bottleneck.1.cv2.bn.bias']));
    const buf_73 = createWeightBuf(device, 32768, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.conv.weight']));
    const buf_74 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.running_mean']));
    const buf_75 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.weight']));
    const buf_76 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.running_var']));
    const buf_77 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b2.2.cv2.bn.bias']));
    const buf_78 = createWeightBuf(device, 294912, getTensorBuffer(safetensor, metadata['net.b3.0.conv.weight']));
    const buf_79 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.running_mean']));
    const buf_80 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.weight']));
    const buf_81 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.running_var']));
    const buf_82 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.0.bn.bias']));
    const buf_83 = createWeightBuf(device, 65536, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.conv.weight']));
    const buf_84 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.running_mean']));
    const buf_85 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.weight']));
    const buf_86 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.running_var']));
    const buf_87 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv1.bn.bias']));
    const buf_88 = createEmptyBuf(device, 65536);;
    const buf_89 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.conv.weight']));
    const buf_90 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.running_mean']));
    const buf_91 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.weight']));
    const buf_92 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.running_var']));
    const buf_93 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv1.bn.bias']));
    const buf_94 = createEmptyBuf(device, 65536);;
    const buf_95 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.conv.weight']));
    const buf_96 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.running_mean']));
    const buf_97 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.weight']));
    const buf_98 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.running_var']));
    const buf_99 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.0.cv2.bn.bias']));
    const buf_100 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.conv.weight']));
    const buf_101 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.running_mean']));
    const buf_102 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.weight']));
    const buf_103 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.running_var']));
    const buf_104 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv1.bn.bias']));
    const buf_105 = createEmptyBuf(device, 65536);;
    const buf_106 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.conv.weight']));
    const buf_107 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.running_mean']));
    const buf_108 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.weight']));
    const buf_109 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.running_var']));
    const buf_110 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['net.b3.1.bottleneck.1.cv2.bn.bias']));
    const buf_111 = createWeightBuf(device, 131072, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.conv.weight']));
    const buf_112 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.running_mean']));
    const buf_113 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.weight']));
    const buf_114 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.running_var']));
    const buf_115 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b3.1.cv2.bn.bias']));
    const buf_116 = createWeightBuf(device, 1179648, getTensorBuffer(safetensor, metadata['net.b4.0.conv.weight']));
    const buf_117 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.running_mean']));
    const buf_118 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.weight']));
    const buf_119 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.running_var']));
    const buf_120 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.0.bn.bias']));
    const buf_121 = createWeightBuf(device, 262144, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.conv.weight']));
    const buf_122 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.running_mean']));
    const buf_123 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.weight']));
    const buf_124 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.running_var']));
    const buf_125 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv1.bn.bias']));
    const buf_126 = createEmptyBuf(device, 32768);;
    const buf_127 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.conv.weight']));
    const buf_128 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.running_mean']));
    const buf_129 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.weight']));
    const buf_130 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.running_var']));
    const buf_131 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv1.bn.bias']));
    const buf_132 = createEmptyBuf(device, 32768);;
    const buf_133 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.conv.weight']));
    const buf_134 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.running_mean']));
    const buf_135 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.weight']));
    const buf_136 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.running_var']));
    const buf_137 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b4.1.bottleneck.0.cv2.bn.bias']));
    const buf_138 = createEmptyBuf(device, 98304);;
    const buf_139 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.conv.weight']));
    const buf_140 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.running_mean']));
    const buf_141 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.weight']));
    const buf_142 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.running_var']));
    const buf_143 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b4.1.cv2.bn.bias']));
    const buf_144 = createWeightBuf(device, 131072, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.conv.weight']));
    const buf_145 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.running_mean']));
    const buf_146 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.weight']));
    const buf_147 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.running_var']));
    const buf_148 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['net.b5.0.cv1.bn.bias']));
    const buf_149 = createEmptyBuf(device, 32768);;
    const buf_150 = createEmptyBuf(device, 32768);;
    const buf_151 = createWeightBuf(device, 524288, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.conv.weight']));
    const buf_152 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.running_mean']));
    const buf_153 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.weight']));
    const buf_154 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.running_var']));
    const buf_155 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['net.b5.0.cv2.bn.bias']));
    const buf_156 = createEmptyBuf(device, 393216);;
    const buf_157 = createWeightBuf(device, 196608, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.conv.weight']));
    const buf_158 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.running_mean']));
    const buf_159 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.weight']));
    const buf_160 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.running_var']));
    const buf_161 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv1.bn.bias']));
    const buf_162 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.conv.weight']));
    const buf_163 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.running_mean']));
    const buf_164 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.weight']));
    const buf_165 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.running_var']));
    const buf_166 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv1.bn.bias']));
    const buf_167 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.conv.weight']));
    const buf_168 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.running_mean']));
    const buf_169 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.weight']));
    const buf_170 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.running_var']));
    const buf_171 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n1.bottleneck.0.cv2.bn.bias']));
    const buf_172 = createEmptyBuf(device, 196608);;
    const buf_173 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.conv.weight']));
    const buf_174 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.running_mean']));
    const buf_175 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.weight']));
    const buf_176 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.running_var']));
    const buf_177 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n1.cv2.bn.bias']));
    const buf_178 = createWeightBuf(device, 49152, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.conv.weight']));
    const buf_179 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.running_mean']));
    const buf_180 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.weight']));
    const buf_181 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.running_var']));
    const buf_182 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv1.bn.bias']));
    const buf_183 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.conv.weight']));
    const buf_184 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.running_mean']));
    const buf_185 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.weight']));
    const buf_186 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.running_var']));
    const buf_187 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv1.bn.bias']));
    const buf_188 = createWeightBuf(device, 36864, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.conv.weight']));
    const buf_189 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.running_mean']));
    const buf_190 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.weight']));
    const buf_191 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.running_var']));
    const buf_192 = createWeightBuf(device, 128, getTensorBuffer(safetensor, metadata['fpn.n2.bottleneck.0.cv2.bn.bias']));
    const buf_193 = createWeightBuf(device, 24576, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.conv.weight']));
    const buf_194 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.running_mean']));
    const buf_195 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.weight']));
    const buf_196 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.running_var']));
    const buf_197 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n2.cv2.bn.bias']));
    const buf_198 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.0.0.conv.weight']));
    const buf_199 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.running_mean']));
    const buf_200 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.weight']));
    const buf_201 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.running_var']));
    const buf_202 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.0.bn.bias']));
    const buf_203 = createEmptyBuf(device, 327680);;
    const buf_204 = createWeightBuf(device, 184320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.conv.weight']));
    const buf_205 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.running_mean']));
    const buf_206 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.weight']));
    const buf_207 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.running_var']));
    const buf_208 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.0.bn.bias']));
    const buf_209 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n3.conv.weight']));
    const buf_210 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.running_mean']));
    const buf_211 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.weight']));
    const buf_212 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.running_var']));
    const buf_213 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n3.bn.bias']));
    const buf_214 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.0.1.conv.weight']));
    const buf_215 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.running_mean']));
    const buf_216 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.weight']));
    const buf_217 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.running_var']));
    const buf_218 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.1.bn.bias']));
    const buf_219 = createEmptyBuf(device, 327680);;
    const buf_220 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.0.1.conv.weight']));
    const buf_221 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.running_mean']));
    const buf_222 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.weight']));
    const buf_223 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.running_var']));
    const buf_224 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.1.bn.bias']));
    const buf_225 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.0.2.weight']));
    const buf_226 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.0.2.bias']));
    const buf_227 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.0.2.weight']));
    const buf_228 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.0.2.bias']));
    const buf_229 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.conv.weight']));
    const buf_230 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.running_mean']));
    const buf_231 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.weight']));
    const buf_232 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.running_var']));
    const buf_233 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv1.bn.bias']));
    const buf_234 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.conv.weight']));
    const buf_235 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.running_mean']));
    const buf_236 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.weight']));
    const buf_237 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.running_var']));
    const buf_238 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv1.bn.bias']));
    const buf_239 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.conv.weight']));
    const buf_240 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.running_mean']));
    const buf_241 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.weight']));
    const buf_242 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.running_var']));
    const buf_243 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['fpn.n4.bottleneck.0.cv2.bn.bias']));
    const buf_244 = createWeightBuf(device, 98304, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.conv.weight']));
    const buf_245 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.running_mean']));
    const buf_246 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.weight']));
    const buf_247 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.running_var']));
    const buf_248 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n4.cv2.bn.bias']));
    const buf_249 = createWeightBuf(device, 294912, getTensorBuffer(safetensor, metadata['head.cv2.1.0.conv.weight']));
    const buf_250 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.running_mean']));
    const buf_251 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.weight']));
    const buf_252 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.running_var']));
    const buf_253 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.0.bn.bias']));
    const buf_254 = createEmptyBuf(device, 81920);;
    const buf_255 = createWeightBuf(device, 368640, getTensorBuffer(safetensor, metadata['head.cv3.1.0.conv.weight']));
    const buf_256 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.running_mean']));
    const buf_257 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.weight']));
    const buf_258 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.running_var']));
    const buf_259 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.0.bn.bias']));
    const buf_260 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n5.conv.weight']));
    const buf_261 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.running_mean']));
    const buf_262 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.weight']));
    const buf_263 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.running_var']));
    const buf_264 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n5.bn.bias']));
    const buf_265 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.1.1.conv.weight']));
    const buf_266 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.running_mean']));
    const buf_267 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.weight']));
    const buf_268 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.running_var']));
    const buf_269 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.1.bn.bias']));
    const buf_270 = createEmptyBuf(device, 81920);;
    const buf_271 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.1.1.conv.weight']));
    const buf_272 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.running_mean']));
    const buf_273 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.weight']));
    const buf_274 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.running_var']));
    const buf_275 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.1.bn.bias']));
    const buf_276 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.1.2.weight']));
    const buf_277 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.1.2.bias']));
    const buf_278 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.1.2.weight']));
    const buf_279 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.1.2.bias']));
    const buf_280 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.conv.weight']));
    const buf_281 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.running_mean']));
    const buf_282 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.weight']));
    const buf_283 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.running_var']));
    const buf_284 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv1.bn.bias']));
    const buf_285 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.conv.weight']));
    const buf_286 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.running_mean']));
    const buf_287 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.weight']));
    const buf_288 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.running_var']));
    const buf_289 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv1.bn.bias']));
    const buf_290 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.conv.weight']));
    const buf_291 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.running_mean']));
    const buf_292 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.weight']));
    const buf_293 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.running_var']));
    const buf_294 = createWeightBuf(device, 512, getTensorBuffer(safetensor, metadata['fpn.n6.bottleneck.0.cv2.bn.bias']));
    const buf_295 = createWeightBuf(device, 393216, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.conv.weight']));
    const buf_296 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.running_mean']));
    const buf_297 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.weight']));
    const buf_298 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.running_var']));
    const buf_299 = createWeightBuf(device, 1024, getTensorBuffer(safetensor, metadata['fpn.n6.cv2.bn.bias']));
    const buf_300 = createEmptyBuf(device, 16384);;
    const buf_301 = createWeightBuf(device, 589824, getTensorBuffer(safetensor, metadata['head.cv2.2.0.conv.weight']));
    const buf_302 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.running_mean']));
    const buf_303 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.weight']));
    const buf_304 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.running_var']));
    const buf_305 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.0.bn.bias']));
    const buf_306 = createEmptyBuf(device, 20480);;
    const buf_307 = createWeightBuf(device, 737280, getTensorBuffer(safetensor, metadata['head.cv3.2.0.conv.weight']));
    const buf_308 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.running_mean']));
    const buf_309 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.weight']));
    const buf_310 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.running_var']));
    const buf_311 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.0.bn.bias']));
    const buf_312 = createEmptyBuf(device, 16384);;
    const buf_313 = createWeightBuf(device, 147456, getTensorBuffer(safetensor, metadata['head.cv2.2.1.conv.weight']));
    const buf_314 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.running_mean']));
    const buf_315 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.weight']));
    const buf_316 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.running_var']));
    const buf_317 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.1.bn.bias']));
    const buf_318 = createEmptyBuf(device, 20480);;
    const buf_319 = createWeightBuf(device, 230400, getTensorBuffer(safetensor, metadata['head.cv3.2.1.conv.weight']));
    const buf_320 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.running_mean']));
    const buf_321 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.weight']));
    const buf_322 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.running_var']));
    const buf_323 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.1.bn.bias']));
    const buf_324 = createWeightBuf(device, 16384, getTensorBuffer(safetensor, metadata['head.cv2.2.2.weight']));
    const buf_325 = createWeightBuf(device, 256, getTensorBuffer(safetensor, metadata['head.cv2.2.2.bias']));
    const buf_326 = createWeightBuf(device, 25600, getTensorBuffer(safetensor, metadata['head.cv3.2.2.weight']));
    const buf_327 = createWeightBuf(device, 320, getTensorBuffer(safetensor, metadata['head.cv3.2.2.bias']));
    const buf_328 = createEmptyBuf(device, 21504);;
    const buf_329 = createEmptyBuf(device, 430080);;
    const buf_330 = createEmptyBuf(device, 21504);;
    const buf_331 = createEmptyBuf(device, 21504);;
    const buf_332 = createWeightBuf(device, 64, getTensorBuffer(safetensor, metadata['head.dfl.conv.weight']));
    const buf_333 = createEmptyBuf(device, 10752);;
    const buf_334 = createEmptyBuf(device, 10752);;
    const output0 = createEmptyBuf(device, 451584);;

    const gpuWriteBuffer0 = device.createBuffer({size:input0.size, usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE });

    const gpuReadBuffer0 = device.createBuffer({size:output0.size, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ });

    const kernels = [r_32_16_2, r_16_16, r_8_8, r_4_16_2_8_16_3_4_4_3_3, E_14_32_3, r_8_8_8_16_16_4_4_3_3, r_64_8_16_4_4_32, r_4_8_8_16_16_4_4_3_3, r_4_8_8_16_16_4_4_3_3n1, E_6_64_8_16_4, r_64_8_16_12_4_4_4, r_16_2_16_8_32_4_4_3_3, r_2_16_8_16_16_4_4_4, r_8_2_16_8_32_4_4_3_3, r_8_2_16_8_32_4_4_3_3n1, r_8_2_16_8_32_4_4_3_3n2, r_8_2_16_8_32_4_4_3_3n3, E_16_16_8_16_4, r_2_16_8_16_32_4_4_4, r_16_2_16_4_64_4_4_3_3, r_4_4_8_16_32_4_4_4, r_8_2_16_4_64_4_4_3_3, r_8_2_16_4_64_4_4_3_3n1, r_8_2_16_4_64_4_4_3_3n2, r_8_2_16_4_64_4_4_3_3n3, E_32_4_8_16_4, r_4_4_8_16_64_4_4_4, r_8_8_8_2_128_4_4_3_3, r_8_8_16_64_4_4_4, r_4_8_8_2_128_4_4_3_3, r_4_8_8_2_128_4_4_3_3n1, E_48_8_16_4, r_8_8_16_96_4_4_4, r_4_8_16_64_4_4_4, r_64_2_8_8_5_5, r_64_2_8_8_5_5, r_64_2_8_8_5_5, E_64_8_16_4, r_8_8_16_128_4_4_4, E_192_2_16_4_4, r_4_4_8_16_96_4_4_4, r_8_2_16_4_64_4_4_3_3, r_8_2_16_4_64_4_4_3_3n2, E_24_4_8_16_4, r_4_4_8_16_48_4_4_4, E_192_2_16_8_4, r_2_16_8_16_48_4_4_4, r_8_2_16_8_32_4_4_3_3, r_8_2_16_8_32_4_4_3_3n2, E_12_16_8_16_4, r_2_16_8_16_24_4_4_4, r_16_2_16_8_64_4_4_3_3, r_20_2_16_8_64_4_4_3_3, r_8_2_16_4_64_4_4_3_3n4, r_16_2_16_8_64_4_4_3_3, r_20_2_16_8_80_4_4_3_3, E_24_4_8_16_4n1, r_2_16_8_16_16_4_4_4n1, r_5_16_4_16_20_4_4_4, r_4_4_8_16_48_4_4_4, r_8_2_16_4_64_4_4_3_3, r_8_2_16_4_64_4_4_3_3n2, E_24_4_8_16_4, r_4_4_8_16_48_4_4_4, r_8_2_16_4_128_4_4_3_3, r_10_2_16_4_128_4_4_3_3, r_4_8_8_2_128_4_4_3_3n2, r_8_2_16_4_64_4_4_3_3n2, r_10_2_16_4_80_4_4_3_3, E_48_8_16_4n1, r_2_4_8_16_16_4_4_4, r_5_4_4_16_20_4_4_4, r_8_8_16_96_4_4_4, r_4_8_8_2_128_4_4_3_3, r_4_8_8_2_128_4_4_3_3n3, E_48_8_16_4, r_8_8_16_96_4_4_4, r_2_8_8_2_256_4_4_3_3, r_5_4_8_2_256_4_4_3_3, r_2_8_8_2_64_4_4_3_3, r_5_4_8_2_80_4_4_3_3, r_2_8_16_16_4_4_4, r_5_4_16_20_4_4_4, r_84_4_16_16, E_10_28_8_16_3, r_28_4_16_3_16, r_28_4_16_3_16n1, E_42_32_2, E_42_32_2n1, E_7_84_4_16_3];
    const pipelines = await Promise.all(kernels.map(async (name, i) => {
      return await device.createComputePipelineAsync({
          layout: device.createPipelineLayout({
              bindGroupLayouts: [layouts[i]],
          }),
          compute: {
              module: device.createShaderModule({
                  code: name,
              }),
              entryPoint: "main",
          },
      });
  }))

    return async (_input0) => {
        const commandEncoder = device.createCommandEncoder();
        await gpuWriteBuffer0.mapAsync(GPUMapMode.WRITE);
        new Float32Array(gpuWriteBuffer0.getMappedRange()).set(_input0);
        gpuWriteBuffer0.unmap();
        commandEncoder.copyBufferToBuffer(gpuWriteBuffer0, 0, input0, 0, gpuWriteBuffer0.size);
        addComputePass(device, commandEncoder, pipelines[0], layouts[0], infinityBuf, [buf_0], [32, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[1], layouts[1], infinityBuf, [buf_1], [16, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[2], layouts[2], infinityBuf, [buf_2], [1, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[3], layouts[3], infinityBuf, [buf_3, input0, buf_4, buf_5, buf_6, buf_7, buf_8], [2, 16, 4]);
        addComputePass(device, commandEncoder, pipelines[4], layouts[4], infinityBuf, [buf_9], [14, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[5], layouts[5], infinityBuf, [buf_10, buf_3, buf_11, buf_12, buf_13, buf_14, buf_15], [8, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[6], layouts[6], infinityBuf, [buf_16, buf_10, buf_17, buf_18, buf_19, buf_20, buf_21], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[7], layouts[7], infinityBuf, [buf_22, buf_16, buf_23, buf_24, buf_25, buf_26, buf_27], [8, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[8], layouts[8], infinityBuf, [buf_28, buf_16, buf_22, buf_29, buf_30, buf_31, buf_32, buf_33], [8, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[9], layouts[9], infinityBuf, [buf_34, buf_16, buf_28], [64, 6, 1]);
        addComputePass(device, commandEncoder, pipelines[10], layouts[10], infinityBuf, [buf_10, buf_34, buf_35, buf_36, buf_37, buf_38, buf_39], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[11], layouts[11], infinityBuf, [buf_22, buf_10, buf_40, buf_41, buf_42, buf_43, buf_44], [2, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[12], layouts[12], infinityBuf, [buf_28, buf_22, buf_45, buf_46, buf_47, buf_48, buf_49], [16, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[13], layouts[13], infinityBuf, [buf_50, buf_28, buf_51, buf_52, buf_53, buf_54, buf_55], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[14], layouts[14], infinityBuf, [buf_56, buf_28, buf_50, buf_57, buf_58, buf_59, buf_60, buf_61], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[15], layouts[15], infinityBuf, [buf_50, buf_56, buf_62, buf_63, buf_64, buf_65, buf_66], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[16], layouts[16], infinityBuf, [buf_67, buf_56, buf_50, buf_68, buf_69, buf_70, buf_71, buf_72], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[17], layouts[17], infinityBuf, [buf_16, buf_28, buf_56, buf_67], [16, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[18], layouts[18], infinityBuf, [buf_22, buf_16, buf_73, buf_74, buf_75, buf_76, buf_77], [16, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[19], layouts[19], infinityBuf, [buf_56, buf_22, buf_78, buf_79, buf_80, buf_81, buf_82], [16, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[20], layouts[20], infinityBuf, [buf_50, buf_56, buf_83, buf_84, buf_85, buf_86, buf_87], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[21], layouts[21], infinityBuf, [buf_88, buf_50, buf_89, buf_90, buf_91, buf_92, buf_93], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[22], layouts[22], infinityBuf, [buf_94, buf_50, buf_88, buf_95, buf_96, buf_97, buf_98, buf_99], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[23], layouts[23], infinityBuf, [buf_88, buf_94, buf_100, buf_101, buf_102, buf_103, buf_104], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[24], layouts[24], infinityBuf, [buf_105, buf_94, buf_88, buf_106, buf_107, buf_108, buf_109, buf_110], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[25], layouts[25], infinityBuf, [buf_28, buf_50, buf_94, buf_105], [4, 32, 1]);
        addComputePass(device, commandEncoder, pipelines[26], layouts[26], infinityBuf, [buf_67, buf_28, buf_111, buf_112, buf_113, buf_114, buf_115], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[27], layouts[27], infinityBuf, [buf_94, buf_67, buf_116, buf_117, buf_118, buf_119, buf_120], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[28], layouts[28], infinityBuf, [buf_88, buf_94, buf_121, buf_122, buf_123, buf_124, buf_125], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[29], layouts[29], infinityBuf, [buf_126, buf_88, buf_127, buf_128, buf_129, buf_130, buf_131], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[30], layouts[30], infinityBuf, [buf_132, buf_88, buf_126, buf_133, buf_134, buf_135, buf_136, buf_137], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[31], layouts[31], infinityBuf, [buf_138, buf_88, buf_132], [48, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[32], layouts[32], infinityBuf, [buf_105, buf_138, buf_139, buf_140, buf_141, buf_142, buf_143], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[33], layouts[33], infinityBuf, [buf_126, buf_105, buf_144, buf_145, buf_146, buf_147, buf_148], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[34], layouts[34], infinityBuf, [buf_132, buf_126], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[35], layouts[35], infinityBuf, [buf_149, buf_132], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[36], layouts[36], infinityBuf, [buf_150, buf_149], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[37], layouts[37], infinityBuf, [buf_56, buf_126, buf_132, buf_149, buf_150], [64, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[38], layouts[38], infinityBuf, [buf_94, buf_56, buf_151, buf_152, buf_153, buf_154, buf_155], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[39], layouts[39], infinityBuf, [buf_156, buf_94, buf_67], [192, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[40], layouts[40], infinityBuf, [buf_50, buf_156, buf_157, buf_158, buf_159, buf_160, buf_161], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[41], layouts[41], infinityBuf, [buf_88, buf_50, buf_162, buf_163, buf_164, buf_165, buf_166], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[42], layouts[42], infinityBuf, [buf_105, buf_88, buf_167, buf_168, buf_169, buf_170, buf_171], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[43], layouts[43], infinityBuf, [buf_172, buf_50, buf_105], [4, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[44], layouts[44], infinityBuf, [buf_67, buf_172, buf_173, buf_174, buf_175, buf_176, buf_177], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[45], layouts[45], infinityBuf, [buf_34, buf_67, buf_22], [2, 192, 1]);
        addComputePass(device, commandEncoder, pipelines[46], layouts[46], infinityBuf, [buf_22, buf_34, buf_178, buf_179, buf_180, buf_181, buf_182], [16, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[47], layouts[47], infinityBuf, [buf_56, buf_22, buf_183, buf_184, buf_185, buf_186, buf_187], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[48], layouts[48], infinityBuf, [buf_50, buf_56, buf_188, buf_189, buf_190, buf_191, buf_192], [2, 8, 1]);
        addComputePass(device, commandEncoder, pipelines[49], layouts[49], infinityBuf, [buf_156, buf_22, buf_50], [16, 12, 1]);
        addComputePass(device, commandEncoder, pipelines[50], layouts[50], infinityBuf, [buf_28, buf_156, buf_193, buf_194, buf_195, buf_196, buf_197], [16, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[51], layouts[51], infinityBuf, [buf_22, buf_28, buf_198, buf_199, buf_200, buf_201, buf_202], [2, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[52], layouts[52], infinityBuf, [buf_203, buf_28, buf_204, buf_205, buf_206, buf_207, buf_208], [2, 20, 1]);
        addComputePass(device, commandEncoder, pipelines[53], layouts[53], infinityBuf, [buf_88, buf_28, buf_209, buf_210, buf_211, buf_212, buf_213], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[54], layouts[54], infinityBuf, [buf_28, buf_22, buf_214, buf_215, buf_216, buf_217, buf_218], [2, 16, 1]);
        addComputePass(device, commandEncoder, pipelines[55], layouts[55], infinityBuf, [buf_219, buf_203, buf_220, buf_221, buf_222, buf_223, buf_224], [2, 20, 1]);
        addComputePass(device, commandEncoder, pipelines[56], layouts[56], infinityBuf, [buf_172, buf_88, buf_67], [4, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[57], layouts[57], infinityBuf, [buf_22, buf_28, buf_225, buf_226], [16, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[58], layouts[58], infinityBuf, [buf_203, buf_219, buf_227, buf_228], [16, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[59], layouts[59], infinityBuf, [buf_67, buf_172, buf_229, buf_230, buf_231, buf_232, buf_233], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[60], layouts[60], infinityBuf, [buf_105, buf_67, buf_234, buf_235, buf_236, buf_237, buf_238], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[61], layouts[61], infinityBuf, [buf_88, buf_105, buf_239, buf_240, buf_241, buf_242, buf_243], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[62], layouts[62], infinityBuf, [buf_172, buf_67, buf_88], [4, 24, 1]);
        addComputePass(device, commandEncoder, pipelines[63], layouts[63], infinityBuf, [buf_56, buf_172, buf_244, buf_245, buf_246, buf_247, buf_248], [4, 4, 1]);
        addComputePass(device, commandEncoder, pipelines[64], layouts[64], infinityBuf, [buf_105, buf_56, buf_249, buf_250, buf_251, buf_252, buf_253], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[65], layouts[65], infinityBuf, [buf_254, buf_56, buf_255, buf_256, buf_257, buf_258, buf_259], [10, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[66], layouts[66], infinityBuf, [buf_126, buf_56, buf_260, buf_261, buf_262, buf_263, buf_264], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[67], layouts[67], infinityBuf, [buf_88, buf_105, buf_265, buf_266, buf_267, buf_268, buf_269], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[68], layouts[68], infinityBuf, [buf_270, buf_254, buf_271, buf_272, buf_273, buf_274, buf_275], [10, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[69], layouts[69], infinityBuf, [buf_138, buf_126, buf_94], [48, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[70], layouts[70], infinityBuf, [buf_94, buf_88, buf_276, buf_277], [4, 2, 1]);
        addComputePass(device, commandEncoder, pipelines[71], layouts[71], infinityBuf, [buf_254, buf_270, buf_278, buf_279], [4, 5, 1]);
        addComputePass(device, commandEncoder, pipelines[72], layouts[72], infinityBuf, [buf_105, buf_138, buf_280, buf_281, buf_282, buf_283, buf_284], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[73], layouts[73], infinityBuf, [buf_132, buf_105, buf_285, buf_286, buf_287, buf_288, buf_289], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[74], layouts[74], infinityBuf, [buf_149, buf_132, buf_290, buf_291, buf_292, buf_293, buf_294], [4, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[75], layouts[75], infinityBuf, [buf_138, buf_105, buf_149], [48, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[76], layouts[76], infinityBuf, [buf_88, buf_138, buf_295, buf_296, buf_297, buf_298, buf_299], [8, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[77], layouts[77], infinityBuf, [buf_300, buf_88, buf_301, buf_302, buf_303, buf_304, buf_305], [2, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[78], layouts[78], infinityBuf, [buf_306, buf_88, buf_307, buf_308, buf_309, buf_310, buf_311], [5, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[79], layouts[79], infinityBuf, [buf_312, buf_300, buf_313, buf_314, buf_315, buf_316, buf_317], [2, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[80], layouts[80], infinityBuf, [buf_318, buf_306, buf_319, buf_320, buf_321, buf_322, buf_323], [5, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[81], layouts[81], infinityBuf, [buf_300, buf_312, buf_324, buf_325], [2, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[82], layouts[82], infinityBuf, [buf_306, buf_318, buf_326, buf_327], [5, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[83], layouts[83], infinityBuf, [buf_328, buf_22, buf_94, buf_300], [84, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[84], layouts[84], infinityBuf, [buf_329, buf_203, buf_254, buf_306], [28, 10, 1]);
        addComputePass(device, commandEncoder, pipelines[85], layouts[85], infinityBuf, [buf_330, buf_22, buf_94, buf_300, buf_328], [28, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[86], layouts[86], infinityBuf, [buf_331, buf_22, buf_94, buf_300, buf_328, buf_330, buf_332], [28, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[87], layouts[87], infinityBuf, [buf_333, buf_0, buf_1, buf_2, buf_331], [42, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[88], layouts[88], infinityBuf, [buf_334, buf_0, buf_1, buf_2, buf_331], [42, 1, 1]);
        addComputePass(device, commandEncoder, pipelines[89], layouts[89], infinityBuf, [output0, buf_333, buf_334, buf_9, buf_329], [84, 7, 1]);
        commandEncoder.copyBufferToBuffer(output0, 0, gpuReadBuffer0, 0, output0.size);
        const gpuCommands = commandEncoder.finish();
        device.queue.submit([gpuCommands]);

        await gpuReadBuffer0.mapAsync(GPUMapMode.READ);
        const resultBuffer0 = new Float32Array(gpuReadBuffer0.size/4);
        resultBuffer0.set(new Float32Array(gpuReadBuffer0.getMappedRange()));
        gpuReadBuffer0.unmap();
        return [resultBuffer0];
    }
}
  

const loadNet = async (device) => { return await fetch('net.safetensors').then(x => x.arrayBuffer()).then(x => setupNet(device, new Uint8Array(x))); }